issueID	Project	issue_Summary	Description	Type	Status	Priority	Resolution	Affects_version	Fix_version	Component	Label	Environment	Assignee	Reporter	CreatedDate	UpdateDate	ResolvedDate
SHIRO-1	SHIRO	mvn install fails	mvn install fails. Need to rename some classes, etc.	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Alan Cabrera	Alan Cabrera
SHIRO-10	SHIRO	Aliases in the ini configuration builder do not work correctly	Aliases in the ini configuration builder do not work correctly. When one gets updated the aliases do not. This can cause problems if one is explicitly creating a security manager and it gets overwritten by the default created and added w/ the "alias" sm. In this case the default replaces the explicitly created security manager.	Bug	CLOSED	Major	Won't Fix	None	1.0.0	None	None		0	Alan Cabrera	Alan Cabrera
SHIRO-100	SHIRO	unable to edit http://incubator.apache.org/ki/download.html	Content-wise, the line svn co http://svn.apache.org/repos/asf/incubator/jsecurity/trunk/ is to be replaced by svn co http://svn.apache.org/repos/asf/incubator/shiro/trunk/ . I tried to edit this directly in the wiki. Ok, in a first step, anonymous editing is not allowed and the wiki demands me to create an account in order to be able to edit. I created the account "markus.pilzecker@web.de" and retry to edit the wiki page mentioned above. Confluence answers with "Page not found", while clearly showing in the head line, that it considers me logged in as "markus.pilzecker@web.de". {Ok, then, once another round to create ya account on Jira {why two different?} . 'Seemed to work. At least, I'm here. How many bugs remain unreported with this double loop?}	Bug	CLOSED	Major	Won't Fix	None	Incubation	Web	None	windows, mozilla	0	Unassigned	markus.pilzecker@web
SHIRO-101	SHIRO	Comma in role in the properties file is not read correctly by the PropertyRealm	I had the following the property file. user.luke=luke,Pilot role.Pilot=xWing:fly:xxx,yyy Now supposdly subject.isPermitted("xWing:fly:xxx") and Subject.isPermitted("xWing:fly:yyy") should both return true. this is not the case, since the first returns true and the second false. Now lets exchange the last term as follows: role.Pilot=xWing:fly:yyy,xxx. and make the same calls again. Now we see the forst returns false and the second returns true. So now we know that only the first token before the comma is read. Looking into shiro code in org.apache.shiro.util.PermissionUtils.toPermissionStrings() which calls in turn StringUtils.split(permissionString). This function splits the string around the comma. So from role.Pilot=xWing:fly:xxx,yyy we get two string: xWing:fly:xxx and yyy. To prove this theory I called Subject.isPermitted("yyy") which returned true. My suggestion would be not to call PermissionUtils at all, since its being called from WildcardPermission which in turn splits the String using * then the comma afterwards. So it makes no sense splitting the string with the comma two times, since the second time there would be nothing to split anyway. Best regards and thanks for your efforts	Bug	CLOSED	Major	Not A Problem	0.9-RC1, 0.9	1.0.0	Configuration	None	ubuntu, eclipse	0	Unassigned	Moataz Elmasry
SHIRO-102	SHIRO	Set-up AutoExport of Shiro documentation to the appropriate location	In order to post documentation on the Shiro site, the documentation has to be exported onto some online space where the main site can link to it. Further, it needs to be set up such that the documentation is auto-exported with every build so that the shiro site is automatically kept up to date. Here is the email thread from the dev list that covers the issue in more detail: On Wed, Sep 9, 2009 at 4:43 PM, Les Hazlewood <les@hazlewood.com> wrote: There we go - the 'incubator www site' is what I'm missing. It looks like this is what we need to know: http://www.apache.org/dev/project-site.html On Wed, Sep 9, 2009 at 1:26 PM, Kalle Korhonen <kalle.o.korhonen@gmail.com> wrote: > Just a few examples of Maven-generated Apache project sites (many of > them are Maven-powered): > http://commons.apache.org/lang/ > http://logging.apache.org/log4j/ > http://tapestry.apache.org/tapestry5/ > http://incubator.apache.org/chemistry/ > > Note the last one is an incubator project. I suppose you just need a > directory on the incubator www site to publish the contents to. > > Kalle > > > On Wed, Sep 9, 2009 at 10:15 AM, Les Hazlewood<lhazlewood@apache.org> wrote: >> +1 >> >> Mentors, how would we go about this process? >> >> I'm not familiar with where the generated site would be uploaded. >> I'm assuming after it is uploaded (by the build), that our wiki would >> just link to that location? >> >> Thanks, >> >> Les >> >> On Tue, Sep 8, 2009 at 6:56 PM, Kalle Korhonen >> <kalle.o.korhonen@gmail.com> wrote: >>> I've always maintained that the best option is to combine aspects of >>> both a static (Maven) site and a wiki. Actually I managed to do >>> exactly that for Trails project, seamlessly mixing Maven site and >>> Confluence content with the help of Codehaus' clever site layout >>> renderer and a heavily customized Maven site skin. Basically Codehaus' >>> site renderer pulls content snippets out of confluence and puts them >>> together as one page (sort of a smart server-side include). However, >>> Shiro's not a Codehaus project and Maven 3 is not here yet. In the >>> meantime, I agree that Confluence space is probably easier to use as >>> the main site, but nevertheless we need a Maven site destination to >>> publish the javadocs and the rest of useful generated content (data >>> pulled from pom, quality reports, etc.) and that we can do in the >>> short term. Agree? >>> >>> Kalle >>> >>> >>> 2009/9/8 Tamás Cservenák <tamas@cservenak.net>: >>>> Yup, >>>> especially if you consider the upcoming maven3, and how it will >>>> redefine the site plugin... The site plugin as is now – in maven >>>> 2.x line – was generally a mistake. It is too coupled to core (or >>>> core is coupled to site plugin because of reporting, depends on how >>>> you look at it), and did not left place for any alternative >>>> reporting engine. This is what will change in >>>> maven3 regarding to this plugin. >>>> >>>> t >>>> >>>> On Tue, Sep 8, 2009 at 5:57 AM, Craig L Russell <Craig.Russell@sun.com>wrote: >>>> >>>>> Hi, >>>>> >>>>> I am inclined to agree with Tamas. >>>>> >>>>> From my experience, maven is great for getting something going >>>>> pretty quickly but I haven't seen it to be flexible enough to run the entire site. >>>>> Confluence is both easy to use and powerful and allows for some >>>>> pretty nice customizations of the look and feel of the site. >>>>> >>>>> Craig >>>>> >>>>> >>>>> On Sep 7, 2009, at 12:14 PM, Tamás Cservenák wrote: >>>>> >>>>> Hi, >>>>>> >>>>>> I would not recommend using (and tying to) maven-site-plugin.... >>>>>> You have plenty of better alternatives: >>>>>> http://xsite.codehaus.org/ or Confluence (either publishing it >>>>>> directly or for authoring only, and exporting + post-processing pages), etc. >>>>>> Maven Site plugin is generally good to have reports (Javadoc, >>>>>> coverage, >>>>>> etc) >>>>>> generated, but using it for main site is something I would not recommend. >>>>>> >>>>>> Thanks, >>>>>> t >>>>>> >>>>>> >>>>>> On Mon, Sep 7, 2009 at 6:05 PM, Salazar, Alexander < >>>>>> Salazar_Alex@gsb.stanford.edu> wrote: >>>>>> >>>>>> I'd like to get an opinion on this Maven site how you'd like to >>>>>> move >>>>>>> forward so that I can starting working on the Shiro site and web >>>>>>> documentation. >>>>>>> >>>>>>> Since I'm new to Maven, I took sometime this weekend to play >>>>>>> with it and its site plugin. Not sure if this project ever used >>>>>>> it before but its impressive how easy it makes building documentation into a site. >>>>>>> >>>>>>> Though I'm still not sure of the pros and cons for a wiki >>>>>>> primary site, I built out a basic maven-based primary site for >>>>>>> shiro and submit to you these pros/cons. >>>>>>> >>>>>>> Pros >>>>>>> 1. Build many of the pages needed directly from your pom 2. Easy >>>>>>> to keep documentation linked and synced 3. All the content would >>>>>>> be in your src directory under site-- it would all be in one >>>>>>> place 4. Templates/Skins are easy to build (kinda) and easy to >>>>>>> apply throughout the site 5. Easy to layout like other Apache >>>>>>> projects which will lend easy-of-navigation and more credibility >>>>>>> to the site. >>>>>>> >>>>>>> Cons >>>>>>> 1. Unique formatting sytanx for pages and skins (APT, FML, >>>>>>> Velocity, etc) 2. Not as malleable as HTML and CSS 3. Not as >>>>>>> easy to edit content as a wiki 4. To see any change to the site, >>>>>>> the whole thing needs to be rebuilt-- >>>>>>> or >>>>>>> so it seems. >>>>>>> >>>>>>> Attached's a screenshot of the basic site using the basic skin. >>>>>>> >>>>>>> -Alex >>>>>>> >>>>>>> ----Original Message---- >>>>>>> From: Salazar, Alexander Salazar_Alex@GSB.Stanford.Edu >>>>>>> Sent: Friday, September 04, 2009 2:10 PM >>>>>>> To: shiro-dev@incubator.apache.org >>>>>>> Subject: RE: Shiro API Documentation >>>>>>> >>>>>>> I'd be happy to help with the site but I'm not clear on the >>>>>>> value of a maven site compared to the wiki as the main site. >>>>>>> >>>>>>> ----Original Message---- >>>>>>> From: les.hazlewood@anjinllc.com >>>>>>> les.hazlewood@anjinllc.com On Behalf Of Les Hazlewood >>>>>>> Sent: Friday, September 04, 2009 11:59 AM >>>>>>> To: shiro-dev@incubator.apache.org >>>>>>> Subject: Re: Shiro API Documentation >>>>>>> >>>>>>> I personally like the idea of using the wiki as our primary >>>>>>> content mechanism, but I would like it to look better. I >>>>>>> understand that's not difficult to do - we'd just need to apply >>>>>>> a site template. Alex, is this something you'd be interested in helping with? >>>>>>> >>>>>>> But let's say that we have the wiki exporting properly - what is >>>>>>> the best way to reference build artifacts and static resources >>>>>>> from within the wiki (like the JavaDocs)? Would we just export >>>>>>> the site wherever we want and then link to it from within the >>>>>>> wiki? Where would the physical files reside? >>>>>>> >>>>>>> - Les >>>>>>> >>>>>>> On Fri, Sep 4, 2009 at 1:59 PM, Craig L Russell >>>>>>> <Craig.Russell@sun.com> >>>>>>> wrote: >>>>>>> >>>>>>>> >>>>>>>> On Sep 4, 2009, at 7:26 AM, Les Hazlewood wrote: >>>>>>>> >>>>>>>> Sure, I think that's a good idea. >>>>>>>>> >>>>>>>>> Mentors - where can this site be hosted and how do we automate >>>>>>>>> the push to that location? >>>>>>>>> >>>>>>>> >>>>>>>> The project needs to decide whether to publish the >>>>>>>> Maven-generated site >>>>>>>> >>>>>>> as >>>>>>> >>>>>>>> "The Shiro Site", or whether to use the confluence wiki as the >>>>>>>> official site. >>>>>>>> >>>>>>>> The place to publish the result is >>>>>>>> http://incubator.apache.org/shiro >>>>>>>> >>>>>>>> Look at http://incubator.apache.org/ki/ for what is currently >>>>>>>> being >>>>>>>> >>>>>>> done. >>>>>>> >>>>>>>> >>>>>>>> Once the project decides on the strategy for generating >>>>>>>> content, infrastructure can help with the mechanical details of >>>>>>>> automatically generating and pushing the site live. >>>>>>>> >>>>>>>> Craig >>>>>>>> >>>>>>>>> >>>>>>>>> Thanks, >>>>>>>>> >>>>>>>>> Les >>>>>>>>> >>>>>>>>> On Fri, Sep 4, 2009 at 10:17 AM, Kalle Korhonen >>>>>>>>> <kalle.o.korhonen@gmail.com> wrote: >>>>>>>>> >>>>>>>>>> >>>>>>>>>> On Fri, Sep 4, 2009 at 12:23 AM, Salazar, >>>>>>>>>> Alexander<Salazar_Alex@gsb.stanford.edu> wrote: >>>>>>>>>> >>>>>>>>>>> >>>>>>>>>>> Even though a 1.0 has not yet been released, I think it >>>>>>>>>>> would be >>>>>>>>>>> >>>>>>>>>> helpful >>>>>>> >>>>>>>> to get to-date Shiro API documentation online and available. >>>>>>>>>>> According to Les, "Maven auto-generates not just the API >>>>>>>>>>> >>>>>>>>>> documentation, >>>>>>> >>>>>>>> but an entire site. However, we've only been using the wiki thus far. >>>>>>>>>>> >>>>>>>>>> We >>>>>>> >>>>>>>> would have to get the auto-export of this generated >>>>>>>> documentation set >>>>>>>>>>> >>>>>>>>>> up >>>>>>> >>>>>>>> based on the automated build process." >>>>>>>>>>> >>>>>>>>>>> What would be the best way to go about this? Do you agree >>>>>>>>>>> that it >>>>>>>>>>> >>>>>>>>>> would >>>>>>> >>>>>>>> be valuable prior to the 1.0 release? >>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> The best way would be to publish the Maven site (it includes >>>>>>>>>> the javadocs by default). I already had a thread on this >>>>>>>>>> topic, see "Plans to publish javadocs & Maven site >>>>>>>>>> continuously/nightly?". The question Les had whether there >>>>>>>>>> were any guidelines regarding publishing the documentation >>>>>>>>>> while a project is still in incubator but no responses >>>>>>>>>> (though I know at least CXF was publishing all docs while in >>>>>>>>>> incubator so I don't think it's an issue). Once we know >>>>>>>>>> where we could publish the site, we could set up a Hudson job and then incrementally improve the contents. >>>>>>>>>> >>>>>>>>>> Kalle >>>>>>>>>> >>>>>>>>>> >>>>>>>> Craig L Russell >>>>>>>> Architect, Sun Java Enterprise System http://db.apache.org/jdo >>>>>>>> 408 276-5638 Craig.Russell@sun.com P.S. A good JDO? O, >>>>>>>> Gasp! >>>>>>>> >>>>>>>> >>>>>>>> >>>>>>> >>>>> Craig L Russell >>>>> Architect, Sun Java Enterprise System http://db.apache.org/jdo >>>>> 408 276-5638 Craig.Russell@sun.com P.S. A good JDO? O, >>>>> Gasp! >>>>> >>>>> >>>> >>> >> >	Task	CLOSED	Major	Fixed	1.0.0	1.0.0	Documentation	None		0	Kalle Korhonen	Alex Salazar
SHIRO-103	SHIRO	Fix "Ki" in the Apache Incubator Status Page	1. http://incubator.apache.org/projects/shiro.html still refers to Ki and has all ki-based links and info 2. http://incubator.apache.org/ki still works and goes to the Ki wiki 3. http://incubator.apache.org/shiro does not work Here is an email from Les with the latest on the topic ----Original Message---- From: les.hazlewood@anjinllc.com les.hazlewood@anjinllc.com On Behalf Of Les Hazlewood Sent: Monday, September 14, 2009 11:36 AM To: shiro-dev@incubator.apache.org Subject: Incubator Shiro status html page http://incubator.apache.org/projects/shiro.html Still has 'Ki' references. If I edit this file directly on people.apache.org, is this ok? The STATUS file in SVN already reflects the correct names. I just want to ensure that if I change a text file on the people.a.o server that I'm editing the master copy - not some file that might have been pulled from another source. Thanks, Les	Task	CLOSED	Major	Fixed	None	1.0.0	None	None		0	Kalle Korhonen	Alex Salazar
SHIRO-104	SHIRO	Default AuthenticationStrategy should be AtLeastOneSuccessful instead of All	Per mailing list discussion [1], the default AuthenticationStrategy should be the AtLeastOneSuccessfulStrategy instead of the current default of AllSuccessfulStrategy. The 'at least one successful' approach better matches the majority of users' use cases. [1] http://mail-archives.apache.org/mod_mbox/incubator-shiro-dev/200908.mbox/%3C44b57a610908210712s33108766o7807dbfd241cceab@mail.gmail.com%3E	Improvement	CLOSED	Minor	Fixed	1.0.0	1.0.0	Authentication (log-in)	None		0	Unassigned	Les Hazlewood
SHIRO-105	SHIRO	PrincipalCollection should have a getPrimaryPrincipal() method	Per mailing list discussion, it would be nice to have a PrincipalCollection#getPrimaryPrincipal() method which would be the primary principal associated with a realm. The default implementation of that method would continue to be the existing behavior (first element in the first realm's Principal collection).	New Feature	CLOSED	Major	Fixed	1.0.0	1.0.0	Realms	None		0	Les Hazlewood	Les Hazlewood
SHIRO-106	SHIRO	AuthorizationFilter needs to use sendError not setStatus to make container process the request through ERROR dispatcher	AuthorizationFilter currently calls setStatus when returning SC_UNAUTHORIZED (401). This is wrong because container won't invoke ERROR dispatcher (and consequently, application filters handling custom error-pages don't have a chance to respond). Would have liked to make this my first commit, but I'll add a patch instead while I'm still waiting for my Apache account to be created. Free game for anybody to apply in the meantime.	Bug	CLOSED	Major	Fixed	1.0.0	1.0.0	Authorization (access control)	None		0	Unassigned	Kalle Korhonen
SHIRO-107	SHIRO	Filter chain definitions should match on request method as well as request path (REST support)	To support REST environments, it would be nice to specify a filter chain definition based on not only the request path, but also the request method (PUT, GET, POST, DELETE) to support rest environments. For example: /data/stocks/**:post = authc, roles[admin] /data/stocks/** = authc	New Feature	CLOSED	Major	Fixed	None	1.0.0	Web	None		0	Les Hazlewood	Les Hazlewood
SHIRO-108	SHIRO	Basic HTTP Auth: Empty password or username causes IllegalStateException	If an empty username or password is passed in via HTTP Basic authentication, Shiro throws an IllegalStateException.	Bug	CLOSED	Critical	Fixed	None	1.0.0	Web	None		0	Unassigned	Peter Ledbrook
SHIRO-109	SHIRO	RememberMeManager should have access to Subject context map	A bug surfacing in the ShiroFilter showed that WebUtils.bind* methods needed to be called before the WebSubject.Builder could be used. This is because the RememberMeManager does not accept a Subject context map from where it could receive the Request and Response objects, so it must look them up from the thread, which surfaces the fragility of assumptions made about the thread. Instead, the subject creation context map should be given to the RememberMeManager so it can use whatever it needs inside the map to use to lookup the identity if necessary. See http://www.mail-archive.com/shiro-dev@incubator.apache.org/msg00178.html for details.	Improvement	CLOSED	Major	Fixed	0.9-RC1, 0.9	1.0.0	Subject, Web	None		0	Les Hazlewood	Les Hazlewood
SHIRO-11	SHIRO	class not found under java 1.4	Using the retroweaver compiled 1.4 jar file throws ClassNotFoundException as the configuration classes use 1.5 api - java.util.Scanner The following classes make a reference to this class: org.jsecurity.config.IniConfiguration org.jsecurity.config.TextConfiguration org.jsecurity.io.IniResource org.jsecurity.io.TextResource org.jsecurity.realm.text.TextConfigurationRealm	Bug	CLOSED	Major	Won't Fix	None	None	None	None	java 1.4	0	Unassigned	Csaba Nemeth
SHIRO-110	SHIRO	Remove org.apache.shiro.mgt.SubjectBinder and its usages	This was introduced in 1.0 development and can be easily removed before 1.0 final - it is not referenced in the public-facing API and is used for implementation support only. This needs to be done as the SecurityManager will no longer need to maintain thread state (making it 100% stateless) since Subject.Builder or its end-users would be responsible for that.	Improvement	CLOSED	Major	Fixed	None	1.0.0	Subject	None		0	Kalle Korhonen	Les Hazlewood
SHIRO-111	SHIRO	Web SecurityManager should not fail in non-request usages	Currently some operations of the WebSecurityManager fail if there is not a Http Request/Response pair associated with the calling thread. The implementation should be modified to support non-request calls since a WebSecurityManager could be used in situations where there is not a request available (e.g. system bootstrap, non-http remoting from Rich client apps, etc).	Improvement	CLOSED	Major	Fixed	0.9-RC1, 0.9	1.0.0	Web	None		0	Unassigned	Les Hazlewood
SHIRO-112	SHIRO	Implement Externalizable for serializable classes	As a performance improvement any instance that can be remoted or serialized, we should implement Externalizable for better performance. This also has a nice benefit for web environments - the rememberMe cookie value should be significantly smaller with a custom Externalizable implementation.	Improvement	CLOSED	Major	Fixed	0.9-RC1, 0.9	1.0.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-113	SHIRO	Add a "How to Contribute" Page to the Wiki	Create a page for new users to learn how to contribute to Shiro. Planning to base heavily on Apache Forrest's similar page.	Task	CLOSED	Minor	Fixed	None	None	None	None	wiki	0	Unassigned	Alex Salazar
SHIRO-114	SHIRO	Break circular dependency between SubjectFactory and DefaultSecurityManager	Discussed at http://n2.nabble.com/Architectural-Review-of-early-Jan-14-commits-td2157161.html and http://n2.nabble.com/Circular-dependency-between-SubjectFactory-and-DefaultSecurityManager-td3989601.html, the latter describing how the circular dependency could be refactored out	Improvement	CLOSED	Minor	Fixed	1.0.0	1.0.0	Subject	None		0	Les Hazlewood	Kalle Korhonen
SHIRO-115	SHIRO	ActiveDirectoryRealm might by vulnerable to LDAP search code injection	When searching for a userName within getRoleNamesForUser, the search filter is built by inserting the literal value from userName. Two potential problems might arise: userName might contain (deliberately crafted) LDAP syntax elements that could be used to affect the search. Permissible user principal names within AD (e.g. "A(1") might be rejected due to syntax problems (even some Microsoft software packages appear to be quick-and-dirty here - see note at bottom of http://technet.microsoft.com/en-us/library/cc730634(WS.10).aspx) . This potential vulnerability can easily be fixed by using search parameters instead of literals (which should be considered good style anyway). The actual chance for an exploit appears to be very remote, but hackers are so creative // vulnerable to injection String searchFilter = "(&(objectClass=*)(userPrincipalName=" + userPrincipalName + "))"; // vulnerable to injection NamingEnumeration answer = ldapContext.search(searchBase, searchFilter, searchCtls); String searchFilter = "(&(objectClass=*)(userPrincipalName= {0} ))"; Object[] searchArguments = new Object[] {userPrincipalName} ; NamingEnumeration answer = ldapContext.search(searchBase, searchFilter, searchArguments, searchCtls);	Bug	CLOSED	Minor	Fixed	0.9	1.0.0	Authentication (log-in)	None		0	Les Hazlewood	Reiner Saddey
SHIRO-116	SHIRO	Ini configuration - users/roles sections should trigger automatic Realm creation	If [users] or [roles] sections are defined in the .ini configuration, this should automatically trigger the creation of a SimpleAccountRealm as well as automatically register it with the SecurityManager.	New Feature	CLOSED	Major	Fixed	1.0.0	1.0.0	Configuration	None		0	Les Hazlewood	Les Hazlewood
SHIRO-117	SHIRO	Add a 'QueryableSessionDAO' interface	In many enterprise apps, it is desirable to obtain a Session instance or information about many sessions based on criteria - such as the ability to obtain a session by the principals (e.g. user id or username), find out if there is more than one active session for a user (concurrent session control) or to find out the total number of active sessions in use. This information is very valuable for system statistics and for advanced features such as concurrent session access control. If a SessionDAO implements this interface, it would be nice to leverage these additional capabilities directly in the framework.	New Feature	OPEN	Major	Unresolved	1.0.0	2.0.0	Session Management	None		0	Unassigned	Les Hazlewood
SHIRO-118	SHIRO	Ini Realm support	Create a Realm that creates account objects based on INI configuration ([users] and [roles] sections). This will be easier to use and be less verbose compared to the PropertiesRealm.	New Feature	CLOSED	Major	Fixed	1.0.0	1.0.0	Realms	None		0	Les Hazlewood	Les Hazlewood
SHIRO-119	SHIRO	Oauth support	Create support for OAuth provider support 'out of the box'. This could involve a standalone provider webapp with some flexible mechanism for data storage, and/or remote data retrieval & management, and a customisable way to integrate application/transport specific OAuth based authentication with Shiro (HTTP/XMPP etc).	New Feature	OPEN	Major	Unresolved	None	None	None	patch patch-with-tes		0	Kalle Korhonen	Jason Eacott
SHIRO-12	SHIRO	Missing org.jsecurity.cache.ehcache.EhCacheManager	We seem to be missing org.jsecurity.cache.ehcache.EhCacheManager. The CachingSecurityManager seems to need it. For time time being I have commented out the code in anticipation to you fixing the problem.	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-120	SHIRO	AbstractLdapRealm's doGetAuthenticationInfo catches naming exception, but then only logs a message	I have a class that extends the ActiveDirectoryRealm in order to perform authentication against Active Directory, my class then uses database tables to support the authorisation of the authenticated subject. What I have found is that calls to the super doGetAuthenticationInfo can return a null in the event of a communication problem with the Active Directory server. On further investigation, I found that the doGetAuthenticationInfo method in AbstractLdapRealm catches a javax.naming.NamingException and then logs an error message. As the exception has been caught and not propagated, the only way my derived class knows there has been a problem is through checking if the AuthenticationInfo is null - however the original context of the exception has been lost (albeit it was logged). It would be useful if the naming exception was allowed to propagate up or alternatively caught and a Shiro specific exception thrown - either way, it would allow descendants of ActiveDirectoryRealm to handle the exception and do the appropriate thing themselves.	Bug	CLOSED	Major	Fixed	Incubation	1.0.0	Authentication (log-in)	None		0	Unassigned	Jonathan Hall
SHIRO-121	SHIRO	Change usages of java.net.InetAddress to be Strings	The java.net.InetAddress is a restricted class for Google App Engine applications and cannot be loaded, and as such, Shiro is not available in any GAE application. Also, Strings are a little more flexible and allow the end user to customize exactly what that value might be for a given application (IP, host name, etc).	New Feature	CLOSED	Major	Fixed	0.9-RC1, 0.9	1.0.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-122	SHIRO	Create IdentifierGenerator interface for pluggable id generation strategies	Primarily for Session ID generation strategies, create an IdentifierGenerator.generateIdentifier(Map context) method to support multiple ID generation implementations. This is nicer than having to subclass a SessionDAO implementation, which shouldn't be necessary if all you want to do is customize the session ID.	New Feature	CLOSED	Major	Fixed	1.0.0	1.0.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-123	SHIRO	Create non-web application showing remoting.	Show how remoting could work in a non-web-based application - maybe a swing client with a standalone server.	Task	RESOLVED	Major	Not A Problem	1.0.0	None	Sample Apps	None		0	Unassigned	Les Hazlewood
SHIRO-124	SHIRO	MethodInvocation is missing a getThis() (or equivalent) method	The current (r896125) revision of MethodInvocation does not expose a method for accessing the object on which the method is being invoked. In the AOP world, I think this is the JoinPoint.getThis() method. In any case, such a method is necessary to test permissions at the instance level (e.g.: "lightsaber:wield:blue", where "blue" is obtained from the instance on which the "wield()" method of the "Lightsaber" class is called.)	Bug	CLOSED	Major	Fixed	None	1.0.0	Specification API	None		0	Kalle Korhonen	Philippe Laflamme
SHIRO-125	SHIRO	Support overrding the credentialsMatcher for the implicit IniRealm	When using the implicit IniRealm, it would be useful to override the credentialsMatcher to support, non-plaintext passwords in the [users] section. Example shiro.ini: — [main] The [users] section will contain SHA256 hashed passwords credentialsMatcher=org.apache.shiro.authc.credential.Sha256CredentialsMatcher [users] Hex value of SHA256 hashed password aUser=28eeeb5e16f38c67dfcc73733ee3649f9b0adcc2a6cfc957d40814348459ee7c —	Improvement	CLOSED	Major	Fixed	None	1.0.0	Configuration, (1)	None		0	Unassigned	Philippe Laflamme
SHIRO-126	SHIRO	Example Multiple Realm Shiro App (LDAP and DB)	I have an intellij project that is a good example of how to create/use an LDAP realm. In fact what it does is choose between two configured realms one a local ShiroDbReal and the other LDAP. If your new to grails/groovy this is a good learning tool. I based it off of the Scott Davis (IBM) blogito tutorial. I create some default users that are not the plain ShiroUser but it is a trivial modification. For my purposes I had to extend the class ShiroUser extends com.saic.hub.HubUser but again, I think you will find it elementary to see the effect. In the end it is just a tweaked user class for my purposes and could be done incorrectly but there you go. When you run the app with grails run-app it will default to the ShiroDbRealm. If you create a file called file:${userHome}/.authprototype/user_config.groovy in that file put ldap.ldapUrls = 'ldap://localhost:389/' ldap.search.base = 'ou=YOURVALUE,dc=YOURVALUE,dc=YOURVALUE,dc= YOURVALUE' ldap.search.user = "YOURVALUE" ldap.search.pass = "YOURVALUE" ldap.username.attribute = "YOURVALUE" ldap.skip.credentialsCheck = false ldap.allowEmptyPasswords = false hub.auth.realmName = "ShiroLDAPRealm" the hub.auth.realmName should be set to whatever name is created by grails create-ldap-realm. I changed mine around some and ended up with ShiroLDAPRealm. The casing is off from the original. It will load your LDAP realm. The important value to trigger ldap loading is hub.auth.realmName. To test the application delete this line. It will load the ShiroDbRealm and you can login with the dummy users created in bootstrap. Once you have that working and understand it put the line back in the user_config.groovy file. This will override the default value that is in Config.groovy and load the LDAP realm. As long as you have the LDAP settings correct ( that was the really hard part for me ) you should be good. I guess the question now is how do I get it to you? I will send this message first with nothing attached and try a separate message with the app. If it bounces we can go from there. sg	Temp	OPEN	Trivial	Unresolved	1.0.0	None	Sample Apps	None	windows	0	Unassigned	Steve Gorman
SHIRO-127	SHIRO	Improvements to Shiro's LDAP support	Following this mailing list discussion: http://n2.nabble.com/Confusion-with-the-LDAP-Realm-tp4268254p4268254.html	Improvement	OPEN	Major	Unresolved	None	None	Realms	patch		0	Unassigned	Philippe Laflamme
SHIRO-128	SHIRO	Remove convenience configuration methods	Per this thread: http://www.mail-archive.com/shiro-dev@incubator.apache.org/msg00525.html Convenience 'pass through' setter methods will be removed, as they add complexity, verbosity and are awkward to maintain. Clean configuration can still be done in a number of ways, especially via property path expressions in .ini: securityManager.authenticator.authenticationStrategy = $myAuthenticationStrategy or via a Builder or in Spring environments, possibly a SecurityManagerFactoryBean or similar.	Improvement	CLOSED	Major	Fixed	0.9-RC1, (2)	1.0.0	Configuration	None		0	Unassigned	Les Hazlewood
SHIRO-129	SHIRO	Aspecjt integration for annotation base authorization	Here's the code I'm donating to the Shiro project to use aspectj as the aop kit to perform authorization of method invocation based on the defined Shiro's annotation. The zip files contains the following: java/src: source files to adapt an aspectj joint point to a shiro method invocation java/test: unit test classes conf: configuration file for the test cases To compile and run properly, the code requires the following: junit jar shiro jar aspectj jars (I used AJDT within eclipse, so everything was integrated)	New Feature	CLOSED	Major	Fixed	None	1.0.0	None	None		0	Kalle Korhonen	Jean-Cédric Desroche
SHIRO-13	SHIRO	logging is too verbose for org.jsecurity.web.attr.CookieAttribute	The following log statement at 'info' level shows up in my server logs approximately 15 consecutive times per web request. This statement should probably be 'debug' level: 01/27 19:37:14 INFO org.jsecurity.web.attr.CookieAttribute - Found string value [clJgEjFZVuRRN5lCpInkOsawSaKK4hLwegZK/QgR1Thk380v5wL9pA1NZo7QHr7erlnry1vt2AqIyM8Fj2HBCsl1lierxE9EJ1typI2GpgMeG+HmceNdrlN6KGh4AmjLG3zCUPo8E+QzGVs/EO3PIAGyYYtuYbW++oJDr5xfY9DwK4Omq5GijZSSmdpOHiYelPMa1XLwT0D/kNCUm6EVfG6TKwxViNtGdyzknY7abNU7ucw2UWfjFe24hH0SL0hZMXjPQYtMnPl5J5qfjU4EXX1a/Ijn0IKUEk5BmY+ipc6irMI/Rrmumr7XSSncSHq2cpyNbwJBykFX5s/ydB64hbMenS+LhbUvnQBNt8Xkjyc+IrzntDuVGH4IGfnRIAOwDkU6EZPQ4v36wbd8IB3kUFW1/1z6ZvS4jsIgMA3TS2xMjhGB8FWnIPbbveMSpTk43fRjrvTkN88J4Qiz5mxhvtR2s6r2diCpdq57VA2xmPcIHmAf0lQu6j5Rs/rAhH0z] from HttpServletRequest Cookie [rememberMe]	Bug	CLOSED	Trivial	Fixed	None	None	None	None	servlet	0	Les Hazlewood	Brad Whitaker
SHIRO-130	SHIRO	ShiroFilter does not work with proxied security manager	The ShiroFilter.isHttpSessions() method does an instanceof check on the security manager, checking whether it's an instance of DefaultWebSecurityManager. This doesn't work when the security manager is a JDK proxy to a DefaultWebSecurityManager because the proxy implements the SecurityManager interface, which doesn't have the isHttpSessions() method. Perhaps we should have a WebSecurityManager interface with the isHttpSessions() method defined on it?	Bug	CLOSED	Major	Fixed	1.0.0	1.0.0	Web	None		0	Peter Ledbrook	Peter Ledbrook
SHIRO-131	SHIRO	Improved Shiro Filter configuration for Spring environments	A Spring-specific ShiroFilter would allow Spring configuration of the Filter properties, along with any nested filters and filter chain definitions, enabling a more powerful Dependency Injection mechanism that what is available with the INI configuration alone. This task will track creating a ShiroFilterFactoryBean that allows Spring-only configuration for the Filter, without needing INI configuration (but while still being as easy to configure as INI)	Improvement	CLOSED	Major	Fixed	1.0.0	1.0.0	Integration: Spring	None		0	Les Hazlewood	Les Hazlewood
SHIRO-132	SHIRO	Handle POST requests for unauthenticated users	We currently have a SavedRequest class that can handle GETs that need to be redirected to the login page. It doesn't work for POSTs though. I have developed a solution for the Grails Shiro Plugin that could serve as the basis for a more generic Shiro implementation: http://fisheye.codehaus.org/changelog/grails-plugins/grails-shiro/trunk?cs=58931 The idea is to save the POST information, redirect to the login page, and then after a successful login, redirect back to the originally requested URL. The GET request is then replaced with the saved POST request.	Improvement	OPEN	Major	Unresolved	Incubation	None	Authentication (log-in)	None		0	Unassigned	Peter Ledbrook
SHIRO-133	SHIRO	Automatically shut down the Session validation thread	Shiro automatically starts a background thread for session validation. This thread never shuts down without invoking destroy. If Shiro starts threads automatically, it should probably stop them automatically. Forum thread: http://n2.nabble.com/Shutting-down-Shiro-tp4471207p4471207.html	Improvement	CLOSED	Major	Fixed	0.9-RC1, 0.9	1.0.0	Session Management	None		0	Kalle Korhonen	Philippe Laflamme
SHIRO-134	SHIRO	Combine aspectj and standalone sample into one and make it a runnable desktop app	Discussed at http://mail-archives.apache.org/mod_mbox/incubator-shiro-dev/201002.mbox/%3C7281ca711002020504r3c403b24mee45939ea634ff65@mail.gmail.com%3E	Improvement	OPEN	Minor	Unresolved	0.9, 1.0.0	None	Sample Apps	None		0	Kalle Korhonen	Kalle Korhonen
SHIRO-135	SHIRO	AccessControlException exception on GAE with Grails	Hi! I was doing the following: ---- SNIP ------ export CLASSPATH="" grails create-app MyApp cd MyApp grails install-plugin app-engine (choosing jdo) grails uninstall-plugin tomcat grails set-version 1 grails install-plugin shiro grails quick-start grails app-engine package $APPENGINE_SDK/bin/appcfg.sh update target/war ---- SNIP ------ I use the following Version: grails 1.2.0 app-engine plugin 0.8.8 shiro plugin 1.0.1 appengine java SDK 1.3.0 Checking the app engine Logs gives me the following exception and stacktrace: ---- SNIP ------ javax.servlet.ServletContext log: Initializing Spring root WebApplicationContext [Runtime Network Thread] ERROR servlet.AbstractFilter - Unable to start Filter: [access denied (java.lang.RuntimePermission getClassLoader)]. java.security.AccessControlException: access denied (java.lang.RuntimePermission getClassLoader) at java.security.AccessControlContext.checkPermission(AccessControlContext.java:355) at java.security.AccessController.checkPermission(AccessController.java:567) at java.lang.SecurityManager.checkPermission(Unknown Source) at com.google.apphosting.runtime.security.CustomSecurityManager.checkPermission(CustomSecurityManager.java:45) at java.lang.ClassLoader.getSystemClassLoader(Unknown Source) at org.apache.shiro.util.ClassUtils.getResourceAsStream(ClassUtils.java:73) at org.apache.shiro.io.ResourceUtils.loadFromClassPath(ResourceUtils.java:158) at org.apache.shiro.io.ResourceUtils.getInputStreamForPath(ResourceUtils.java:122) at org.apache.shiro.io.ResourceUtils.resourceExists(ResourceUtils.java:92) at org.apache.shiro.config.IniConfiguration.init(IniConfiguration.java:101) at org.apache.shiro.spring.SpringIniWebConfiguration.init(SpringIniWebConfiguration.java:96) at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:47) at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:41) at org.apache.shiro.web.servlet.ShiroFilter.configure(ShiroFilter.java:353) at org.apache.shiro.web.servlet.ShiroFilter.onFilterConfigSet(ShiroFilter.java:287) at org.apache.shiro.web.servlet.AbstractFilter.init(AbstractFilter.java:94) at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:99) at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40) at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:589) ---- SNIP ------ After putting debug 'org.apache.shiro.io' into the log-section of Config.groovy I get the additional log line: [Runtime Network Thread] DEBUG io.ResourceUtils - Opening resource from class path [shiro.ini] just before the error.	Bug	CLOSED	Major	Fixed	None	1.0.0	None	None	grails, google app	0	Les Hazlewood	Dirk Jäckel
SHIRO-136	SHIRO	Mark Spring as scope provided to let users specificy their own version of Spring	Mark the Spring dependency with scope provided in shiro-spring	Improvement	CLOSED	Minor	Fixed	0.9	1.0.0	Integration: Spring	None		0	Kalle Korhonen	Kalle Korhonen
SHIRO-137	SHIRO	Go through Shiro dependencies and consider marking most third-party dependencies as provided	It's unlikely that users would use Shiro support modules to pull in a dependency to third-party libraries (such as Spring), but rather they explicitly declare the version they are dependent on. If we mark this dependencies as provided, we are forcing users to explicity declare those dependencies but at the same time, we avoid issues with potential version conflicts. What I don't like about this issue is that it's kind of open-ended, but I'll do a first pass before 1.0.0 and then close.	Improvement	CLOSED	Minor	Fixed	0.9	1.0.0	None	None		0	Kalle Korhonen	Kalle Korhonen
SHIRO-138	SHIRO	AbstractRememberMeManager attempts to process null/empty byte array	AbstractRememberMeManager#getRememberedPrincipals will call the 'convertBytesToPrincipals' method even if the 'getRememberedSerializedIdentity' method call returns a null/empty byte array, resulting in the following stack trace. The 'convertBytesToPrincipals' method should only be called with a non null/empty byte array. 21419 [btpool0-1] WARN org.apache.shiro.mgt.DefaultSecurityManager - Delegate RememberMeManager instance of type [org.apache.shiro.web.WebRememberMeManager] threw an exception during getRememberedPrincipals(). java.lang.IllegalStateException: Unable to crypt bytes with cipher [javax.crypto.Cipher@1b951f2]. at org.apache.shiro.crypto.BlowfishCipher.crypt(BlowfishCipher.java:196) at org.apache.shiro.crypto.BlowfishCipher.crypt(BlowfishCipher.java:221) at org.apache.shiro.crypto.BlowfishCipher.decrypt(BlowfishCipher.java:143) at org.apache.shiro.mgt.AbstractRememberMeManager.decrypt(AbstractRememberMeManager.java:571) at org.apache.shiro.mgt.AbstractRememberMeManager.convertBytesToPrincipals(AbstractRememberMeManager.java:512) at org.apache.shiro.mgt.AbstractRememberMeManager.getRememberedPrincipals(AbstractRememberMeManager.java:482) at org.apache.shiro.mgt.DefaultSecurityManager.getRememberedIdentity(DefaultSecurityManager.java:586) at org.apache.shiro.mgt.DefaultSecurityManager.resolvePrincipals(DefaultSecurityManager.java:475) at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:352) at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:751) at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:95) at org.apache.shiro.web.servlet.AbstractShiroFilter.bind(AbstractShiroFilter.java:215) at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:302) at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084) at com.google.appengine.api.blobstore.dev.ServeBlobFilter.doFilter(ServeBlobFilter.java:51) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084) at com.google.apphosting.utils.servlet.TransactionCleanupFilter.doFilter(TransactionCleanupFilter.java:43) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084) at com.google.appengine.tools.development.StaticFileFilter.doFilter(StaticFileFilter.java:121) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084) at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360) at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216) at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181) at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712) at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405) at com.google.apphosting.utils.jetty.DevAppEngineWebAppContext.handle(DevAppEngineWebAppContext.java:70) at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139) at com.google.appengine.tools.development.JettyContainerService$ApiProxyHandler.handle(JettyContainerService.java:352) at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139) at org.mortbay.jetty.Server.handle(Server.java:313) at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506) at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:830) at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514) at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211) at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381) at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396) at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442) Caused by: java.lang.IllegalArgumentException: Null input buffer at javax.crypto.Cipher.doFinal(DashoA13*..) at org.apache.shiro.crypto.BlowfishCipher.crypt(BlowfishCipher.java:193) ... 37 more	Bug	CLOSED	Major	Fixed	1.0.0	1.0.0	Web	None		0	Les Hazlewood	Les Hazlewood
SHIRO-139	SHIRO	Cookie support refactoring - Simplify cookie configuration, support HttpOnly cookies and default session cookies to be HttpOnly = true	It would also be prudent to refactor the cookie support in Shiro to 1) remove the overly verbose and complex RequestAttribute / CookieRequestAttribute concepts. This existed as a way to shield Shiro from implementation details on how to persist and retrieve data across requests. It'd be better to allow end-users to just configure a Cookie pojo instance that is set on cookie-capable components which in turn use a mechanism to set/remove the cookie 2) support the notion of HttpOnly cookies, which the servlet 2.4/2.5 does not support, but we could support with our own Cookie pojo used in configuration (see #1) which we set on the response header directly ( response.setHeader instead of response.addCookie) 3) After adding #2, default Shiro's session cookie to be HttpOnly = true for added security to reduce XSS attacks.	Improvement	CLOSED	Major	Fixed	1.0.0	1.0.0	Web	None		0	Unassigned	Les Hazlewood
SHIRO-14	SHIRO	WebRememberMeManagerTest is broken	getRememberedPrincipals and getRememberedPrincipalsDecryptionError is broken.	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-140	SHIRO	Add a subject-aware ExecutorService implementation to support Subject execution on other threads	Currently the Subject.associateWith* methods return objects that are associated with the Subject. Then the caller is expected to dispatch the callable/runnable to some thread mechanism as they see fit. It might be nice to simplify this even further for anyone relying on the ExecutorService API, say by creating a SubjectExecutorService implementation that: 1) Looks up the currently executing Subject 2) calls subject.associateWith* methods on the callable/runnable argument 3) dispatches the associated callable/runnable to the underlying 'real' ExecutorService instance. It reduces Shiro-user code complexity in that they don't need to call the subject.execute* or subject.associateWith* methods any time they need to dispatch to another thread.	New Feature	CLOSED	Major	Fixed	1.0.0	1.0.0	Subject	None		0	Les Hazlewood	Les Hazlewood
SHIRO-141	SHIRO	Problem with WebRememberMeManager	I executed the following code to see if I needed to get the current user again after logging out: Subject currentUser; currentUser = SecurityUtils.getSubject(); // < --No exception currentUser = SecurityUtils.getSubject(); // < --No exception currentUser.logout(); // < --No exception currentUser = SecurityUtils.getSubject(); // < --EXCEPTION Resulting in the application throwing a NullPointerException from WebRememberMeManager. Here is the stack trace: (I'm currently trying to learn how to install and use JUnit) 32046 [btpool0-1] WARN org.apache.shiro.mgt.DefaultSecurityManager - Delegate RememberMeManager instance of type [org.apache.shiro.web.WebRememberMeManager] threw an exception during getRememberedPrincipals(). java.lang.NullPointerException at org.apache.shiro.web.attr.CookieAttribute.getCookie(CookieAttribute.java:262) at org.apache.shiro.web.attr.CookieAttribute.removeValue(CookieAttribute.java:357) at org.apache.shiro.web.WebRememberMeManager.forgetIdentity(WebRememberMeManager.java:320) at org.apache.shiro.web.WebRememberMeManager.forgetIdentity(WebRememberMeManager.java:316) at org.apache.shiro.mgt.AbstractRememberMeManager.onRememberedPrincipalFailure(AbstractRememberMeManager.java:547) at org.apache.shiro.mgt.AbstractRememberMeManager.getRememberedPrincipals(AbstractRememberMeManager.java:488) at org.apache.shiro.mgt.DefaultSecurityManager.getRememberedIdentity(DefaultSecurityManager.java:598) at org.apache.shiro.mgt.DefaultSecurityManager.resolvePrincipals(DefaultSecurityManager.java:486) at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:363) at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:751) at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:57) at burp_erp_t1.TestShiroServlet.login(TestShiroServlet.java:43) at burp_erp_t1.TestShiroServlet.doPost(TestShiroServlet.java:24) at javax.servlet.http.HttpServlet.service(HttpServlet.java:713) at javax.servlet.http.HttpServlet.service(HttpServlet.java:806) at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093) at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:373) at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:306) at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084) at com.google.appengine.api.blobstore.dev.ServeBlobFilter.doFilter(ServeBlobFilter.java:51) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084) at com.google.apphosting.utils.servlet.TransactionCleanupFilter.doFilter(TransactionCleanupFilter.java:43) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084) at com.google.appengine.tools.development.StaticFileFilter.doFilter(StaticFileFilter.java:121) at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084) at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360) at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216) at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181) at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712) at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405) at com.google.apphosting.utils.jetty.DevAppEngineWebAppContext.handle(DevAppEngineWebAppContext.java:70) at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139) at com.google.appengine.tools.development.JettyContainerService$ApiProxyHandler.handle(JettyContainerService.java:352) at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139) at org.mortbay.jetty.Server.handle(Server.java:313) at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506) at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:844) at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:644) at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211) at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381) at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396) at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)	Bug	CLOSED	Major	Fixed	1.0.0	1.0.0	Authentication (log-in)	NullPointerException	windows, eclipse	0	Les Hazlewood	Chris Dutrow
SHIRO-142	SHIRO	Jetty throws an IllegalStateException after redirect in AuthorizationFilter	Jetty throws an IllegalStateException because if onAccessDenied you send an http error code and after that you redirect to "unauthorized URL". it is not allowed to write twice to the response buffer.	Bug	CLOSED	Major	Fixed	Incubation	1.0.0	Web	None		0	Les Hazlewood	Sven Homburg
SHIRO-143	SHIRO	Change logging level from trace to warning in ModularRealmAuthenticator when a Realm throws an Exception	In ModularRealmAuthenticator.doMultiRealmAuthentication(...) when a Realm throws an Exception in getAuthenticationToken(...) it is logged with TRACE level. At the time of this issue creation (svn rev. 916946), it's at line 257. I wish this to be changed to WARNING level for convenience purpose when writing a custom Realm and because I feel that's more appropriate. WDYT ? /Paul	Wish	CLOSED	Major	Fixed	None	1.0.0	Realms	None		0	Les Hazlewood	Paul Merlin
SHIRO-144	SHIRO	MemorySessionDao should be propably abstract	Please consider different default configuration for caching of session. Today i have spent a plenty of time trying to find the reason why i'm loosing my sessions. (i'm using native mode) Finally i have found that session were garbage-collected from that soft cache. which is default configuration for native mode. So i have configured my security manager to use org.apache.shiro.cache.HashtableCacheManager which actually replaces the caching by simple memory persistence. I think this can be better default. Anyway,please consider moving out from such thing as default wiring (made by/in constructors). Personally speaking i think it is that is better to leave the decision on developer , what caching or other dependencies will he use. I also know that requires higher understanding of your product, but at least forces lean persons ( like me) to do that. The configuration can be made by spring, so all dependencies can be injected easily. There can/should be made some reasonable scenarios for configuration depending on deployment like: -single node clustered node . service -etc. Sincerely, Peter.	Improvement	CLOSED	Major	Fixed	Incubation	1.0.0	Session Management	Cache garbage manage		0	Les Hazlewood	Peter Ladanyi
SHIRO-145	SHIRO	Losing Session	I'm using shiro (rev. 916858). Shiro was configured to use native sessions. In Security manager was registerd the session listener to log session live cycle events. What i'm getting is occasional session loss,but the listener doesn't log any entry about that. I can't figure out what is happening. My configuration snippet looks: <bean id="securityManager" class="org.apache.shiro.web.DefaultWebSecurityManager"> <constructor-arg ref="trustRealm"/> <!-- <property name="realm" ref="trustRealm"/>--> <property name="subjectFactory" ref="trustSubjectFactory"/> <property name="sessionMode" value="native"/> <property name="globalSessionTimeout" value="${shiro.session.timeout}"/> <property name="sessionListeners"> <set> <bean class="sk.posam.trust.profile.privateimpl.util.TrustShiroSessionListener"/> </set> </property> <property name="cacheManager" > <bean class="org.apache.shiro.cache.HashtableCacheManager"/> </property> </bean> session time out was set to value=600000 which is ten minutes. So the expiration should not be a reason.	Bug	CLOSED	Critical	Fixed	1.0.0	1.0.0	Session Management	None		0	Unassigned	Peter Ladanyi
SHIRO-146	SHIRO	Annotation authorizations should throw UnauthenticationException if the subject identity is not known.	Currently the AuthorizingAnnotationHandlers often perform an if-check to see if the Subject has roles or permissions, and if not, throws an UnauthorizedException. The Subject API already has assertion methods (checkRoles, checkPermission, etc) that correctly throw an UnauthenticationException if an authorization check is not possible. Those methods should be used in the AnnotationHandler implementations instead.	Improvement	CLOSED	Major	Fixed	1.0.0	1.0.0	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-147	SHIRO	Add an AES Cipher	For projects requiring AES encryption, we need to add an AES Cipher.	New Feature	CLOSED	Minor	Fixed	1.0.0	1.0.0	Cryptography & Hashing	None		0	Les Hazlewood	Allan Ditzel
SHIRO-148	SHIRO	SimpleSession efficient serialization	The SimpleSession implementation should support efficient serialization/deserialization logic to be better performant in cloud/distributed memory data stores environments.	Improvement	CLOSED	Major	Fixed	1.0.0	1.0.0	Session Management	None		0	Les Hazlewood	Les Hazlewood
SHIRO-149	SHIRO	Create release configuration and a profile for deploying release docs to a separate directory		Task	CLOSED	Major	Fixed	1.0.0	1.0.0	None	maven		0	Kalle Korhonen	Kalle Korhonen
SHIRO-15	SHIRO	Failed authentication appears as an ERROR in the log file	2009-03-19 12:31:12,475 [node1] [328603355@qtp0-50] [ERROR] org.jsecurity.realm.ldap.AbstractLdapRealm - LDAP naming error while attempting to authenticate user. javax.naming.AuthenticationException: [LDAP: error code 49 - 80090308: LdapErr: DSID-0C090334, comment: AcceptSecurityContext error, data 525, vece^@] at com.sun.jndi.ldap.LdapCtx.mapErrorCode(LdapCtx.java:2985) at com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:2931) at com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:2732) ... Created afrer conversation: http://n2.nabble.com/Why-login-attempt-with-wrong-credentials-is-logged-as-an-ERROR--td2502871.html#none	Bug	CLOSED	Minor	Fixed	None	None	None	None		0	Unassigned	Artur Zielazny
SHIRO-150	SHIRO	RememberMeManager NPE	When clicking the 'logout' button in wicket-shiro, I see this error: WARN - DefaultSecurityManager - Delegate RememberMeManager instance of type [org.apache.shiro.web.WebRememberMeManager] threw an exception during getRememberedPrincipals(). java.lang.NullPointerException at org.apache.shiro.web.attr.CookieAttribute.getCookie(CookieAttribute.java:262) at org.apache.shiro.web.attr.CookieAttribute.removeValue(CookieAttribute.java:357) at org.apache.shiro.web.WebRememberMeManager.forgetIdentity(WebRememberMeManager.java:320) at org.apache.shiro.web.WebRememberMeManager.forgetIdentity(WebRememberMeManager.java:316) at org.apache.shiro.mgt.AbstractRememberMeManager.onRememberedPrincipalFailure(AbstractRememberMeManager.java:547) at org.apache.shiro.mgt.AbstractRememberMeManager.getRememberedPrincipals(AbstractRememberMeManager.java:488) at org.apache.shiro.mgt.DefaultSecurityManager.getRememberedIdentity(DefaultSecurityManager.java:610) at org.apache.shiro.mgt.DefaultSecurityManager.resolvePrincipals(DefaultSecurityManager.java:486) at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:363) at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:197) at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:315) at org.apache.shiro.subject.DelegatingSubject.login(DelegatingSubject.java:249) at voyager.security.wicket.component.LoginPanel.login(LoginPanel.java:189) at voyager.security.wicket.component.LoginPanel$2.onSubmit(LoginPanel.java:83) at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1538) at org.apache.wicket.markup.html.form.Form.process(Form.java:934) at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:896) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source)	Bug	CLOSED	Minor	Fixed	1.0.0	1.0.0	Web	None		0	Les Hazlewood	Ryan McKinley
SHIRO-151	SHIRO	Add SVN info to generated .jar MANIFEST info	When using non-release builds of software, it is really useful to be able to read the exact version info out of the .jar file. Maven has some nice tools to put the SVN info into the manifest. Here is a patch that adds this info: Specification-Vendor: The Apache Software Foundation Implementation-Vendor-Id: org.apache.shiro Implementation-Vendor: The Apache Software Foundation Implementation-Build: 930972 Implementation-Title: Apache Shiro :: Core Implementation-Version: 1.0-incubating-SNAPSHOT.930972 SCM-Revision: 930972 SCM-url: http://svn.apache.org/repos/asf/incubator/shiro/trunk/shiro-core	New Feature	CLOSED	Minor	Fixed	None	1.2.0	None	None		0	Unassigned	Ryan McKinley
SHIRO-152	SHIRO	INI configuration must support configuration of Lists, Sets and Maps	Currently it is impossible to configure collections in the INI configuration - this is necessary to support listener lists as well as any other configurable collection.	Improvement	CLOSED	Major	Fixed	1.0.0	1.0.0	Configuration	None		0	Les Hazlewood	Les Hazlewood
SHIRO-153	SHIRO	INI: remove need for [filters] section and perform all object configuration in [main]	The [main] section and the [filters] section are really just a pool of objects, keyed by name, but the pools can't 'share' objects from one another. So if you configured something in [main] that needed to be referenced from a custom filter in [filters], that is not possible at the moment. By putting everything in the main 'pool', objects can reference each other as needed.	Improvement	CLOSED	Major	Fixed	1.0.0	1.0.0	Configuration	None		0	Les Hazlewood	Les Hazlewood
SHIRO-154	SHIRO	Adding ehcahe CacheManager to Spring Sample failes	after I updated to new Shiro version from svn I cannot initialize and include org.apache.shiro.cache.ehcache.EhCacheManager to Security manager any more. could you please describe how to do it. I cannot afford to use default "in memory" implementation I use as example "Sample Shiro Spring". it just does not work and gives me NPE how to reproduce: open sample project "Apache Shiro :: Samples :: Spring". add library for org.apache.shiro.cache.ehcache.EhCacheManager (artifactId shiro-ehcache) add to applicationContext.xml <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/> </bean> and add this cache manager to "jdbcRealm" bean <property name="cacheManager" ref="cacheManager"/> and get NPE on project run 2010-04-30 10:42:29,734 TRACE [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] - No authorization advice explicitly configured via the 'advice' property. Attempting to set default instance of type [org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor] 2010-04-30 10:42:29,781 TRACE [org.apache.shiro.realm.AuthorizingRealm] - Initializing authorization cache. 2010-04-30 10:42:29,781 DEBUG [org.apache.shiro.realm.AuthorizingRealm] - No cache implementation set. Checking cacheManager... 2010-04-30 10:42:29,781 DEBUG [org.apache.shiro.realm.AuthorizingRealm] - CacheManager [org.apache.shiro.cache.ehcache.EhCacheManager@baa573] has been configured. Building authorization cache named [org.apache.shiro.realm.jdbc.JdbcRealm-0-authorization] 2010-04-30 10:42:29,781 TRACE [org.apache.shiro.cache.ehcache.EhCacheManager] - Loading a new EhCache cache named [org.apache.shiro.realm.jdbc.JdbcRealm-0-authorization] 2010-04-30 10:42:29,875 ERROR [org.springframework.web.context.ContextLoader] - Context initialization failed org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilter' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'securityManager' while setting bean property 'securityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'jdbcRealm' while setting bean property 'realm'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jdbcRealm' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are: PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'cacheManager' threw exception; nested exception is java.lang.NullPointerException at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:275) at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:104) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) at java.security.AccessController.doPrivileged(Native Method) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:880) at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:605) at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:365) at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255) at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199) at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45) at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3934) at org.apache.catalina.core.StandardContext.start(StandardContext.java:4429) at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791) at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771) at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:526) at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:630) at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:514) at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1288) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:297) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:836) at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761) at org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1473) at org.apache.catalina.manager.ManagerServlet.deploy(ManagerServlet.java:824) at org.apache.catalina.manager.ManagerServlet.doGet(ManagerServlet.java:350) at javax.servlet.http.HttpServlet.service(HttpServlet.java:617) at javax.servlet.http.HttpServlet.service(HttpServlet.java:717) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:196) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:525) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849) at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583) at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454) at java.lang.Thread.run(Thread.java:619) Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'jdbcRealm' while setting bean property 'realm'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jdbcRealm' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are: PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'cacheManager' threw exception; nested exception is java.lang.NullPointerException at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:275) at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:104) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) at java.security.AccessController.doPrivileged(Native Method) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:269) ... 54 more Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jdbcRealm' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are: PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'cacheManager' threw exception; nested exception is java.lang.NullPointerException at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) at java.security.AccessController.doPrivileged(Native Method) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:269) ... 67 more Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are: PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'cacheManager' threw exception; nested exception is java.lang.NullPointerException at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:104) at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276) ... 78 more Apr 30, 2010 10:42:30 AM org.apache.catalina.core.StandardContext start SEVERE: Error listenerStart Apr 30, 2010 10:42:30 AM org.apache.catalina.core.StandardContext start SEVERE: Context [/samples-spring-1.0-incubating-SNAPSHOT] startup failed due to previous errors	Bug	CLOSED	Major	Fixed	Incubation	1.0.0	Authentication (log-in), (6)	None	windows xp, netbeans	0	Unassigned	Nariman
SHIRO-155	SHIRO	Remove all deprecated methods and classes	Just a reminder for the 1.0 release	Task	CLOSED	Major	Fixed	1.0.0	1.0.0	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-156	SHIRO	SimpleAuthenticationInfo.merge does not merge principals if its internal principal collection is not mutable	In SimpleAuthenticationInfo.merge(AuthenticationInfo), there is the following code:         if (this.principals == null) {             this.principals = info.getPrincipals();         } else {             if (this.principals instanceof MutablePrincipalCollection) {                 ((MutablePrincipalCollection) this.principals).addAll(info.getPrincipals());             } else {                 this.principals = new SimplePrincipalCollection(this.principals);             }         } The logic in the nested else block appears incorrect. If the current "principals" collection is not MutablePrincipalCollection, a new SimplePrincipalCollection, which is mutable, is constructed from it. However, it does not copy the principals from other.getPrincipals(), which by that point in the method is known to be non-null and non-empty, after it makes a mutable principal collection.	Bug	CLOSED	Major	Fixed	0.9	1.0.0	Authentication (log-in)	None		0	Kalle Korhonen	Bryan Turner
SHIRO-157	SHIRO	RememberMeManager should no longer be consulted once a remembered identity is discovered	When discovering principals (PrincipalCollection) during Subject creation: If there are no principals associated with the subject being constructed and principals are found from rememberMe, those principals should be added to the session to ensure they can be retrieved from the session on later requests. It is better to acquire this from the session so the RememberMeManager overhead (decryption and/or deserialization) is not incurred unnecessarily for every request.	Bug	CLOSED	Major	Fixed	1.0.0	1.0.0	RememberMe, (1)	None		0	Unassigned	Les Hazlewood
SHIRO-158	SHIRO	Date AbstractSessionManager.getLastAccessTime(Serializable) returns start time	Direct from the class:     public Date getStartTimestamp(Serializable sessionId) {         return getSession(sessionId).getStartTimestamp();     }      public Date getLastAccessTime(Serializable sessionId) {         return getSession(sessionId).getStartTimestamp();     } It seems like getLastAccessTime should be:     public Date getLastAccessTime(Serializable sessionId) {         return getSession(sessionId).getLastAccessTime();     }	Bug	CLOSED	Major	Fixed	1.0.0	1.0.0	Session Management	None		0	Unassigned	Bryan Turner
SHIRO-159	SHIRO	ThreadLocal is not cleared upon the unloading of the webapp and the SHiro Servlet	Tomcat 6.0.26 reports a severe error when unloading a web app that uses org.apache.shiro.web.servlet.IniShiroFilter SEVERE: A web application created a ThreadLocal with key of type [null] (value [org.apache.shiro.util.ThreadContext$1@c0c66a]) and a value of type [java.util.HashMap] (value [{}]) but failed to remove it when the web application was stopped. To prevent a memory leak, the ThreadLocal has been forcibly removed. May 13, 2010 9:29:51 PM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap	Bug	CLOSED	Major	Fixed	1.0.0	1.0.0	Integration: JEE	threadlocal		0	Les Hazlewood	david e. berry
SHIRO-16	SHIRO	removeMe cookie path is wrong at deletion if servlet context path is root ("/")	The fix for JSEC-34 changes the cookie path from "" (empty string) to "/" when the rememberMe cookie is created. The change to the path is not made, however, when the cookie is removed. This prevents the cookie from being removed. The attached patch introduces a new method "calculatePath()" that supplies the path both when the cookie is created and when it is removed. (Feel free to rename the method or make any other change.)	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Brad Whitaker
SHIRO-160	SHIRO	Flex integration with Shiro	Commiters, I have created the following classes that I used to integrate Shiro with Flex AMF. I would like to contribute them to the shiro. Please let me know if there is interest and the procedure for doing so. I have included the class names with a brief description of what they do. They are currently outside of the Shiro code base that I checked out, but I could combine them if interested. Best Regards, Dave /* Authentication and Authorization need to let AMF Ping, Login, Logout messages pass through without processing. They call FlexMessageHelper to introspect the binary message to see if it is allowed to pass. If not, normal Authentication, and Authorization takes place. */ public class FlexAuthenticationFilter extends AuthenticationFilter; public class FlexPermissionsAuthorizationFilter extends PermissionsAuthorizationFilter; public class FlexRolesAuthorizationFilter extends RolesAuthorizationFilter; /*Helper methods for introspecting the contents of the amf message. It is conceivable that a security handler might need to introspect the contents of a request. It would be nice if Shiro wrapped the request automatically so that anyone can read the contents without causing an end of stream error for a filter down the line. Message helper deserializes the AMF message and checks to see if it is a PING, LOGON, or LOGOUT request. */ public class FlexHttpServletRequestWrapper extends HttpServletRequestWrapper; public class FlexMessageHelper; /* Custom Flex Login command that calls Subject.login returns a Principal back to Flex. */ public class FlexLoginCommand implements LoginCommand; public class FlexPrincipal implements Principal;	New Feature	OPEN	Major	Unresolved	Incubation	None	Authentication (log-in), (1)	Flex patch		0	Unassigned	david e. berry
SHIRO-161	SHIRO	No SecurityManager accessible to the calling code	The security context is not bound to the thread context. The application uses an ajax periodical updater to often refresh some zones. But the user is enabled to interact with the application, so it happens, that two simultaneous requests arrives at the application server. This often produces ERROR 2010-05-15 23:33:08,030 (SecurityModule.java:253) - Error handling SecurityException org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton. This is an invalid application configuration. at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:124) at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:616) at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:57) at org.tynamo.security.services.impl.SecurityServiceImpl.getSubject(SecurityServiceImpl.java:37) at org.tynamo.security.services.impl.SecurityServiceImpl.isAuthenticated(SecurityServiceImpl.java:42) at $SecurityService_1289de25571.isAuthenticated($SecurityService_1289de25571.java) at org.tynamo.security.ShiroExceptionHandler.handle(ShiroExceptionHandler.java:74) at org.tynamo.security.services.SecurityModule$3.advise(SecurityModule.java:250)	Bug	CLOSED	Critical	Fixed	1.0.0	1.0.0	Web	None	linux, tomcat, jetty	0	Kalle Korhonen	Robert Hannebauer
SHIRO-162	SHIRO	Create SessionContext to mirror SubjectContext concept for starting new sessions	SubjectContext was created to provide type-safe data resolution when creating new Subject instances. The SessionManager.start(Map) method serves the same exact purpose, but for Session creation. The SessionManager.start method argument should reflect the same architectural principal of the SubjectContext. There are a number of 'hacky' bits of code in the framework because of this - such as using static Map key constants in implementation classes from other implementation classes. Also, the biggest thing might be that AbstractShiroFilter resorts to preemptively binding the SecurityManager, ServletRequest and ServletResponse to the ThreadContext because it can NOT just perform a simple subject.execute() invocation to execute the filter chain. This all stems from a lack of SessionContext to use when starting sessions. This should be part of 1.0 to 1) remove the hacks and 2) employ a consistent API for instance creation.	Task	CLOSED	Major	Fixed	1.0.0	1.0.0	Session Management	None		0	Les Hazlewood	Les Hazlewood
SHIRO-163	SHIRO	ModularRealmAuthorizer.setRealms needs to call applyRolePermissionResolverToRealms	When updating the list of realms in ModularRealmAuthorizer.setRealms() applyRolePermissionResolverToRealms() was not called So this worked if you didn't change your realms. Attached patch contains single line fix, and an updated test	Bug	CLOSED	Major	Fixed	Incubation	1.0.0	Realms	None		0	Kalle Korhonen	Brian Demers
SHIRO-164	SHIRO	The request/response pair should be available at all times to web-related components	According to Les, for web-initiated interaction, you should not be seeing these messages: DEBUG - DefaultWebSessionManager - No request or response bound to the thread. Session ID cookie cannot be removed. This could occur in a web application that also services non web clients (e.g. RMI remoting). DEBUG - DefaultWebSessionManager - Request or response object is not bound to the thread. Assuming this session start activity is due to a non web request (possible in a web application that also services non web clients. Full thread available here, with logs: http://shiro-user.582556.n2.nabble.com/Intermittent-problems-with-SecurityUtils-getSubject-getPrincipal-td5067869.html#a5068081	Bug	CLOSED	Major	Fixed	None	1.0.0	Session Management	None		0	Les Hazlewood	Tauren Mills
SHIRO-165	SHIRO	i18n for all messages	Add support for i18n in Shiro. Now it looks like all messages are coded as strings, and only in English. Please move them to property files, so that the community can translate them.	Improvement	OPEN	Major	Unresolved	None	None	None	i18n properties		0	Unassigned	George Stan
SHIRO-166	SHIRO	Complete and realistic webapplication example (but without Spring)	Please create a complete webapplication as an usable and realistic example (but without Spring) that would show the various uses and features of Shiro in action. The actual examples are just too "hello world" like .	New Feature	CLOSED	Minor	Won't Fix	None	1.1.0	Sample Apps	complete example web		0	Kalle Korhonen	George Stan
SHIRO-167	SHIRO	getServletContext allways return null with conf via spring (native mode)	Hi, i am using shiro rev. 945078, with configuration which uses native sessions filter is configured via springframework - DelegatingFilterProxy (here is the snippet from web.xml) <filter> <filter-name>shiroFilter</filter-name> <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> </filter> (and here from spring conf. xml) <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"> <property name="securityManager" ref="securityManager"/> </bean> <bean id="securityManager" class="org.apache.shiro.web.DefaultWebSecurityManager"> <property name="realm" ref="trustRealm" /> <property name="subjectFactory" ref="trustSubjectFactory" /> <property name="sessionMode" value="native" /> <property name="sessionManager" ref="trustSessionManager" /> <property name="cacheManager"> <bean class="org.apache.shiro.cache.MemoryConstrainedCacheManager" /> </property> </bean> the problem i have is that the method HttpServletRequest.getSession().getServletContext() always return null, (I was wondering why and i found that the ServletContext is set to AbstractFilter only in init(filterConfig) method. But this method is never called in configuration via spring-DelegatingFilterProxy. I know that specifying the "targetFilterLifecycle" filter init-param as "true" will enforce invocation of the Filter.init. But this way my definitions will be overrided.)	Bug	CLOSED	Major	Fixed	1.0.0	1.0.0	Integration: Spring	None	java, jetty, servelt, windows 7	0	Les Hazlewood	Milos Kolencik
SHIRO-168	SHIRO	Remove all @Author tags	On Fri, May 21, 2010 at 7:49 AM, Alan D. Cabrera <list@toolazydogs.com> wrote: > Usually, Apache projects don't have author tags. I actually can't recall any project that does. There's a number of good reasons for this. > - the people who worked on a file can easily be discovered via the SCM system > - after a while others may modify the file and then the list becomes a bit confusing > - removing individual author tags strengthens the code's affinity to the community > A good tag might be > @author The Apache Shiro Project (shiro-dev@incubator.apache.org) > Up to you guys but I think they should be removed. Just my 2 cents. Easier to make sure they don't exist at all than use a common tag.	Task	CLOSED	Major	Fixed	1.0.0	1.1.0	Documentation	None		0	Kalle Korhonen	Kalle Korhonen
SHIRO-169	SHIRO	Change all @author tags to be 'The Apache Shiro Project'	Change all author tags to the following: @author The Apache Shiro Project (shiro-dev@incubator.apache.org)	Task	CLOSED	Major	Won't Fix	1.0.0	1.1.0	Documentation	None		0	Les Hazlewood	Les Hazlewood
SHIRO-17	SHIRO	permissionsLookupEnabled flag never used in jdbcRealm	JdbcRealm class supports the permissionsLookupEnabled flag, but during the doGetAuthorizationInfo call the permissions are always read regardless of the value of this variable. A change like this could fix it @line 277 in JdbcRealm.java: if (permissionsLookupEnabled) { permissions = getPermissions(conn, username, roleNames); }	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Csaba Nemeth
SHIRO-170	SHIRO	Force New Session ID on Authentication	I am working on an application that has very high security standards. One of the issues raised after a full audit of the app is that it might be vulnerable for session fixation attacks. Shiro does not reset the Session ID after successful authentication, which would prevent this type of attack. IMHO this would add another level of security to Shiro beneficial for all kinds of applications. OWASP has a good page on session fixation attacks: http://www.owasp.org/index.php/Session_fixation	New Feature	OPEN	Minor	Unresolved	1.0.0, 1.1.0, 1.2.0	2.0.0	Authentication (log-in), (1)	None		0	Unassigned	Jakob Külzer
SHIRO-171	SHIRO	New Apache Shiro logo design	This is a placeholder issue for anyone wishing to submit a new Apache Shiro logo design that will be voted on by the community. All submissions/attachments are considered ASF contributions under the Apache 2.0 license.	Wish	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Les Hazlewood
SHIRO-172	SHIRO	Missing SVN properties	Many files in SVN don't have the correct properties. See patch script to follow (derived from http://svn.apache.org/repos/asf/incubator/shiro/tags/shiro-root-1.0.0-incubating/)	Bug	CLOSED	Minor	Fixed	None	1.0.0, 1.1.0	None	None		0	Alan Cabrera	Sebb
SHIRO-173	SHIRO	Make the HttpMethodPermissionFilter as the 'rest' filter in the pool of default filters	Add to the DefaultFilter enum to ensure it is added to the pool of default filters available to apps in their [urls] configuration.	New Feature	CLOSED	Major	Fixed	1.0.0	1.1.0	Web	None		0	Kalle Korhonen	Les Hazlewood
SHIRO-174	SHIRO	Integrate shiro with gwt(Google Web Toolkit)	Is it possible to introduce new APIs for gwt?	New Feature	OPEN	Major	Unresolved	None	None	Session Management	None		0	Unassigned	Chih-Liang Chang
SHIRO-175	SHIRO	Improve Set of permission and role checks	Both the shiro tag library and tapestry-security have seen fit to extend the permissions and role checks. It would be nice to have a complete set of annotations and permissions checks as follows: Right now, Shiro supports: @RequiresRoles(String) @RequiresPermissions(String) These have the additionally issue that multiple values are separated by commas, which conflicts with commas in the permission strings. I would like to suggest the following more complete, and specific set: @RequiresAllRoles(String[] ) <-- same as current RequiresRoles, except the AND is specified, and the roles can be done via: @RequiresAllRoles( {"role1", "role2"} ) @RequiresAnyRoles(String[] ) <--- the OR version, runs if any role is implied. @RequiresAllPermissions(String[] ) @RequiresAnyPermissions(String[] ) SecurityCheck(allRoles, anyRoles, allPermissions, anyPermissions) <--- all in one with one annotation	Improvement	CLOSED	Major	Fixed	None	1.1.0	Authorization (access control)	None		0	Kalle Korhonen	Pierce Wetter
SHIRO-176	SHIRO	AuthenticationInfo instances should be able to return stored salt	When comparing credentials hashed with a salt, the salt value should be easily accessible from the AuthenticationInfo instance. Perhaps a new SaltedAuthenticationInfo interface should be introduced (and have the UsernamePasswordToken implement this interface) in order to easily acquire a salt. Currently the HashedCredentialsMatcher attempts to acquire the salt from the AuthenticationToken. However, the large majority of the time, the salt will be stored with the AuthenticationInfo and it should be possible to acquire it from that. After adding the new interface, the HashedCredentialsMatcher will need a new method: getStoredCredentials(token, authcInfo) or something similar. The default implementation can simply call the existing getCredentials(token) method by default to retain current behavior.	Improvement	CLOSED	Major	Duplicate	0.9-RC1, (2)	1.1.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-177	SHIRO	Wron SimpleCookie expires locale	SimpleCookie.toCookieDate method to format cookie uses default locale. My default locale ru_RU. When browser receive cookie with expires formatted in non en_US locale, browser set cookie expires=session. Resolutiojon of this trouble is: private static String toCookieDate(Date date) { TimeZone tz = TimeZone.getTimeZone(GMT_TIME_ZONE_ID); DateFormat fmt = new SimpleDateFormat(COOKIE_DATE_FORMAT_STRING, Locale.US); fmt.setTimeZone(tz); return fmt.format(date); }	Bug	CLOSED	Major	Fixed	Incubation, (4)	1.1.0	Session Management	SimpleCookie expires	windows xp, jetty	0	Kalle Korhonen	Vasily Shestkov
SHIRO-178	SHIRO	Would like to be able to put shiro.ini in the WEB-INF directory with other web configuration files.	Would like to be able to put shiro.ini in the WEB-INF directory with other web configuration files. There is no way to do this via file: or classpath: at the moment. It makes sense for shiro.ini to be in the WEB-INF folder.	Improvement	CLOSED	Minor	Fixed	None	1.2.0	Configuration	None	web	0	Les Hazlewood	Brian Armstrong
SHIRO-179	SHIRO	Invalid expires date format with non english default locale	There is a problem with the "rememberMe" cookie feature. A cookie is sent to the user to store the rememberMe data, but the expiration date used for the formating is the system default one. In my case, expiration date are formated in french and the browser cannot correctly handle it (so rememberMe cookie will automatically be removed when the browser is closed) A fix could be done in the class : org.apache.shiro.web.servlet.SimpleCookie Around line 330 : private static String toCookieDate(Date date) { TimeZone tz = TimeZone.getTimeZone(GMT_TIME_ZONE_ID); DateFormat fmt = new SimpleDateFormat(COOKIE_DATE_FORMAT_STRING); // Here, SimpleDateFormat use default Locale fmt.setTimeZone(tz); return fmt.format(date); } replace with : private static String toCookieDate(Date date) { TimeZone tz = TimeZone.getTimeZone(GMT_TIME_ZONE_ID); DateFormat fmt = new SimpleDateFormat(COOKIE_DATE_FORMAT_STRING, Locale.ENGLISH); // Force english locale fmt.setTimeZone(tz); return fmt.format(date); } — A workaround is to replace the default local when calling the login() method : Locale systemLocale = Locale.getDefault(); Locale.setDefault(Locale.ENGLISH); currentUser.login(token); Locale.setDefault(systemLocale);	Bug	CLOSED	Major	Duplicate	None	1.1.0	Web	None	java	0	Kalle Korhonen	Nicolas ANTONIAZZI
SHIRO-18	SHIRO	Atlassian Crowd realm	Add a Atlassian Crowd realm	New Feature	CLOSED	Major	Won't Fix	0.9-RC1, (2)	1.2.0	None	None		0	Kalle Korhonen	Alan Cabrera
SHIRO-180	SHIRO	Upgrade 3rd party dependencies to latest stable versions	Our current dependency on Ehcache (1.4.1) and the Servlet API (2.4) are out of date and are causing dependency problems on many projects (Ehcache 1.4.1 is from 2004: 6.5 years old!). Our next release should change all 3rd party dependencies (not only Ehcache and the Servlet API) to the latest stable versions of each.	Improvement	CLOSED	Major	Fixed	1.0.0	1.1.0	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-181	SHIRO	Typo in IniShiroFilter javadoc	IniShiroFilter makes inconsistent references to "some.pkg" and "example.pkg".	Bug	CLOSED	Trivial	Fixed	1.0.0	1.1.0	Documentation	None		0	Kalle Korhonen	Erik Beeson
SHIRO-182	SHIRO	SimpleSession cannot be deserialized	org.apache.shiro.session.mgt.SimpleSession fails deserialization with the following error: at java.io.ObjectInputStream$BlockDataInputStream.readByte(ObjectInputStream.java:2666) at java.io.ObjectInputStream$BlockDataInputStream.readUTFChar(ObjectInputStream.java:3058) at java.io.ObjectInputStream$BlockDataInputStream.readUTFBody(ObjectInputStream.java:2955) at java.io.ObjectInputStream$BlockDataInputStream.readUTF(ObjectInputStream.java:2764) at java.io.ObjectInputStream.readUTF(ObjectInputStream.java:1032) at org.apache.shiro.session.mgt.SimpleSession.readObject(SimpleSession.java:481) There is a problem with the way the 'expired' flag is managed. In writeObject the 'expired' flag is written if it's set: if (expired) { out.writeBoolean(expired); } But, in getAlteredFieldsBitMask, the bit in the bit mask is only set when the 'exprired' flag is not set: bitMask = !expired ? bitMask | EXPIRED_BIT_MASK : bitMask; A short test: SimpleSession session = new SimpleSession("localhost"); // This doesn't work either // session.setExpired(true); ByteArrayOutputStream serialized = new ByteArrayOutputStream(); ObjectOutputStream serializer = new ObjectOutputStream(serialized); serializer.writeObject(session); serializer.close(); new ObjectInputStream(new ByteArrayInputStream(serialized.toByteArray())).readObject();	Bug	CLOSED	Major	Fixed	1.0.0	1.1.0	Caching , (1)	None	linux	0	Kalle Korhonen	Favio D. DeMarco
SHIRO-183	SHIRO	Unable to correctly extract the Initialization Vector or ciphertext	I obtain following exception while entering the secure page: [java] 101637 [http-8080-1] WARN org.apache.shiro.mgt.DefaultSecurityManager - Delegate RememberMeManager instance of type [org.apache.shiro.web.mgt.CookieRememberMeManager] threw an exception during getRememberedPrincipals(). [java] org.apache.shiro.crypto.CryptoException: Unable to correctly extract the Initialization Vector or ciphertext. [java] at org.apache.shiro.crypto.JcaCipherService.decrypt(JcaCipherService.java:381) [java] at org.apache.shiro.mgt.AbstractRememberMeManager.decrypt(AbstractRememberMeManager.java:491) [java] at org.apache.shiro.mgt.AbstractRememberMeManager.convertBytesToPrincipals(AbstractRememberMeManager.java:431) [java] at org.apache.shiro.mgt.AbstractRememberMeManager.getRememberedPrincipals(AbstractRememberMeManager.java:398) [java] at org.apache.shiro.mgt.DefaultSecurityManager.getRememberedIdentity(DefaultSecurityManager.java:567) [java] at org.apache.shiro.mgt.DefaultSecurityManager.resolvePrincipals(DefaultSecurityManager.java:434) [java] at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:335) [java] at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:819) [java] at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:149) [java] at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:202) [java] at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:269) [java] at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:83) [java] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) [java] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [java] at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233) [java] at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) [java] at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127) [java] at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [java] at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [java] at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298) [java] at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852) [java] at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588) [java] at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489) [java] at java.lang.Thread.run(Thread.java:619) [java] Caused by: java.lang.ArrayIndexOutOfBoundsException [java] at java.lang.System.arraycopy(Native Method) [java] at org.apache.shiro.crypto.JcaCipherService.decrypt(JcaCipherService.java:373) [java] ... 23 more Of course I have set the "securityManager.rememberMeManager.cipherKey" in shiro.ini but it did not help. kind regards.	Bug	CLOSED	Trivial	Fixed	1.0.0	1.1.0	Subject	None	java 1.6, debian	0	Kalle Korhonen	RynekMedyczny.pl
SHIRO-184	SHIRO	ShiroFilterFactoryBean 'filterChainDefinitions' property does not retain URL path matching order	Workaround until the next point release: use the 'filterChainDefinitionMap' property instead - it does retain correct path matching order. The problem: the current 'setFilterChainDefinitions' implementation uses a java.util.Properties object to load the text block into key/value pairs. Unlike a LinkedHashMap, Properties do not retain definition order. For example, the following chain definitions would fail: / = anon /UIDL/ = anon /** authc In a simple test, the pattern matcher first evaluated a /UIDL/ request against /, which didn't match. It then tried to match the request against /** which did match. However, this is incorrect behavior, because there is a /UIDL/ chain defined which was never matched, resulting in a denied request, even though there is a validly defined (and ordered) pattern for it.	Bug	CLOSED	Major	Fixed	1.0.0	1.1.0	Integration: Spring	None		0	Unassigned	Les Hazlewood
SHIRO-185	SHIRO	Shiro Annotations in Spring apps: annotations on method implementations not handled when using Spring's DefaultAutoProxyCreator	When using Spring's DefaultAutoProxyCreator mechanism to enable Shiro security checks via annotations (@RequiresAuthentication, @RequiresPermissions, etc), Shiro annotations on Interface methods are the only ones that are processed successfully. If a method implementatin is annotated directly, the authorization interceptor is never triggered during a method call.	Bug	CLOSED	Critical	Fixed	1.0.0	1.1.0	Integration: Spring	None		0	Les Hazlewood	Les Hazlewood
SHIRO-186	SHIRO	Credentials Hashing: AuthenticationInfo should be able to return a salt for credentials comparison	When hashing credentials, the CredentialsMatcher must be able to acquire a salt from the AuthenticationInfo returned from the realm since salts are account/user-specific. The HashedCredentialsMatcher should be updated to acquire the salt, if it exists, from the AuthenticationInfo and use that to perform a hash before comparing credentials.	Improvement	CLOSED	Major	Fixed	1.0.0	1.1.0	Authentication (log-in), (1)	None		0	Les Hazlewood	Les Hazlewood
SHIRO-187	SHIRO	Session less suject factory. (Support for Web Services Security)	This use case is connected to WS security. I would like to use shiro in session less mode . The reason for that is that each ws request will be issued with own security ctx (principals and credential),which are part of soap header and therefor no session management is needed/wanted at all. what is needed is a filter that will do the subject unbinding from threadlocal as complement to PasswordValidationCallback.PasswordValidator where the actual binding can be done. But what i'm missing is the session less factory for subject creation.	New Feature	CLOSED	Critical	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Peter Ladanyi
SHIRO-188	SHIRO	Asynchronous change of Subject. (hybrid session management)	I have procedure that needs to asynchronously modify principals of current subjects. My code is running in web container so i have shiro filter that does the usual thing reconstructs subject and binds it to thread local and then does the clean up. I have found that to be able do such thing i need to run in native session mode. Where the shiro does the session management, what is not really the preferred way because of bypassing web container session management. Maybe there should be kind of hybrid session management that will do possible to change also detached session (after do filter is called) .	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Peter Ladanyi
SHIRO-189	SHIRO	Make existing Shiro .jars OSGi bundles	In order to deploy Shiro in OSGi environments, the appropriate OSGi Manifest entries need to be added to the existing .jars. This change would be 100% backwards compatible as there is no code changes - only MANIFEST.MF additions. A more comprehensive OSGi update where more .jars could be created is not within the scope of this issue. If that is to be done, a new issue will be created and probably slated for Shiro 2.x, considering that it would probably incur backwards-incompatible package arrangements.	New Feature	CLOSED	Major	Fixed	None	1.1.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-19	SHIRO	JSecurity user access to active sessions	Hi hi, As discussed in this thread : http://n2.nabble.com/Subject-Session-relationship-td2303079.html, this feature request refers to accessing the active sessions in JSecurity. It would be useful at times to have access to the active sessions and implicitly to subject creation. One of the scenarios that will benefit from this, is to implement features like 'kick' (logout some random users by a super admin). However, currently there is a workaround to implement this using permissions ( see Les' response in thread mentioned above ). This feature requires some debate, voting , usage scenarios with weaks/strongs/why/when along with implementation/approach ideas, because it seems it might have performance implications if JSecurity users will be able to iterate in a standard way through potential thousands of sessions. My initial need was to kick all the logged in users (subjects) to enforce them login again in order to accept new terms and conditions, therefore I needed access to all active subjects.	New Feature	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Dragut Razvan
SHIRO-190	SHIRO	PortFilter not accepting custom port	The following shiro.ini code no worky. Tomcat running on port 8080, with SSL running on 8443. [main] ssl.port = 8443  [urls] /admin/** = ssl Access to http://host:8080/admin/foo redirects to https://host:8080/admin/foo, not https://host:8443/admin/foo. (It looks to me like PortFilter.onAccessDenied() appends the request.getServerPort() instead of the port. If I now read this correctly [might not, this is my first foray into Shiro source], it appears that you can only have SSL on 443 or 80, or else it must be on the same port as the request itself ) As far as I can tell, this occurs in all versions up until the current trunk.	Bug	CLOSED	Major	Fixed	Incubation, (2)	1.1.0	Web	None	java 1.6, mac os x	0	Unassigned	Janne Jalkanen
SHIRO-191	SHIRO	Change all StringBuffer usages to StringBuilder	for a minor performance improvement	Improvement	CLOSED	Minor	Fixed	0.9-RC1, (2)	1.1.0	None	None		0	Kalle Korhonen	Les Hazlewood
SHIRO-192	SHIRO	Create Getting Started Guide	The quickstart/10 min tutorial is great to help people understand how a dev would use Shiro but there should be some guide to help people deploy it to their own application. Perhaps more configuration focus.	Task	OPEN	Minor	Unresolved	None	None	Documentation	None		0	Unassigned	Alex Salazar
SHIRO-193	SHIRO	Rework features page on Shiro Site	The current Features page is dense and unapproachable to new users. The page should be retooled both in terms of layout and content. Layout should space out the content better to make it more readable The content should be grouped with headers and major features should be follow-up up by the benefit to users. The goal here is make it clear to a less sophisticated user, why all these Shiro features matter.	Task	CLOSED	Minor	Fixed	None	None	None	None		0	Unassigned	Alex Salazar
SHIRO-194	SHIRO	Create "who's using Shiro" wiki page	Hadoop has this and it's pretty impressive. If we can get users to contribute, it should let credibility to the project.	Task	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Alex Salazar
SHIRO-195	SHIRO	Shiro TLP: Finishing Tasks	After INFRA-3041 is finished, complete the following steps: 1. Adjust the svn:ignore properties for the global dist directory: $ svn co https://svn.apache.org/repos/asf/infrastructure/site/trunk/docs/dist/ tmp $ cd tmp $ svn propedit svn:ignore . ;; Add "shiro" in alphabetical order $ svn ci -m "added Shiro to svn:ignore in dist" 2. Update the live copy on people.apache.org: $ svn up /www/www.apache.org/dist 3. Add 'shiro' in alphabetical to infra's trunk/tools/ap-adduser 4. Alter svn:https://svn.apache.org/repos/asf/infrastructure/site/trunk to update the foundation website to include links to Shiro	Task	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-196	SHIRO	Change any remaining usages of StringBuffer to StringBuilder where possible		Improvement	CLOSED	Major	Duplicate	None	1.1.0	None	None		0	Kalle Korhonen	Les Hazlewood
SHIRO-197	SHIRO	Ini and Ini.Section should retain key-value definition order	Currently the Ini class and it's nested Section class use java.util.Properties for parsing section content. The Properties class does not retain definition order. This logic should be refactored to use a LinkedHashMap<String,String> instead to guarantee correct ordering in any INI [urls] sections. Note that fixing this issue should fix SHIRO-184.	Bug	CLOSED	Critical	Fixed	1.0.0	1.1.0	Configuration	None		0	Les Hazlewood	Les Hazlewood
SHIRO-198	SHIRO	HostAuthenticationToken does not extend AuthenticationToken	The HostAuthenticationToken interface by name has a strong relationship with AuthenticationToken. However, it does not extend that interface. By contrast, RememberMeAuthenticationToken does extend AuthenticationToken. This seems like an oversight in this interface's definition. Note: I realize this is very trivial; I'm just opening this issue to track that this may need to be changed.	Bug	CLOSED	Minor	Fixed	1.0.0	1.2.0	Authentication (log-in)	None		0	Les Hazlewood	Bryan Turner
SHIRO-199	SHIRO	Session Validation thread does not notify SessionListeners or cleans orphans	The session validation thread does indeed validate sessions, but we need to verify via a test case that it also cleans up any stopped or expired orphans that may exist as well.	Bug	CLOSED	Critical	Fixed	1.0.0	1.1.0	Session Management	None		0	Les Hazlewood	Les Hazlewood
SHIRO-2	SHIRO	org.jsecurity.web.SavedRequest is not serializable	Tomcat complains about non serializable attribute: SEVERE: Servlet.service() for servlet default threw exception java.lang.IllegalArgumentException: setAttribute: Non-serializable attribute at org.apache.catalina.session.StandardSession.setAttribute(StandardSession.java:1295) at org.apache.catalina.session.StandardSession.setAttribute(StandardSession.java:1256) at org.apache.catalina.session.StandardSessionFacade.setAttribute(StandardSessionFacade.java:130) at org.jsecurity.web.session.WebSession.setAttribute(WebSession.java:154) at org.jsecurity.session.mgt.AbstractSessionManager.setAttribute(AbstractSessionManager.java:167) at org.jsecurity.session.mgt.DelegatingSession.setAttribute(DelegatingSession.java:190) at org.jsecurity.session.ProxiedSession.setAttribute(ProxiedSession.java:149) at org.jsecurity.web.WebUtils.saveRequest(WebUtils.java:530) at org.jsecurity.web.filter.AccessControlFilter.saveRequest(AccessControlFilter.java:191) at org.jsecurity.web.filter.AccessControlFilter.saveRequestAndRedirectToLogin(AccessControlFilter.java:174) at org.jsecurity.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:164) at org.jsecurity.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:145) at org.jsecurity.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:175) at org.jsecurity.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:129) at org.jsecurity.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:183) at org.jsecurity.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:59) at org.jsecurity.web.servlet.JSecurityFilter.doFilterInternal(JSecurityFilter.java:384) at org.jsecurity.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:183)	Bug	CLOSED	Major	Fixed	None	None	None	None	ubuntu, java 1.6, tomcat	0	Les Hazlewood	Artem Dyranov
SHIRO-20	SHIRO	Support HTTP Digest Authentication	Just as we support HTTP Basic Authentication via the BasicHttpAuthenticationFilter, we should also support HTTP Digest Authentication out of the box as well: http://en.wikipedia.org/wiki/Digest_access_authentication	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Les Hazlewood
SHIRO-200	SHIRO	Add ability to configure basic authentication for specific HTTP methods	Currently, if one configures the basic authentication filter for a URL, it is applied to all HTTP methods. However, I'd like the read-only methods (GET, HEAD) to be completely open and only the update methods requiring authentication. Proposed syntax: <pre> [urls] /basic/** = authcBasic[POST,PUT,DELETE] </pre> I have attached a patch for review. BTW, the test case could do with renaming - it doesn't match the name of the class it's testing.	New Feature	RESOLVED	Major	Fixed	1.0.0	1.3.0	Authentication (log-in), Web	patch patch-with-tes		0	Unassigned	Peter Ledbrook
SHIRO-201	SHIRO	SessionsSecurityManager destroy() doesn't call super.destroy()	The destroy method in org.apache.shiro.mgt.SessionsSecurityManager does not make a call to super.destroy(). This is preventing the cache manager from being destroyed, as it lives further up the inheritance chain. All other *SecurityManager.destroy() methods properly invoke super.destroy().	Bug	CLOSED	Major	Fixed	1.0.0	1.1.0	None	None		0	Kalle Korhonen	Jared Stehler
SHIRO-202	SHIRO	Shiro Tags are not working in Icefaces page	I have an example project to test the use of Shiro with Icefaces, but the Shiro tags do not work on the Icefaces page. I have tried to convert the Icefaces with spring security example program to use Shiro instead of spring security, and while I can authenticate a user and roles appear to work with Icefaces components I have been unable to get tags to work. For example in the page secured/welcome.jspx if I have a conditional display of a field depending on role the field always gets displayed. Example: <html xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core" version="2.0" xmlns:shiro="http://shiro.apache.org/tags" xmlns:ice="http://www.icesoft.com/icefaces/component"> <head> <title>Shiro Security with ICEfaces Components</title> </head> <body> <p>Hi <shiro:guest>Guest</shiro:guest><shiro:user><shiro:principal/> is logged on</shiro:user> </p> <shiro:authenticated> <shiro:hasRole name="special"> <ice:outputText value="Shiro authenticated users with special role can see this message."/> </shiro:hasRole> </shiro:authenticated> Guest is shown although the user is authenticated, and principal shows nothing.	Bug	CLOSED	Major	Incomplete	1.1.0	None	shiro-faces, Web	None	windows xp, tomcat, java 1.6	0	Unassigned	Philip Kerrigan
SHIRO-203	SHIRO	ByteSource and CodecSupport refactoring	The org.apache.shiro.util.ByteSource ideally shouldn't be in a generic 'util' package. We have an existing org.apache.shiro.io package where it should reside. Also, the org.apache.shiro.codec.CodecSupport implements a lot of byte-related procedural logic and is subclassed by mostly Hash and CredentialsMatcher implementations. Ideally this class should either be removed or cleaned up to use ByteSource constructs and the other classes changed to prefer delegation to ByteSource behavior instead of inheriting from CodecSupport. Initially slated for 2.0 due to the backwards incompatibility this would cause.	Improvement	OPEN	Major	Unresolved	None	2.0.0	Cryptography & Hashing	None		0	Unassigned	Les Hazlewood
SHIRO-204	SHIRO	Deprecate subclasses of HashedCredentialsMatcher and cleanup Hash implementations	Per mailing list discussion, the HashedCredentialsMatcher does not need to be abstract and its subclasses should be deprecated (and later removed in 2.0). The Hash implementation subclasses may or may not work the same way based on dev team consensus. Adding this issue to have a number to track against when committing changes performed earlier as a result of SHIRO-186. Note that these changes should be 100% backwards compatible.	Improvement	CLOSED	Major	Fixed	None	1.1.0	Cryptography & Hashing	None		0	Les Hazlewood	Les Hazlewood
SHIRO-205	SHIRO	Filter configs cannot contain commas in INI format	Consider this configuration: [urls] /test/** = roles[guest, admin] The above won't work at the moment because PathMatchingFilter splits the right-hand value into 'roles[guest' and 'admin]'. Commas inside square brackets should be ignored when splitting the path value.	Bug	CLOSED	Major	Fixed	1.0.0	1.2.0	Configuration	None		0	Les Hazlewood	Peter Ledbrook
SHIRO-206	SHIRO	Support for JSF/Facelets	The attached patch implements a new support module 'shiro-faces' that implements a tag library compatible with Facelets, that can be used in JSF 1.2 projects. The tags are based on the original JSP tags, available in the web module.	New Feature	REOPENED	Major	Unresolved	1.1.0, 1.2.0	2.0.0	shiro-faces, Web	None	jsf, facelets	0	Unassigned	Deluan Quintao
SHIRO-208	SHIRO	Correct JDK 1.5 / 1.6 incompatibilities	The current trunk is not JDK 1.5 compatible. Fix these incompatibilities until the dev team decides such a time that we wish to be only 1.6+ compliant.	Task	CLOSED	Major	Won't Fix	1.0.0, 1.1.0, 1.2.0	1.3.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-209	SHIRO	Remove Atlassian Crowd support module from source release until license compatibility can be verified	Entering in this issue to keep track of it in release notes. It has already been completed	Task	CLOSED	Major	Fixed	None	1.1.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-21	SHIRO	Add OpenId as an authentication mechanism	From the forums: Are there any plans to incorporate OpenId as an authentication mechanism in JSecurity? Mike Tue, 02/19/2008 - 2:58pm ? lhazlewood Hi Mike, If you would please Hi Mike, If you would please open an issue for us (http://issues.jsecurity.org), you can bet that we'll try to get it incorporated as soon as possible. Also, if you have any code that you might be able to kickstart us, please include it. Thanks! Les	New Feature	OPEN	Major	Unresolved	None	None	None	patch		0	Les Hazlewood	Alan Cabrera
SHIRO-210	SHIRO	Add Struts2 support and sample	Add Struts2 support and sample.	New Feature	CLOSED	Major	Won't Fix	None	None	None	None		0	Alan Cabrera	Alan Cabrera
SHIRO-211	SHIRO	Rename jsecurity-sample.jks and its passwords	Probably shiro-sample.jks would work.	Task	OPEN	Major	Unresolved	None	None	Sample Apps	None		0	Unassigned	Alan Cabrera
SHIRO-212	SHIRO	Session managment seems to be bungled	This occurs in the struts 2 sample web site in the sandbox. When sessionMode is set to native for the org.apache.shiro.web.mgt.DefaultWebSecurityManager the JSESSION seems to be dropped and reset. You can see this as you log in using live http headers. The observed behavior is that you are continuously prompted to login.	Bug	CLOSED	Major	Cannot Reproduce	1.0.0	1.2.0	Session Management	None		0	Unassigned	Alan Cabrera
SHIRO-213	SHIRO	Password and hash management	Sometimes secure hashes are long lived. I usually will hash something but prefix the string to be hashed with a secret password; I will usually add a bit of salt too. Often I will need to change the password to that hash on a periodic basis. Sometimes I find out that a particular hash algorithm is no longer secure and need to change my hash. What do I do with the old hashes? How can I tell them apart from the new ones? What I do is store the hashes as tuples which contain enough information my code to figure out what hash to use. All of this applies to encryption as well. I'm wondering is if we should provide some kind of manager to manage all this.	New Feature	CLOSED	Major	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-214	SHIRO	Fix OSGI Exports and Imports for org.apache.shiro.ehcache	Shiro Eh-cache has no exports in the Manifest.MF Also, it requires a version of 1.4.0 to 2.0.0 for net.sf.ehcache, but upon reviewing the requirements, it requires version 2.2.0 of the Jar. I would suggest changing the Import-Package and Export-Package declarations to: Import-Package: net.sf.ehcache;version="[1.4.0,3.0.0)",org.apache.shir o.cache;version="[1.1.0,2.0.0)",org.apache.shiro.config;version="[1.1 .0,2.0.0)",org.apache.shiro.io;version="[1.1.0,2.0.0)",org.apache.shi ro.util;version="[1.1.0,2.0.0)",org.slf4j;version="1.6" Export-Package: org.apache.shiro.cache.ehcache	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	Caching	None		0	Unassigned	Jason M Jones
SHIRO-215	SHIRO	Make Shiro Maven POMs compatible with Maven 3	Make Shiro Maven POMs compatible with Maven 3.	Improvement	CLOSED	Major	Fixed	1.1.0	1.2.0	None	None		0	Unassigned	Alan Cabrera
SHIRO-216	SHIRO	Add @Documented to Shiro authorization annotations	Since security concerns are an important part of good API documentation, it would be nice if the Shiro authorization annotations like @RequiresUser and @RequiresPermissions were included in standard Javadoc output. For example, if a method in my application has this signature: @RequiresAuthentication public Account getAccount() { ... } It would be nice if the javadoc generated for my method included the fact that the @RequiresAuthentication annotation is present. I believe this can be done by simply adding @java.lang.annotation.Documented to each of the Shiro annotation types. See: http://download.oracle.com/javase/6/docs/api/java/lang/annotation/Documented.html As a point of reference, Spring annotations like @Transactional and @PreAuthorize do have the @java.lang.annotation.Documented annotation.	Improvement	OPEN	Minor	Unresolved	1.1.0	None	Authorization (access control)	None		0	Unassigned	Matt Brictson
SHIRO-217	SHIRO	Create JndiObjectFactory to allow JNDI object acquisition during configuration	During configuration, it would be nice to acquire objects from JNDI and use the returned objects as properties on other configured objects (e.g. in INI config). There is a JndiRealmFactory that already supports looking up entire Realms from JNDI, but it is more likely that lower-level objects would be acquired from JNDI instead (e.g. DataSources) and the Realms would be configured in INI and use those objects. This would be pretty easy to support: there is already a Shiro Factory interface and an AbstractFactory class. A new JndiObjectFactory subclass could be created that uses a JndiLocator to look up and acquire objects. The ReflectionBuilder implementation would need to be changed to handle encountering Factory objects - if an object in configuration specifies a Factory as a property, the builder needs to call the factory's getInstance method instead of using the Factory directly. I think this could be done in the ReflectionBuilder#resolveReference method without touching any other code.	New Feature	CLOSED	Major	Fixed	None	1.2.0	Configuration	None		0	Jared Bunting	Les Hazlewood
SHIRO-218	SHIRO	Add Shiro to Apache Project page	Submit the Shiro project information: http://projects.apache.org/create.html (or add DOAP location to https://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/files.xml)	Wish	CLOSED	Minor	Fixed	None	1.2.0	Web	None		0	Unassigned	John Bito
SHIRO-219	SHIRO	Spring documentation out of date in xml config	this page: http://shiro.apache.org/spring.html has xml that references: org.apache.shiro.web.DefaultWebSecurityManager which should be: org.apache.shiro.web.mgt.DefaultWebSecurityManager	Bug	CLOSED	Minor	Fixed	None	1.2.0	Documentation	None	web	0	Unassigned	Ray V
SHIRO-22	SHIRO	Enable POST redirects on session timeout	When a user is filling out a form for a long time and they don't submit (POST) within the session timeout limit they lose the newly entered data because after logging in they are redirected via GET to the target URI. This feature would enable redirecting a POST as a POST and therefore after successfully logging back in the user would see the result of their initial action. See email thread here: http://jsecurity.markmail.org/search/JSecurity+Saving+POST+data%3F?page=1 Summary: The solution might work like this: since we have control over the Request/Response pair, we could do something snazzy where, if the SavedRequest in the session is a POST request, we can manually construct a Request object indicating a POST method and send that into the filter chain directly instead of the originating GET Request given to us by the Servlet container. So, in essence, a GET would be redirected as a GET, and a POST would be redirected as a POST. It would work in a REST scenario because the SavedRequest is stored in the session. But this again assumes that this is even desirable (POST redirect). We could make it configurable I suppose (enablePostRedirects = true/false) in the JSecurityFilter configuration if someone didn't like that idea.	New Feature	OPEN	Major	Unresolved	None	None	None	patch		0	Unassigned	Jesse O'Neill-Oine
SHIRO-220	SHIRO	Fix links to Issue Tracker	The links for the Shiro Issue Tracker are not working on the http://shiro.apache.org/how-to-contribute.html page. They are currently pointing to: https://cwiki.apache.org/confluence/pages/createpage.action?spaceKey=SHIRO&title=Issue%20Tracker&linkCreation=true&fromPageId=5964195 But they should instead point to: https://issues.apache.org/jira/browse/SHIRO	Task	CLOSED	Minor	Fixed	None	None	Documentation	None		0	Kalle Korhonen	Dave Dombrosky
SHIRO-221	SHIRO	Allow Shiro Filters to be enabled or disabled with a config property	It is much more convenient to be able to enable or disable a filter in Shiro's [filters] (aka 'filter chain definitions') configuration based on a config property rather than actually removing it from a filter chain. For example, it would be much more convenient to turn on or off Shiro's SSL filter via configuration than to have to to mess with a <security-constraint> definition in web.xml. E.g. in development, you want SSL disabled, but in production it must be enabled - it is a real pain to try to do this in the build with Maven filtering for example because it messes with the IDE's ability to use that same web.xml file for embedded web deployments. The Shiro Filter property configuration approach is much more flexible and can even be controlled at runtime if desired.	Improvement	CLOSED	Major	Fixed	None	1.2.0	Web	None		0	Les Hazlewood	Les Hazlewood
SHIRO-222	SHIRO	Register LifecycleBeanPostProcessor before ShiroFilterFactoryBean [patch included]	LifecycleBeanPostProcessor needs to be registred before ShiroFilterFactoryBean because... ShiroFilterFactoryBean itself is a BeanPostProcessor, like LifecycleBeanPostProcessor too. So during AbstractApplicationContext.registerBeanPostProcessors() these two beans are created and added to nonOrderedPostProcessors, after then they get registered. At this execution point ShiroFilterFactoryBean is already created with its SecurityManager and defined Realms. So LifecycleBeanPostProcessor will not effect anymore on Realms init. http://shiro-user.582556.n2.nabble.com/Shiro-and-Spring-with-ShiroFilterFactoryBean-td5811127.html	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	Integration: Spring	None		0	Unassigned	manthos
SHIRO-223	SHIRO	TextConfigurationRealm does not initialize [patch included]	Since TextConfigurationRealm is not abstract and fully functional it can be used in a spring enviroment, initialized by LifecycleBeanPostProcessor.	Bug	CLOSED	Minor	Fixed	1.1.0	1.2.0	Integration: Spring	None		0	Unassigned	manthos
SHIRO-224	SHIRO	Refactor Shiro's Filters to favor composition over inheritance where possible.	Scheduling to 2.0 initially as this might be disruptive. Currently, to receive the benefits of the NameableFilter, OncePerRequestFilter, PathMatchingFilter, etc, a user must subclass one of these classes. It would be better to have a proxy of sorts that performs these functions for any filter and wraps the 'real' target filter. This way, users' filter implementations do not need to be tightly coupled to Shiro's API. This will also enable these features for already existing filters so they don't need to be refactored to subclass a Shiro class.	Improvement	OPEN	Major	Unresolved	None	2.0.0	Web	None		0	Unassigned	Les Hazlewood
SHIRO-225	SHIRO	ReflectionBuilder should support setting null and the empty string		Bug	CLOSED	Major	Fixed	None	1.2.0	Configuration	None		0	Les Hazlewood	Les Hazlewood
SHIRO-226	SHIRO	Default rememberMe cookie size is rather large	The rememberMe cookie size is fairly big since it uses the DefaultSerializer, which serializes a lot of stuff which is not really necessary - especially for the fairly common single realm - single principal case. Please see discussion at http://mail-archives.apache.org/mod_mbox/shiro-user/201012.mbox/%3C2C685FDE-71EE-4834-8816-8E00C890D050@ecyrd.com%3E	Improvement	OPEN	Major	Unresolved	1.1.0	None	RememberMe	patch		0	Kalle Korhonen	Janne Jalkanen
SHIRO-227	SHIRO	Leak in getPermissions method of JdbcRealm	It appears that the JdbcRealm.getPermissions is leaking PreparedStatements and ResultSets. These are both created inside a for loop, but the finally block with close statements is outside of the loop.	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	None	None		0	Kalle Korhonen	Jared Bunting
SHIRO-228	SHIRO	Provide way to use TextConfigurationRealm without extending it (i.e. an init method which calls processDefinitions)	I was trying to use the TextConfigurationRealm inside Spring for tests with the following configuration: <spring:bean id="myRealm" class="org.apache.shiro.realm.text.TextConfigurationRealm"> <spring:property name="userDefinitions"> <spring:value> test=test </spring:value> </spring:property> </spring:bean> However, there doesn't seem to be a way to call out to processDefinitions unless you extend this class. IMO there should be a default onInit method calls processDefinitions. Otherwise this class should be marked as abstract because it's currently useless unless you extend it.	Improvement	CLOSED	Major	Cannot Reproduce	1.1.0	None	None	None		0	Unassigned	Dan Diephouse
SHIRO-229	SHIRO	Fix Shiro Website Template to include Page Titles	Can you please modify the Shiro template you're using to include the page title on the page. On many pages, like the 10 minute tutorial, there's a page title so some users may not be clear on what they're looking at. I think the best place would be to put it under the nav bar in H1 font.	Improvement	CLOSED	Major	Fixed	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-23	SHIRO	Integrating Jsecurity with Guice	/* Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at * http://www.apache.org/licenses/LICENSE-2.0 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. */ package com.akube.framework.jsecurity.filter; import com.google.inject.Injector; import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.jsecurity.JSecurityException; import org.jsecurity.SecurityUtils; import org.jsecurity.mgt.SecurityManager; import org.jsecurity.web.config.IniWebConfiguration; import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; import java.util.Map; /** <p>JSecurity configuration that relies on Guice to define and initialize the JSecurity SecurityManager instance (and all of its dependencies) and makes it avaialble to this filter by performing a Guice injection. The URL/filter behavior is still loaded according to the behavior of the parent class {@link org.jsecurity.web.config.IniWebConfiguration} <p/> <p> The web.xml will need an entry like the following <filter> <filter-name>JSecurityFilter</filter-name> <filter-class>org.jsecurity.guice.GuiceJSecurityFilter</filter-class> <init-param> <param-name>config</param-name> <param-value> </param-value> </init-param> <init-param> <param-name>InjectorFactoryClass</param-name> <param-value>app.bootstrap.guice.InjectorFactory</param-value> </init-param> <init-param> <param-name>InjectorFactoryMethod</param-name> <param-value>getInjector</param-value> </init-param> </filter> the injector factory class - > injector factory method is called to obtain a guice injector </p> * @author Animesh Jain @see IniWebConfiguration @since 0.9 */ public class GuiceWebConfiguration extends IniWebConfiguration { public static final String INJECTOR_FACTORY_CLASS = "InjectorFactoryClass"; public static final String INJECTOR_FACTORY_METHOD = "InjectorFactoryMethod"; private static final Log log = LogFactory.getLog(GuiceWebConfiguration.class); protected Injector injector; public Injector getInjector() { return injector; } public void setInjector(Injector injector) { this.injector = injector; } public GuiceWebConfiguration() { } @Override public void init() throws JSecurityException { String className = getFilterConfig().getInitParameter(INJECTOR_FACTORY_CLASS); String methodName = getFilterConfig().getInitParameter(INJECTOR_FACTORY_METHOD); System.out.println("*************** GuiceWebConfiguration init() ***************"); System.out.println("injector class = "+className); System.out.println("injector method = "+methodName); /* Get injector from a class which holds an instance for this application. I had a static method in a class that returns the injector. I've put the class name and method name in filter init params. */ try { Class clazz = Class.forName(className); Method method = clazz.getMethod(methodName); Injector injector = (Injector) method.invoke(null); System.out.println("Injector instantiated = "+injector); setInjector(injector); } catch (ClassNotFoundException e) { log.error("Injector factory class not found - "+className, e); throw new JSecurityException("Injector factory class not found - "+className, e); } catch (NoSuchMethodException e) { log.error("Injector factory method not found - "+methodName+" in class "+className, e); throw new JSecurityException("Injector factory method not found - "+methodName+" in class "+className, e); } catch (InvocationTargetException e) { log.error("InvocationTargetException when trying to invoke - "+methodName+" in class "+className, e); throw new JSecurityException("InvocationTargetException when trying to invoke - "+methodName+" in class "+className, e); } catch (IllegalAccessException e) { log.error("IllegalAccessException when trying to invoke - "+methodName+" in class "+className, e); throw new JSecurityException("IllegalAccessException when trying to invoke - "+methodName+" in class "+className, e); } super.init(); } @Override protected SecurityManager createDefaultSecurityManager() { return createSecurityManager(null); } @Override protected SecurityManager createSecurityManager(Map<String, Map<String, String>> sections) { return getOrCreateSecurityManager(injector, sections); } protected SecurityManager getOrCreateSecurityManager(Injector injector, Map<String, Map<String, String>> sections) { System.out.println("Trying to create Security Manager"); SecurityManager securityManager = null; if (injector != null) { /* The security manager is obtained using the Guice injector. Typically one will have to use a custom provider and bind it to the DefaultWebSecurityManager class This is the way Guice handles external configuration */ securityManager = injector.getInstance(DefaultWebSecurityManagerProvider.class).get(); SecurityUtils.setSecurityManager(securityManager); } else { throw new JSecurityException("Injector is null. Cannot instantiate security manager"); } return securityManager; } } ---------------------------------------------------------------------------------------------------------------------------- The filter class can be - /** <p>Extension of JSecurityFilter that uses {@link GuiceWebConfiguration} to configure the JSecurity instance.</p> * @author Animesh Jain */ public class GuiceJSecurityFilter extends JSecurityFilter { public GuiceJSecurityFilter() { this.configClassName = GuiceWebConfiguration.class.getName(); } } ---------------------------------------------------------------------------------------------------------------------------- The Guice module can be public class JSecurityModule extends AbstractModule { protected void configure() { // the DefaultWebSecurityManagerProvider class provides a custom configured SecurityManager if needed bind(DefaultWebSecurityManagerProvider.class).asEagerSingleton(); bindInterceptor(any(), annotatedWith(RequiresRoles.class), new AopAllianceAnnotationsAuthorizingMethodInterceptor()); } } ---------------------------------------------------------------------------------------------------------------------------- In my own project I've somewhat tried to abstract out a few classes to make things easily configurable with Guice + Jsecurity + Hibernate + Stripes.. so I can share that project scaffold if needed.	New Feature	CLOSED	Minor	Fixed	None	1.2.0	None	None		0	Kalle Korhonen	Animesh Jain
SHIRO-230	SHIRO	Add To The Permissions Part Of The Documentation That permissionsLookupEnabled Must Be Set To True	I was upgrading a project from JSecurity version 0.9 to Shiro version 1.1.0. Permissions associated with roles were not being looked up when authenticating a subject. After researching why and posting a question on the forum I found out that in Shiro version 1.1.0 the programmer must set the value of permissionsLookupEnabled to true as its default is false. This information is not in the permissions section of the Shiro documentation (http://shiro.apache.org/permissions.html). The only place I was able to find information about setting permissionsLookupEnabled to true is in the JavaDoc for class JdbcRealm. Recommend you add more information about setting permissionsLookupEnabled to true in the Permissions section of the Shiro documentation.	Improvement	OPEN	Minor	Unresolved	1.1.0	None	Documentation	None		0	Unassigned	Bruce Phillips
SHIRO-231	SHIRO	Realm shouldn't implement Authorizer but AuthorizingRealm should implement it directly	As discussed at http://mail-archives.apache.org/mod_mbox/shiro-dev/201101.mbox/%3CAANLkTin8SNXriLCWcLfQsbzaTy7S3a18mWJQu7ApJ3Fq@mail.gmail.com%3E	Bug	CLOSED	Major	Fixed	0.9, 1.0.0, 1.1.0	1.2.0	Realms	None		0	Kalle Korhonen	Kalle Korhonen
SHIRO-232	SHIRO	Expose more methods on SimpleAccountRealm	If addRole/getRole was exposed on SimpleAccountRealm it would be easier to use programattically. Right now you can't add permissions to a role if you're using just the API AFAICT. Additionally, a new method addRole(String roleName, String... permissions) would be very nice.	Improvement	OPEN	Major	Unresolved	Incubation	None	Configuration	None		0	Unassigned	Dan Diephouse
SHIRO-233	SHIRO	Introduce AuthenticationListenerRegistrar interface and add addAuthenticationListener() and removeAuthenticationListener() operations to it	Funny as it is, though we have AuthenticationListener interface, we don't have a way of adding or removing these listeners in the API (you can access AbstractAuthenticator's listener collection if your Authenticator extends it).	Improvement	OPEN	Major	Unresolved	0.9, 1.0.0, 1.1.0	None	Specification API	None		0	Kalle Korhonen	Kalle Korhonen
SHIRO-234	SHIRO	ClassCastException in checkRoles	I get the following: java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Ljava.lang.String; at org.apache.shiro.authz.ModularRealmAuthorizer.checkRoles(ModularRealmAuthorizer.java:426) In checkRoles, the collection is incorrectly cast to a String[]. The line needs to do toArray(new String[roles.size]) and not toArray().	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	None	None		0	Unassigned	Dan Diephouse
SHIRO-235	SHIRO	checkRoles(String... roles) is unimplemented	The fact that this method in DelegatingSubject is unimplemented kinda sucks especially since the other checkRoles method is broken too. (SHIRO-234) public void checkRoles(String... roleIdentifiers) throws AuthorizationException { }	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	Authorization (access control)	None		0	Les Hazlewood	Dan Diephouse
SHIRO-236	SHIRO	Adding <relativePath> to the <parent> element to avoid Maven 3.0.x issue where parent is not in local repo yet.	Add <relativePath> to the <parent> declaration in the pom.xml files to workaround issue with Maven 3.0.x where the parent is not in the local repo (eg when you built from scratch in developer machine) you will get error "Non-resolvable parent POM: Could not find artifact " like this: The project org.apache.shiro:shiro-spring:1.2.0-SNAPSHOT (/Users/hsaputra/shiro/trunk/support/spring/pom.xml) has 1 error [ERROR] Non-resolvable parent POM: Could not find artifact org.apache.shiro:shiro-root:pom:1.2.0-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 22, column 13 -> [Help 2] Adding relative path element to the parent element seems to fix this.	Improvement	CLOSED	Minor	Fixed	None	1.2.0	None	None		0	Kalle Korhonen	Henry Saputra
SHIRO-237	SHIRO	nullpointer error at permission check when no permissionresolver is set	in class AuthorizingRealm, the isPermitted( ... checks never look if the the permissionResolver are set but allways will query them in case a permission reqeust os asked for. Solutions: 1. catch empty/ null permissionResolver in Authorizingrealm 2. force that all derived AuthorizingRealms have a permissionResolver by making this required in the constructor 3. defaultset the current only implementation (WildcardPermissionResolver) into the getPermissionResolver method so either this one is used or it has to be overwritten I would suggest 2. as its most clean and will fail/ force to be cared with at compiletime already. PS: this is the issue described in my mailing to list http://mail-archives.apache.org/mod_mbox/shiro-user/201012.mbox/browser	Bug	CLOSED	Critical	Fixed	1.1.0	1.2.0	Realms	None		0	Kalle Korhonen	Korbinian Bachl
SHIRO-238	SHIRO	RealmFactory not working properly	Im trying to use a realmFactory to register a realm. The config is quite simple: [main] realmFactory = se.example.init.MyRealmFactory authc.loginUrl = / After debugging the problem I stumbled upon the following lines in org.apache.shiro.config.IniSecurityManagerFactory (Line 173 in version 1.1.0) private void addToRealms(Collection<Realm> realms, RealmFactory factory) { LifecycleUtils.init(factory); Collection<Realm> factoryRealms = factory.getRealms(); if (!CollectionUtils.isEmpty(realms)) { realms.addAll(factoryRealms); }  } Changing if (!CollectionUtils.isEmpty(realms)) { to if (!CollectionUtils.isEmpty(factoryRealms)) { solves the problem.	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	Configuration	None		0	Les Hazlewood	jontro
SHIRO-239	SHIRO	Support JSR-250	Is it possible to add JSR 250 Support in Shiro (@RunAs, @RoleAllowed ..)	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Pierre Devreux
SHIRO-24	SHIRO	X509 Client certificate authentication	Add support for X509 Authentication. Perhaps should not be complicated when we see how Acegi source code achieve this (http://www.acegisecurity.org/guide/springsecurity.html#x509) ? Notice that the X509Auth is basically a validation of the client certificate. Because if we reach this point, it means that the application server has successfully trusted the client certificate against its trust store.	New Feature	OPEN	Major	Unresolved	None	None	None	patch patch-with-tes		0	Unassigned	Alan Cabrera
SHIRO-240	SHIRO	ServletContainerSessionManager does not honor web.xml's session timeout value	Instead of just calling request.getSession(), the implementation looks at the parent class's 'globalSessionTimeout' value and explicitly sets the session timeout to be that value. However, when the ServletContainerSessionManager is configured, it is expected to defer to the servlet container for all session-related configuration. The current implementation should not be overriding the session timeout value.	Bug	CLOSED	Major	Fixed	1.0.0, 1.1.0	1.2.0	Web	ServletContainerSess		0	Les Hazlewood	Les Hazlewood
SHIRO-241	SHIRO	Update Shiro's Project Description in JIRA	The current description still references incubator.shiro.org and should instead reference shiro.apache.org I propose we update the description to remove the mention of Jsecurity since Shiro is now TPL and much bigger on its own.	Bug	CLOSED	Minor	Fixed	None	None	None	None		0	Les Hazlewood	Alex Salazar
SHIRO-242	SHIRO	Add a Website Component to JIRA	We'd like to be keeping track of issues regarding the Shiro website in JIRA and would like a component set up to make that easier.	Task	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Alex Salazar
SHIRO-243	SHIRO	when method is unauthorized, please include method info in stack trace	We are using Shiro's annotation-based method authorization support, to enforce security checks on remotely invoked services. The problem is that when we get an AuthorizationException, it doesn't include any information about which particular method failed. Looks like it would be really easy to include this in AuthorizingAnnotationMethodInterceptor.assertAuthorized() as follows: public void assertAuthorized(MethodInvocation method) throws AuthorizationException { try { ((AuthorizingAnnotationHandler)getHandler()).assertAuthorized(getAnnotation(mi)); } catch(AuthorizationException ae) { throw new AuthorizationException("method not authorized: " + method.getMethod(), ae); } }	Improvement	CLOSED	Minor	Fixed	None	1.2.0	None	None		0	Kalle Korhonen	Jim Newsham
SHIRO-244	SHIRO	Typo in IniSecurityManagerFactory causes a requirement for a dummy Realm in addition to a RealmFactory	In the private addToRealms-method of IniSecurityManagerFactory, there is a check: Collection<Realm> factoryRealms = factory.getRealms(); if (!CollectionUtils.isEmpty(realms)) { realms.addAll(factoryRealms); } The if-clause should be against the factoryRealms variable, as this check forces one to create a dummy Realm in the configuration file in order for the factory created Realms to be added as well.	Bug	CLOSED	Minor	Duplicate	1.1.0	None	Realms	None		0	Unassigned	Esa Loukkola
SHIRO-245	SHIRO	Put Page Titles on All Shiro pages	Many of the Shiro web pages have a page title that shows up on the browser but not the actual page people are looking at. This is an issue for both usability as well as search engine optimization.	Improvement	CLOSED	Critical	Fixed	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-246	SHIRO	Search Engine Optimization	The site needs a page by page SEO treatment to ensure Google is picking it up and users can find what they're looking for. Specifically we need to: 1. Highlight 1-2 keywords per page that are most relevant to the page and make sure they are in the Page Title, the first H1 tag, and mentions across the page 2. We need to create the meta tag "description" for the site since thats the only tag that matters.	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-247	SHIRO	Fix Website Autoexport	Autoexport seems to only update pages that have been changed. This works well most of the time but when there is a change to a page component that is not part of the confluence wiki page then it never updates. An example is the nav bar and blog entries. If you just change the nav or a create a new blog, the pages that include those components will not see an update because the pages themselves didn't trigger an update.	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-248	SHIRO	Apache Shiro Logo link to Home	The Apache Shiro logo should be a link to the Home page since thats what most people expect.	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-249	SHIRO	Create XML Sitemap	XML Sitemap will help google better index the site	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-25	SHIRO	Assumed Identity, aka 'Run As' support	Potential solutions are being discussed here: http://markmail.org/message/hnex52p2puw2pip5 Please update this issue once we find an agreeable solution.	New Feature	CLOSED	Critical	Fixed	1.0.0	1.0.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-250	SHIRO	Create "Follow Shiro on Twitter" Link		Improvement	CLOSED	Minor	Fixed	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-251	SHIRO	Optimize Shiro Video for Google Indexing	Transcript, etc.	Improvement	OPEN	Minor	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-252	SHIRO	Add Sharing Links to Blogs/News	Facebook, Twitter, Email, etc	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-253	SHIRO	Restructure Website Documentation	The current Documentation structure is a little unclear. https://cwiki.apache.org/confluence/display/SHIRO/Documentation What is the difference between a reference manual and a user guide? What type of information should where?	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-254	SHIRO	Identify Missing Website Documentation	What documentation is missing, TBD, etc? Once we identify it, we can then begin filling it in.	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-255	SHIRO	Make it easier for people to contribute to the website	Unclear how to do this but needed. Perhaps its cleaner documentation or easier linking.	Improvement	OPEN	Minor	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-256	SHIRO	Deprecate PathMatchingFilter and remove it from the filter inheritance hierarchy	Each filter should carry its own configuration instead. Path (pattern) matching should only need to be done on the chain resolver level. May need to wait for 2.0, but I'll see if this still fits into 1.x without major complications.	Improvement	OPEN	Major	Unresolved	0.9, 1.0.0, 1.1.0	2.0.0	Web	None		0	Unassigned	Kalle Korhonen
SHIRO-257	SHIRO	Support case insensitive url path matching	Three places to modify: 1) configuration needs to normalized (lowercases), PathMatchingFilterChainResolver (perhaps just a property of PatternMatcher?) and PathMatchingFilter, the last related to SHIRO-256, hopefully I could just remove the filter functionality.	Improvement	OPEN	Major	Unresolved	0.9, 1.0.0, 1.1.0	2.0.0	Web	None		0	Unassigned	Kalle Korhonen
SHIRO-258	SHIRO	News RSS Feed	Would be a neat feature to allow users to subscribe via RSS If the CMS is happening then this might be a backlog until any change since it's unclear, what if any work would be needed to make it work with Confluence.	New Feature	OPEN	Trivial	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-259	SHIRO	Improve <meta title> tags on pages for SEO	Front page should stay as is with only a small change. Instead of "Apache Shiro - Java Security Framework" it should be "Apache Shiro | Java Security Framework" for consistency with other pages. All other pages should have "[page title] | Apache Shiro"	Improvement	CLOSED	Major	Fixed	None	None	Web Site	None		0	Les Hazlewood	Alex Salazar
SHIRO-26	SHIRO	JBoss 4.x and 5.x initial support	Create JBoss integration, preferrably w/ a JBoss .sar if possible. Look into interceptor/AOP configuration options for 4.x and 5.x to make this as easy as possible. A pure drop-in solution where JAAS isn't needed at all would be ideal.	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Alan Cabrera
SHIRO-260	SHIRO	Fix Events Page	The page is poorly populated and formated.	Bug	CLOSED	Major	Fixed	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-261	SHIRO	Simplify Contribute Page	Simplify Contribute Page. It needs to be simpler and more concise so that people actually read it.	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-262	SHIRO	Cleanup Top Navigation	Things feel out of order Here's what we currently have: Home Download About -What is Shiro? -Features -License Documentation -10 Minute Tutorial Reference Manual API Community -How to Contribute -News -Events -Articles -Developer Resources Support -Mailing Lists -Forums -Issue Tracker Here's what I propose: Home About -What is Shiro -Features -News -Events -License Documentation -10 Minute Tutorial -Reference Manual -API Contribute -How to contribute -Developer Resources -Todos? It's currently an export of open issues from JIRA Community Support -Articles -Mailing Lists -Forums -Issue & Bug Tracker Commercial Support	Improvement	CLOSED	Major	Fixed	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-263	SHIRO	Shorten "About Shiro" page	Needs to made more clear and concise so that people actually read it	Improvement	OPEN	Minor	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-264	SHIRO	Write Authorization Guide		Task	CLOSED	Critical	Fixed	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-265	SHIRO	Fix the way Blogs/News pages are displaying on the site	When you click on a blog/news link, the resulting page just shows the body text and no other data. It needs h1. title, a date, an author, etc.	Improvement	OPEN	Major	Unresolved	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-266	SHIRO	Login/Logout: Enable pluggable Subject state binding	After login, a subject's state (principals, authentication state, etc) are bound to the Subject's session. This allows Shiro to reconstruct the Subject instance later on by acquiring a Session (e.g. by id) and reconstructing the Subject based on the Session's state. In stateless environments (e.g. some REST-enabled applications), it is not desirable to create a session. There should be a pluggable component that performs state binding and unbinding for subject login and logout, respectively. Stateless applications can choose to configure Shiro with a stateless binder if they don't want sessions to be created.	Improvement	CLOSED	Major	Fixed	1.0.0, 1.1.0	1.2.0	Session Management, (1)	None		0	Les Hazlewood	Les Hazlewood
SHIRO-267	SHIRO	Page by Page SEO Treatment	1. Identify 1-2 keywords for each page 2. Put key words in <title> and h1. 3. Ensure keywords are used often in page content 4. Were reasonable, bold keywords 5. Tag and label images and videos. With keywords is relevant. 6. Replace generic links like "Click Here" with relevant keywords for the current page or the target page.	Improvement	CLOSED	Major	Fixed	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-268	SHIRO	Add Webmaster tools : Google, Yahoo, Bing	Upload verification files	Improvement	CLOSED	Major	Fixed	None	None	Web Site	None		0	Unassigned	Alex Salazar
SHIRO-269	SHIRO	Support Unix-style PAM authentication	Unix-style PAM allows pluggable authentication at the operating system-level. Having a Shiro realm that can authenticate against PAM would be useful for certain deployment strategies. An implementation of such a Realm is available here: https://github.com/plaflamme/shiro-libpam4j Uses libpam4j (thanks Koshuke!): https://github.com/kohsuke/libpam4j	Improvement	OPEN	Major	Unresolved	None	None	Realms	None		0	Kalle Korhonen	Philippe Laflamme
SHIRO-27	SHIRO	OSGi support	It would be nice to deploy JSecurity as an OSGi bundle, picking up 1 or more Realms from the OSGi discovery service. This allows people to deploy JSecurity as a system wide Service in an application independent manner (for those who use OSGi at least).	New Feature	CLOSED	Major	Duplicate	None	1.1.0	None	None		0	Unassigned	Alan Cabrera
SHIRO-270	SHIRO	DelegatingSubjectTest#testRunAs null pointer exception	When all the tests are run, the test DelegatingSubjectTest#testRunAs throws null pointer exception java.lang.NullPointerException at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:121) at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:306) at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:295) at org.apache.shiro.mgt.DefaultSecurityManager.bind(DefaultSecurityManager.java:163) at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:284) at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:247) at org.apache.shiro.subject.DelegatingSubjectTest.testRunAs(DelegatingSubjectTest.java:157) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) If only DelegatingSubjectTest class tests are run, everything is OK. NOTE: point 3 of https://issues.apache.org/jira/browse/SHIRO-208 mentions similar issue.	Bug	CLOSED	Minor	Fixed	None	1.2.0	None	None	java 1.6	0	Les Hazlewood	Maria Jurcovicova
SHIRO-271	SHIRO	mvn install fails because pom namespaces are not correct	The build does not work because the subprojects of support reference shiro-root instead of shiro-support; the attached patch fixes this problem	Bug	CLOSED	Blocker	Fixed	1.1.0	1.2.0	None	None		0	Unassigned	Andreas Pieber
SHIRO-272	SHIRO	Svnignores for support/groovy does not exclude eclipse files		Bug	CLOSED	Trivial	Fixed	1.1.0	1.2.0	None	None		0	Kalle Korhonen	Andreas Pieber
SHIRO-273	SHIRO	ModularRealmAuthenticator does not call AuthenticationStrategy.beforeAttempt		Bug	CLOSED	Critical	Fixed	1.0.0, 1.1.0	1.2.0	Authentication (log-in)	None		0	Les Hazlewood	Les Hazlewood
SHIRO-274	SHIRO	Apache Karaf Features File	Apache Karaf is a small OSGi based runtime which provides a lightweight container onto which various components and applications can be deployed. The following patch provides a features.xml which can be used in to install Apache Shiro easily in Apache Karaf. To test the patch download apache karaf 2.2.0-SNAPSHOT (because of the used obr resolver not backward-compatible to 2.1.x; but we're going to release karaf-2.2.0 very soon anyway...) here [1] or here [2], unizp/untar; now start Karaf: pieber@coprime [04:18:58] [~/apache-karaf-2.1.99-SNAPSHOT]  -> % ./bin/karaf          __ __                  ____              / //_/____ __________ _/ __/             / ,<  / __ `/ ___/ __ `/ /_              / /| |/ /_/ / /  / /_/ / __/             /_/ |_|\__,_/_/   \__,_/_/             Apache Karaf (2.1.99-SNAPSHOT)  Hit '<tab>' for a list of available commands and '[cmd] --help' for help on a specific command. Hit '<ctrl-d>' or 'osgi:shutdown' to shutdown Karaf. Afterwards add the new shiro features file: karaf@root> features:addurl mvn:org.apache.shiro/shiro-features/1.2.0-SNAPSHOT/xml/features Now we can install the features... karaf@root> features:install shiro-web shiro-ehcache shiro-quartz shiro-spring shiro-aspectj ... and check if everything was installed correctly karaf@root> list START LEVEL 100 , List Threshold: 50    ID   State         Blueprint      Level  Name [  42] [Active     ] [            ] [   60] Apache Shiro :: Core (1.2.0.SNAPSHOT) [  43] [Active     ] [            ] [   60] geronimo-servlet_2.5_spec (1.1.2) [  44] [Active     ] [            ] [   60] Jetty :: Utilities (7.2.2.v20101205) [  45] [Active     ] [            ] [   60] Jetty :: IO Utility (7.2.2.v20101205) [  46] [Active     ] [            ] [   60] Jetty :: Http Utility (7.2.2.v20101205) [  47] [Active     ] [            ] [   60] Jetty :: Continuation (7.2.2.v20101205) [  48] [Active     ] [            ] [   60] Jetty :: Server Core (7.2.2.v20101205) [  49] [Active     ] [            ] [   60] Jetty :: Security (7.2.2.v20101205) [  50] [Active     ] [            ] [   60] Jetty :: Servlet Handling (7.2.2.v20101205) [  51] [Active     ] [            ] [   60] Jetty :: XML utilities (7.2.2.v20101205) [  52] [Active     ] [            ] [   60] OPS4J Pax Web - API (1.0.1) [  53] [Active     ] [            ] [   60] OPS4J Pax Web - Service SPI (1.0.1) [  54] [Active     ] [            ] [   60] OPS4J Pax Web - Runtime (1.0.1) [  55] [Active     ] [            ] [   60] OPS4J Pax Web - Jetty (1.0.1) [  57] [Active     ] [            ] [   60] OPS4J Pax Web - Jsp Support (1.0.1) [  58] [Active     ] [            ] [   60] OPS4J Pax Web - Extender - WAR (1.0.1) [  59] [Active     ] [            ] [   60] OPS4J Pax Web - Extender - Whiteboard (1.0.1) [  60] [Active     ] [            ] [   60] OPS4J Pax Web - FileInstall Deployer (1.0.1) [  61] [Active     ] [            ] [   60] OPS4J Pax Url - war:, war-i: (1.2.5) [  62] [Active     ] [            ] [   60] Apache Shiro :: Web (1.2.0.SNAPSHOT) [  63] [Active     ] [            ] [   60] Apache ServiceMix :: Bundles :: ehcache (2.3.0.1) [  64] [Active     ] [            ] [   60] Apache Shiro :: Support :: EHCache (1.2.0.SNAPSHOT) [  65] [Active     ] [            ] [   60] Commons Collections (3.2.1) [  66] [Active     ] [            ] [   60] Apache ServiceMix Bundles: quartz-1.6.1 (1.6.1.1) [  67] [Active     ] [            ] [   60] Apache Shiro :: Support :: Quartz (1.2.0.SNAPSHOT) [  68] [Active     ] [            ] [   60] Apache ServiceMix :: Bundles :: aopalliance (1.0.0.4) [  69] [Active     ] [            ] [   60] Spring Core (3.0.5.RELEASE) [  70] [Active     ] [            ] [   60] Spring ASM (3.0.5.RELEASE) [  71] [Active     ] [            ] [   60] Spring Expression Language (3.0.5.RELEASE) [  72] [Active     ] [            ] [   60] Spring Beans (3.0.5.RELEASE) [  73] [Active     ] [            ] [   60] Spring AOP (3.0.5.RELEASE) [  74] [Active     ] [            ] [   60] Spring Context (3.0.5.RELEASE) [  75] [Active     ] [            ] [   60] Spring Context Support (3.0.5.RELEASE) [  76] [Active     ] [            ] [   60] Apache Shiro :: Support :: Spring (1.2.0.SNAPSHOT) [  77] [Active     ] [            ] [   60] Apache ServiceMix :: Bundles :: aspectj (1.6.8.1) [  78] [Active     ] [            ] [   60] Apache Shiro :: Support :: AspectJ (1.2.0.SNAPSHOT) [1] http://repository.apache.org/snapshots/org/apache/karaf/assemblies/apache-karaf/apache-karaf/2.1.99-SNAPSHOT/apache-karaf-2.1.99-SNAPSHOT.tar.gz [2] http://repository.apache.org/snapshots/org/apache/karaf/assemblies/apache-karaf/apache-karaf/2.1.99-SNAPSHOT/apache-karaf-2.1.99-SNAPSHOT.zip	New Feature	CLOSED	Major	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Andreas Pieber
SHIRO-275	SHIRO	JdbcRealm.doGetAuthenticationInfo doesn't follow javadoc	This was discussed on the mailing list and my point is: The javadoc says "A null return value means that no account could be associated with the specified token." and "@throws org.apache.shiro.authc.AuthenticationException if there is an error acquiring data or performing realm-specific authentication logic for the specified <tt>token</tt>". The only way that would be acceptable is if we say that no user in the database is "an error acquiring data" which seems a bit stretched. This causes confusion and may result in errors for someone implementing a Strategy or Authenticator who would not expect such behaviour.	Improvement	OPEN	Minor	Unresolved	1.1.0	None	Realms	None		0	Unassigned	Ilya Pyatigorskiy
SHIRO-276	SHIRO	remove empty support/groovy project	Since the support/groovy project is empty it should be removed for the moment and recreated if actually needed.	Improvement	CLOSED	Trivial	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Andreas Pieber
SHIRO-277	SHIRO	JdbcRealm needs to be refactored	There are at least 2 obvious problems: 1) the javadoc for JdbcRealm.setPermissionsQuery suggests that the query is expected to have 3 columns ("containing the fully qualified name of the permission class, the permission name, and the permission actions (in that order)"), but the code actually looks only for 1 - permission actions on index 0 2) it doesn't support salt - checks only for password matching	Improvement	RESOLVED	Major	Fixed	1.1.0	1.2.0	Realms	patch patch-with-tes		0	Unassigned	Ilya Pyatigorskiy
SHIRO-278	SHIRO	Rename JndiLdapRealm to DefaultLdapRealm	the existing name 'JndiLdapRealm' (which should be our default widely-used implementation) was chosen because it uses the JNDI API as an LDAP API. End-users have explained that they overlooked the class because they thought it implied that they needed to be using JNDI (e.g. in an app server) in order to use it. Because of this confusion, the name should be changed to 'DefaultLdapRealm' to indicate it is our default/common implementation.	Improvement	RESOLVED	Major	Fixed	1.1.0	1.3.0	Realms	None		0	Unassigned	Les Hazlewood
SHIRO-279	SHIRO	Create a simple command line utility to hash passwords	This can be used when hashing passwords that will go in shiro.ini's [users] section, as well as will be useful for testing.	New Feature	CLOSED	Minor	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-28	SHIRO	Group support	We already support the concept of roles and permissions. The framework should also support the concept of 'groups' as well, but we need to clearly define what we mean by group. Although simplified, I define them as the following: Permission - an atomic representation of ability to perform some action on a given target. A permission has nothing to do with a user - e.g. open a file, access a menu, etc. Role - a named collection of permissions. A user "gains" permissions implicitly by having roles (which contain permissions). Group - an tertiary association construct - A group has 1 collection of users and 1 collection of roles. That is, I view a group as a convenience mechanism - a user has the group's roles by implicit association - i.e. a user is in 1 or more groups, and each group has one or more roles, therefore by transitive association, a user has these roles (which in turn have permissions). The good thing about JSecurity is that, even if other people's definitions of these constructs differ, JSecurity doesn't require the above definitions to be true - that is up to the application. It only provides methods for hasPermission/checkPermission, hasRole/checkRole, and with this task being complete, hasGroup/checkGroup. The underlying Realm implementation actually interprets what those calls mean, so application-specific Realms still have the final say as to what those calls actually do. Upon adding hasGroup/checkGroup implementations, supporting framework needs to be implemented as well (e.g. tag libs)	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-280	SHIRO	Create a PasswordService to automate user password management techniques	While Shiro's hash support is great for both password hashing and general purpose hashing, when hashing passwords, some common techniques and strategies are often used to ensure a consistently strong password management experience. These techniques are currently implemented by the application developer however, which means that 1) they have to design a secure strategy and 2) implement it themselves using Shiro's Hash mechanisms. It'd be much nicer if Shiro provided, say, a PasswordService interface and implementations that implement what the community feels are best practices that can be used out-of-the-box so 1) and 2) don't need to be repeated on a per-app basis. This is probably related to SHIRO-213 as well.	New Feature	CLOSED	Major	Fixed	None	1.2.0	Cryptography & Hashing	None		0	Les Hazlewood	Les Hazlewood
SHIRO-281	SHIRO	Create DAO Exception Hierarchy and Exception Translator mechanism	Per this mailing list thread: http://shiro-developer.582600.n2.nabble.com/DAO-exception-hierarchy-td6057981.html Shiro does not currently distinguish between problems associated with the authentication/authorization workflow and orthogonal problems with the data resources themselves (connections, timeouts, invalid schema, etc). By providing a DataAccessException hierarchy, Shiro users (and other frameworks) can distinguish between end-user related problems and resource/configuration related problems. Furthermore, a Translation mechanism would allow conversion of API-specific exceptions into DataAccessExceptions (and vice versa).	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-282	SHIRO	Create ByteSource.Util inner class for creating ByteSource instances	It would be a little cleaner/nicer to have a nested ByteSource.Util inner class that constructs ByteSource instances instead of having to know the ByteSource implementation class to use. 90% of end-users could use this Util class instead of needing to know to look for the SimpleByteSource implementation.	New Feature	CLOSED	Major	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-283	SHIRO	Add ability to support basic auth and form authentication simultaneously	Currently, it's impossible to require either form authentication or basic authentication. I need to support both since we want the former for the users using a browser and the later for REST. At a config level, I don't really care which one is used, I just want to know they're authenticated.	Improvement	OPEN	Major	Unresolved	None	None	None	patch		0	Unassigned	Dan Diephouse
SHIRO-284	SHIRO	Logout Filter	Shiro should come bundled with the ability to perform a proper logout and redirect if a certain url pattern is hit.	New Feature	CLOSED	Major	Fixed	None	1.2.0	Authentication (log-in), Web	None		0	Les Hazlewood	Dan Diephouse
SHIRO-285	SHIRO	Integration with CAS	As I wanted to test shiro with CAS, I created a CAS filter, a CAS token and a CAS realm. I'm new to shiro so maybe I was mistaken on some points. I have a demo webapp with these files : index.jsp error.jsp protected/index.jsp The idea is to protect the /protected folder. I have this shiro.ini configuration : [main] authcas = org.apache.shiro.cas.CasFilter authcas.failureUrl = /demo2/error.jsp defaultRealm = com.jle.demo2.realm.DefaultRealm defaultRealm.name = demo2 defaultRealm.casServerUrlPrefix = http://localhost:11380/cas/ defaultRealm.casService = http://localhost:11380/demo2/shiro-cas roles.loginUrl = http://localhost:11380/cas/login?service=http://localhost:11380/demo2/shiro-cas [urls] /protected/** = roles[ROLE_USER] /shiro-cas = authcas /** = anon The protection on /protected/** implies to have the role ROLE_USER, if it is not the case, the user is redirected to the CAS server according to the property loginUrl of roles : http://localhost:11380/cas/login?service=http://localhost:11380/demo2/shiro-cas. After authentication on CAS server, the user is redirected (CAS works like this) to the service url : http://localhost:11380/demo2/shiro-cas. On this url, there is the authcas filter defined as the DefaultRealm which inherits from CasRealm : public class DefaultRealm extends CasRealm { @Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { Set<String> roles = new HashSet<String>(); roles.add("ROLE_USER"); return new SimpleAuthorizationInfo(roles); } } The DefaultRealm always grants the authenticated user the ROLE_USER role to access to the /protected folder. The CasFilter is configured on a specific url corresponding to the CAS url service : http://localhost:11380/demo2/shiro-cas, it gets the service parameter in url and create a CasToken with it. The CasRealm uses the CasToken to authenticate the user, it gets the service ticket, uses the Cas20ServiceTicketValidator (from CAS client) to call the CAS server and validates the ticket granted by CAS. If the ticket is validated, the user is authenticated and redirected to the original protected url (/protected/index.jsp). If the validation fails, the user is redirected to the CAS error page (error.jsp = authcas.failureUrl). To add CasFilter, CasToken and CasRealm to the trunk, I created a CAS module inside support. CasRealm : I didn't find how to set the remember me to the subject : I know if the user is in rememberme mode from CAS depending on a specific attribute from the Assertion object but I didn't know how to pass this information to the subject (there is a TODO). During the CAS service ticket validation, I get the object Assertion and all the attributes of the user populated by CAS are in the "attributes" property : I don't know what to do with these attributes. During the CAS service ticket validation, I choose not to throw an AuthenticationException, but returns null instead : is it the good way to do ? CasFilter : I'm not sure I respect the spirit of shiro because my filter authcas is always the last one. I add on the onLoginFailure a test, if the user is already authenticated, it doesn't failed but redirects to default success url. I didn't know how to add my authcas filter as a default filter without configuring it in the shiro.ini file. I have no test yet. I join the SVN patch. Hope it works well for you. Don't hesitate to come back to me.	New Feature	CLOSED	Major	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Jérôme Leleu
SHIRO-286	SHIRO	Create SubjectListener interface	Shiro's API is Subject-centric. It would make sense to have a SubjectListener interface that enabled end-users to react to various Subject events (subject logged in, logged out, session started, stopped, etc).	New Feature	OPEN	Major	Unresolved	None	None	Subject	None		0	Unassigned	Les Hazlewood
SHIRO-287	SHIRO	Enable web-configured SecurityManager to be statically accessible for non-request threads	For any work done on threads that are not triggered by a request thread, the SecurityManager should be accessible to these threads so the Subject.Builder can be used properly. This can be accomplished by setting the configured SecurityManager as a static member variable in SecurityUtils (via SecurityUtils.setSubjectManager). While static memory is not ideal, it is probably good enough for 90% of web applications, and can be a viable solution.	New Feature	CLOSED	Major	Fixed	None	1.2.0	None	SecurityManager Shir		0	Les Hazlewood	Les Hazlewood
SHIRO-288	SHIRO	Ini file loading from classpath	I have web application that uses Shiro version 1.2.0-SNAPSHOT with Shiro.ini file on classpath. The application stopped to load ini file and returns an error: There is no servlet context resource corresponding to configPath '/classpath:Shiro.ini' If the resource is located elsewhere (not immediately resolveable in the servlet context), specify an appropriate classpath:, url:, or file: resource prefix accordingly. Extract of my Web.xml: <filter> <filter-name>ShiroFilter</filter-name> <filter-class>org.apache.shiro.web.servlet.IniShiroFilter</filter-class> <init-param> <param-name>configPath</param-name> <param-value>classpath:Shiro.ini</param-value> </init-param> </filter>	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	Web	None		0	Les Hazlewood	Maria Jurcovicova
SHIRO-289	SHIRO	Support default AssymetricCipherService	Currently there is no out-of-the-box implementation for assyemtric crypto (e.g. RSA). This has been low priority for the Shiro dev team since Shiro itself doesn't use it (only symmetric ciphers). This should be implemented to make life easier for end users that require assymetric cipher.	New Feature	OPEN	Major	Unresolved	None	2.0.0	Cryptography & Hashing	patch patch-with-tes		0	Unassigned	Les Hazlewood
SHIRO-29	SHIRO	Captcha support	Determine if it would be valuable support any of captcha implentations via a thin wrapper API, much like we currently support multiple caching implementations. I'm not sure what this entails, but captcha is a widely used security feature, so it is worth contemplating what it would mean to support it from a framework perspective...	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Alan Cabrera
SHIRO-290	SHIRO	Create a BCrypt Hash implementation	Enable BCrypt hashing for those that wish to use it. The following code can probably be modified and included (it is a BSD license): http://www.mindrot.org/projects/jBCrypt/	New Feature	REOPENED	Major	Unresolved	None	2.0.0	Cryptography & Hashing	patch		0	Les Hazlewood	Les Hazlewood
SHIRO-291	SHIRO	Provide ServletContextListener for initializing Shiro SecurityManager	Currently in a webapp, the Shiro SecurityManager is initialized in the ShiroFilter. This makes it difficult to share, and other context listeners don't have access to the SecurityManager.	New Feature	CLOSED	Major	Duplicate	None	1.2.0	Web	None		0	Les Hazlewood	Jared Bunting
SHIRO-292	SHIRO	Add XACML PDP interface	The request is to add the XACML PDP interface to Shiro. This would be another way to get an authorization decision result.	Wish	OPEN	Major	Unresolved	None	None	Authorization (access control)	features		0	Unassigned	Michael Fiedler
SHIRO-293	SHIRO	Initialize Shiro using a <listener> in web.xml	For a webapp, Shiro is initialized during web.xml's <filter> initialization. Before this, the <listeners> are initialized and that is the recommended place for app initialization because, for one thing, they can be gracefully aborted. It would be nice if Shiro would support initialization in a listener's contextInitialized() method. Perhaps a new class like ShiroServletContextListener could be added. Please see the following discussion: http://shiro-user.582556.n2.nabble.com/Webapp-initialization-happens-before-Shiro-initialization-td6345903.html	New Feature	CLOSED	Major	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Dan Finkelstein
SHIRO-294	SHIRO	Add support for Gradle	Add support to the project to be built via Gradle as an alternative to Maven. This is not to replace current Maven support, but rather to provide more build options to the project.	New Feature	CLOSED	Trivial	Won't Fix	None	None	None	None		0	Unassigned	Allan Ditzel
SHIRO-295	SHIRO	Maven Snapshot does not work anymore	Following dependency does not work anymore: <dependency> <groupId>org.apache.shiro</groupId> <artifactId>shiro-all</artifactId> <version>1.2.0-SNAPSHOT</version> <type>jar</type> <scope>compile</scope> </dependency>	Bug	CLOSED	Major	Not A Problem	1.2.0	None	Configuration	None		0	Unassigned	Maria Jurcovicova
SHIRO-296	SHIRO	Typo fixes	The patch that I'm attaching is against current HEAD / master (as mirrored to http://github.com/apache/shiro/).	Improvement	RESOLVED	Major	Fixed	None	1.4.0-RC2	Documentation	patch		0	Brian Demers	Bruce Mitchener
SHIRO-297	SHIRO	Setting sessionMode to native kills any SessionManager already configured	I just got done working through an issue trying to get single sign-on working with EhCacheManager, following some examples I found on the mailing list (except I was using Spring configuration). It wasn't working for me at first with this: <bean id="securityManager"    class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">       <property name="realm" ref="factorlabRealm" />       <property name="subjectFactory" ref="factorlabSubjectFactory" />       <property name="cacheManager" ref="ssoCacheManager" />       <property name="sessionManager" ref="sessionManager" />       <property name="sessionMode" value="native" />  </bean>  After lots of debugging, I got it to work with this: <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"> <property name="sessionMode" value="native" /> <property name="realm" ref="factorlabRealm" /> <property name="subjectFactory" ref="factorlabSubjectFactory" /> <property name="cacheManager" ref="ssoCacheManager" /> <property name="sessionManager" ref="sessionManager" /> </bean> The difference is moving the sessionMode to earlier in the property list, because the setter for sessionMode was replacing my configured sessionManager with a new DefaultWebSessionManager. This seems pretty fragile.	Bug	CLOSED	Major	Won't Fix	1.0.0, 1.1.0	1.2.0	None	None		0	Unassigned	Jason Erickson
SHIRO-298	SHIRO	LogoutFilter should catch the InvalidSessionException	Should catch InvalidSessionException for session timeout problem.	Bug	CLOSED	Minor	Fixed	1.2.0	1.2.0	Web	None		0	Unassigned	calvin xiu
SHIRO-299	SHIRO	Update root pom to ignore maven life cycles in eclipse (m2e 0.13)	There are a few errors when importing shiro into eclipse with m2e 0.13 Starting with this version of m2e specific maven life cycles are mapped as part of the build process. There are also a handfull of missing ignores when importing the full tree into eclipse.	Task	CLOSED	Major	Fixed	None	None	None	None	eclipse	0	Unassigned	Brian Demers
SHIRO-3	SHIRO	SimpleAccountRealm fails with NPE	Testing a simple example based on the Quickstart.java, using DefaultSecurityManager and PropertiesRealm with default user properties would successfully login users listed in the properties file, but fails with NPE on invalid usernames. I get NPE from SimpleAccountRealm.doGetAuthenticationInfo(AuthenticationToken token) method at this location: if (account.isLocked()) { throw new LockedAccountException("Account [" + account + "] is locked."); } The variable account is null - as so it should be since it is not in the authorizationCache. I was testing for the behaviour when unknown users are trying to login. Seemingly a null test and return null would fix this issue, as the caller AuthenticationRealm.getAuthenticationInfo(AuthenticationToken token) handles null return values.	Bug	CLOSED	Major	Fixed	None	None	None	None	java 1.6	0	Unassigned	Csaba Nemeth
SHIRO-30	SHIRO	Subject acquisition based on method argument	Especially for enterprise applications who federate Subjects and Sessions across applications, it would be nice to acquire/create a Subject instance based on some set of initialization data method argument, most likely a sessionId token that is passed from one application to another. For example: SecurityUtils.getSubject( Serializable data ); SecurityManager.getSubject( Serializable data ); this would most likely be a sessionId for federated sessions (SSO) across applications, e.g. SecurityUtils.getSubject( sessionId ); SecurityManager.getSubject( sessionId );	New Feature	CLOSED	Major	Fixed	None	1.0.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-300	SHIRO	WildcardPermission: change visibility of field 'parts' to protected	Change visibility of field 'parts' to protected, so Permissions extends WildcardPermission can directly fill parts instead of creating a String and calling setParts (which splits this string again into parts...)	Improvement	RESOLVED	Major	Fixed	1.1.0	1.3.0	None	None		0	Unassigned	manthos
SHIRO-301	SHIRO	Call permissionResolver directly in AuthorizingRealm	see attached patch	Improvement	RESOLVED	Minor	Fixed	1.2.0	1.4.0-RC2	Realms	patch		0	Brian Demers	manthos
SHIRO-302	SHIRO	DefaultHasher does not generate random salt	Extract from DefaultHasher javadoc: When a salt is not specified in a request, this implementation generates secure random salts via its {@link #setRandomNumberGenerator(org.apache.shiro.crypto.RandomNumberGenerator) randomNumberGenerator} property. Random salt is generated, but never assigned (line 155): if (publicSaltBytes == null) { getRandomNumberGenerator().nextBytes().getBytes(); }	Bug	CLOSED	Major	Fixed	None	1.2.0	Cryptography & Hashing	None		0	Kalle Korhonen	Maria Jurcovicova
SHIRO-303	SHIRO	DefaultWebSecurityManager isHttpSessionMode() may be error	/** @since 1.0 */ public boolean isHttpSessionMode() { return this.sessionMode == null || this.sessionMode.equals(HTTP_SESSION_MODE); }  may be error,and i think this method should as bellow: public boolean isHttpSessionMode() { String sm = getSessionMode(); return (sm!= null && sm.equals(HTTP_SESSION_MODE)); }	Bug	CLOSED	Major	Not A Problem	1.1.0	1.2.0	Web	build		0	Unassigned	YangL
SHIRO-304	SHIRO	Add support for object signing and sealing	Request : Add API to allow signing and sealing an object. This can be supported by the existing Java API ( javax.crypto.SealedObject and java.security.SignedObject ). Reasoning : 1. Shiro users will be able to use encryption and signing of objects using uniform API with Shiro framework 2. Enforce/Suggest the correct way to sign and seal an object : Sign, then seal rather than allow unnecessary bad practice of sealing first, then signing to happen. Real world scenario : Sensitive information (E.g Credit Card details) being sent over the wire or being stored in a database as a serialised object. In order to store the object in a DB or send it outside a secure environment, the object should be signed, encrypted, serialised, sent/stored . Then, read/receive, deserialize, decrypt, checked signature. Initial ideas : The class CipherService could provide methods for signing, checking signature, sealing and unsealing. The CipherService class is stateless and I will omit the encryption keys parameters at the moment as this require some careful thinking on what kind of keys one can use, keep the verbosity at minimum and uniform API. SignedObject CipherService.sign(Object o); SealedObject CipherService.seal(Object o); SealedObject CipherService.signAndSeal(Object o); Object CipherService.unseal(SealedObject so); <-- this could automatically check for signature if the unsealed object is of type SignedObject boolean CipherService.checkSignature(SignedObject so); Something to consider is whether signing and sealing should be part of the same class/service. They are different actions with different semantics and the action/semantic of signing something doesn't really make sense to sit in a class/service that encrypts/decrypts. Any thoughts ?	Wish	OPEN	Minor	Unresolved	None	None	Specification API	security		0	Unassigned	Razvan Dragut
SHIRO-305	SHIRO	Connect to a SSL secured LDAP	Configuration for connecting the Shiro framework with a SSL secured LDAP (LDAPv2 & LDAPv3 on SSLv3 port) fails. Parameters for LDAP in the shiro.ini file: [main] ... ldapRealm.contextFactory.environment[java.naming.security.protocol] = ssl ldapRealm.contextFactory.environment[com.sun.jndi.ldap.connect.pool.protocol] = plain ssl ldapRealm.contextFactory.environment[com.sun.jndi.ldap.connect.pool] = true These entries lead to following error message: org.apache.shiro.config.ConfigurationException: Map property value [ssl] contained key-value pair token [ssl] that does not properly split to a single key and pair. This must be the case for all map entries.	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	Realms	None	windows 7, tomcat	0	Les Hazlewood	Peter Diefenthäler
SHIRO-306	SHIRO	EnvironmentLoaderListener crashes if custom filters are configured.	Custom filters are initialized in init method of IniShiroFilter. EnvironmentLoaderListener runs before filters and is unable to access custom filters. How to reproduce it: define and use custom filter in Shiro.ini of samples-web application: [main] shiro.loginUrl = /login.jsp create custom filter filter=org.apache.shiro.web.filter.authc.FormAuthenticationFilter ... [urls] Use custom filter defined above /login.jsp = filter /logout = logout /account/** = filter /remoting/** = filter, roles[b2bClient], perms["remote:invoke:lan,wan"] /** = filter Exception thrown on application start-up: java.lang.IllegalArgumentException: There is no filter with name 'filter' to apply to chain [/login.jsp] in the pool of available Filters. Ensure a filter with that name/path has first been registered with the addFilter method(s). at org.apache.shiro.web.filter.mgt.DefaultFilterChainManager.addToChain(DefaultFilterChainManager.java:185) at org.apache.shiro.web.filter.mgt.DefaultFilterChainManager.createChain(DefaultFilterChainManager.java:158) at org.apache.shiro.web.config.IniFilterChainResolverFactory.createChains(IniFilterChainResolverFactory.java:186) at org.apache.shiro.web.config.IniFilterChainResolverFactory.buildChains(IniFilterChainResolverFactory.java:127) at org.apache.shiro.web.config.IniFilterChainResolverFactory.createInstance(IniFilterChainResolverFactory.java:80) at org.apache.shiro.web.config.IniFilterChainResolverFactory.createInstance(IniFilterChainResolverFactory.java:1) at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123) at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47) at org.apache.shiro.web.env.IniWebEnvironment.createFilterChainResolver(IniWebEnvironment.java:187) at org.apache.shiro.web.env.IniWebEnvironment.configure(IniWebEnvironment.java:102) at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:92) at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45) at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40) at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:226) at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:138) at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58) at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:548) at org.mortbay.jetty.servlet.Context.startContext(Context.java:136) at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250) at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517) at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467) at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50) at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130) at org.mortbay.jetty.Server.doStart(Server.java:224) at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50) at org.apache.shiro.test.AbstractContainerTest.startContainer(AbstractContainerTest.java:47) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:236) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)	Bug	CLOSED	Major	Fixed	None	1.2.0	Web	None	jetty	0	Les Hazlewood	Maria Jurcovicova
SHIRO-307	SHIRO	DomainPermission does not fully support domain, actions and targets properties	Per the class javadoc, DomainPermission is designed to be a base class for Permission implementations that persist permission parts as separate properties. It defines private fields for domain, actions and targets and exposes getters/setters for these, but the setParts and constructor methods that set Permission state do not call the property setters and the property setters don't call setParts. Property synchronization needs to be added to this class.	Bug	OPEN	Major	Unresolved	1.0.0, 1.1.0	None	Authorization (access control)	patch		0	Les Hazlewood	Phil Steitz
SHIRO-308	SHIRO	WildcardPermission constructor needs to throw IllegalArgumentException for "" part	WildcardPermission currently allows "" part in a permission. This has no real use and can lead to user /programmer errors. For example: If instead of File:*:myfile, I accidently create File::myfile all permission checks will fail as File::myfile does not imply say File:read:myfile. Since File::myfile has no meaning, this permission is not securing anything. File::myfile is broken into the parts "File","","myfile". Since "" part is unlikely to have any useful meaning, it might be better to throw an IllegalArugmentException if a permission has a "" part and prevent user/programmer errors.	Improvement	OPEN	Major	Unresolved	1.1.0	None	Authorization (access control)	None		0	Unassigned	Manoj Khangaonkar
SHIRO-309	SHIRO	Unauthorized URL for different entries in filter chain	It would be great to have different unauthorizedUrl entries per chain in the ShiroFilterFactoryBean: <property name="filterChainDefinitions"> <value> /admin/** = myFilter, roles[admin], /service/notadmin.jsp /work/** = myFilter, roles[verified], /service/notverified.jsp /owners/** = myFilter, roles[owner], /service/notowner.jsp /account/** = myFilter </value> </property>	New Feature	OPEN	Major	Unresolved	1.1.0, 1.2.0	None	Authorization (access control) , (1)	None		0	Unassigned	Alan Cabrera
SHIRO-31	SHIRO	Add support for easy protection against CSRF attacks	I have raised a similar issue for the Grails plugin here: http://jira.codehaus.org/browse/GRAILSPLUGINS-806 I'm not sure what form the implementation should take, but it's worth taking a look at the information provided by OWASP: http://www.owasp.org/index.php/Top_10_2007-A5 I'm considering adding a <jsec:form> tag that automatically adds a generated token that can be checked by the JSecurity filter on form submission.	New Feature	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Peter Ledbrook
SHIRO-310	SHIRO	Improve Quartz Session Validation Scheduler support	The current QuartzSessionValidationScheduler doesn't provide any benefit beyond what is already provided by the ExecutorServiceSessionValidationScheduler. It should be easier to configure the Quartz-based SessionValidationScheduler to allow custom Jobs and time scheduling to control exactly when jobs may execute rather than at only a periodic interval (which the ExecutorService-based implementation already does).	Improvement	OPEN	Major	Unresolved	1.0.0, 1.1.0, 1.2.0	None	None	None		0	Unassigned	Les Hazlewood
SHIRO-311	SHIRO	allow the use of shiro as Autorization only framework	currently shiro uses login as the only entry point to the application which uses authentication and authorization procedures, defined in the chosen subclasses realm. however in many organization's intranet , a domain authentication is already employed making the authentication process in shiro redundant. in order to keep consistency with the framework, a new type of Token should be created called AuthenticatedToken. the difference is shiro would be able to create such a token in it's filter by inspecting getRemoteUer of the HTTP request, which according to the spec is !=null only when the user is authenticated.	New Feature	OPEN	Major	Unresolved	1.1.0	None	Authentication (log-in), (3)	None	java 1.6	0	Unassigned	Elhanan Maayan
SHIRO-312	SHIRO	DefaultSecurityManager.setSessionManager can get out of sync with DefaultSecurityManager.setSessionMode	So, I've run into a bit of a pickle with DefaultWebSecurityManager and native vs http sessions. The DefaultWebSecurityManager exposes two methods, ostensibly for the purposes of determining how sessions are managed: setSessionManager(SessionManager) and setSessionMode(String) However, it would appear that if I call: setSessionManager(new MyCustomSessionManager()) and then setSessionMode("native") the SessionManager is overridden. This is a bit of a gotcha, but can be easily avoided by not calling setSessionMode. (calling them in the reverse order seems contrary to the nature of setters) The problem with not calling setSessionMode is that it appears to actually matter - if I leave it to it's default (http), but set a DefaultWebSessionManager, then things break horribly (apparently due to the use of isHttpSessionMode by AbstractShiroFilter for redirect rewriting). Sessions get forgotten, etc. This also seems contrary to the nature of setters.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.0	Web	None		0	Les Hazlewood	Jared Bunting
SHIRO-313	SHIRO	Default SessionManager in web environment for Guice support differs from the otherwise.	Using Ini setup, or simple construction, the default session manager for a web environment uses servlet container sessions. It appears that I overlooked this when adding the Guice integration and made the default for a guice web environment native sessions. Nothing inherently wrong with this other than the glaring inconsistency that I would expect to trip folks up. I am attaching a patch for this to this ticket.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.0	Session Management	None		0	Jared Bunting	Jared Bunting
SHIRO-314	SHIRO	Authorization ANTLR Grammar or Expression Language	Create a single annotation that would translate the expression into the relevant hasRole/isPermitted calls. Details are on wiki https://cwiki.apache.org/confluence/display/SHIRO/Version+2+Brainstorming#Version2Brainstorming-AuthorizationANTLRGrammar .	New Feature	OPEN	Major	Unresolved	None	None	Authorization (access control)	patch patch-with-tes		0	Les Hazlewood	Maria Jurcovicova
SHIRO-315	SHIRO	SubjectAwareExecutorService in shiro-core does not compile	The method invokeAny in SubjectAwareExecutorService has wrong type. SubjectAwareExecutorService implements ExecutorService interface. ExecutorService: <T> T invokeAny(Collection<Callable<T>> tasks) SubjectAwareExecutorService: public <T> T invokeAny(Collection<? extends Callable<T>> tasks) throws InterruptedException, ExecutionException { Reason: It is not possible to override Collection<Callable<T>> tasks with Collection<? extends Callable<T>> tasks. Such override would not be typesafe.	Bug	CLOSED	Major	Not A Problem	1.2.0	1.2.0	Authentication (log-in)	None		0	Kalle Korhonen	Maria Jurcovicova
SHIRO-316	SHIRO	Annotations in samples-aspectj Project Does not Work	@RequiresPermissions annotations in samples-aspectj project are ignored. It has two reasons: 1.) shiro-aspectj: aspectj-maven-plugin in complains about aspectjrt version. Maven downloaded 1.6.9 while plugin requires 1.6.7. 2.) samples-aspectj: aspectj-maven-plugin has only test-compile goal. Compile goal is missing.	Bug	RESOLVED	Major	Fixed	1.2.0	1.2.2	Sample Apps	None		0	Unassigned	Maria Jurcovicova
SHIRO-317	SHIRO	Read session from cache once per request	As per our discussion on the mailing thread, I've wired up my sessions to be stored in memcached (membase in the longer term). On a per request basis I'm seeing approximately 5 hits on my cache to retrieve the session. I would expect to see only one hit per threaded request, with the session stored as a thread local. For distributed caches this saves on network calls and for local caches it will save on potential lock contention.	New Feature	IN PROGRESS	Minor	Unresolved	1.1.0, 1.2.0, 1.2.1	None	None	None		0	Les Hazlewood	Luke Biddell
SHIRO-318	SHIRO	Guice integration causes a warning from guice-servlet	We see this: Aug 5, 2011 12:28:49 PM com.google.inject.servlet.InternalServletModule$BackwardsCompatibleServletContextProvider get WARNING: You are attempting to use a deprecated API (specifically, attempting to @Inject ServletContext inside an eagerly created singleton. While we allow this for backwards compatibility, be warned that this MAY have unexpected behavior if you have more than one injector (with ServletModule) running in the same JVM. Please consult the Guice documentation at http://code.google.com/p/google-guice/wiki/Servlets for more information.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.0	None	None		0	Jared Bunting	Jared Bunting
SHIRO-319	SHIRO	SslFilter should check for request.isSecure() as well	In addition to checking the configured port, a confidentiality guarantee should be checked as well. Check for request.isSecure() as well.	Improvement	CLOSED	Major	Fixed	1.0.0, 1.1.0	1.2.0	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-32	SHIRO	Document how to extend the property types that the INI builder can build.	Document how to extend the property types that the INI builder can build.	Task	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Alan Cabrera
SHIRO-320	SHIRO	Add an example for using Guice integration.	We need an example application that showcases the use of the shiro-guice integration module.	Task	CLOSED	Major	Fixed	1.2.0	1.3.0	None	patch		0	Unassigned	Jared Bunting
SHIRO-321	SHIRO	AuthenticatingFilter - consolidate auto-authentication logic	The FormAuthenticationFilter and the BasicAuthenticationFilter perform repetitive logic in the onAccessDenied implementation to automate an authentication during an authentication request. For example: http://shiro.apache.org/static/1.1.0/xref/org/apache/shiro/web/filter/authc/FormAuthenticationFilter.html#148 This should be abstracted and represented in the parent AuthenticatingFilter abstract class to 1) reduce code in the children classes and 2) make this accessible for custom AuthenticatingFilter subclasses.	Improvement	OPEN	Major	Unresolved	1.1.0	2.0.0	None	filters		0	Unassigned	Les Hazlewood
SHIRO-322	SHIRO	Overriding permissionResolver has no effect on implicit iniRealm	Currently, the implicit iniRealm processes its role and permissions strings to early. Overriding the permissionResolver and or rolePermissionResolver has no effect. The realm is constructed by calling new IniRealm(ini) (IniSecurityManagerFactory.java:254) This constructor then calls processDefinition(ini) right away (IniRealm.java:60) This fills in the roles and users maps in SimpleAccountRealm, but it will use the default permissionResolver to do so because getPermissionResolver() (TextConfigurationRealm.java:144) will return the default instance. IniRealm should probably not do any initialisation code (processDefinition) before init is called. It overrides onInit() but tests whether the roles and users collections are empty before doing any processing (and it will only initialise if it was constructed with a resourcePath)...	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	None	None		0	Les Hazlewood	Philippe Laflamme
SHIRO-323	SHIRO	DelegatingSubject class cannot be serialized.	I am attempting to send a instance of DelegatingSubject over a JMS topic via serialization, however when I send the object through JMS I get this Exception java.lang.RuntimeException: org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession at org.apache.activemq.command.ActiveMQObjectMessage.storeContent(ActiveMQObjectMessage.java:111) ~[activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.command.ActiveMQObjectMessage.setObject(ActiveMQObjectMessage.java:162) ~[activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at com.xmlnamespace.panel.server.core.communication.event.EventManager.doSendMessage(EventManager.java:233) ~[com.xmlnamespace.panel.server.core/:na] at com.xmlnamespace.panel.server.core.communication.event.EventManager.sendMessage(EventManager.java:208) ~[com.xmlnamespace.panel.server.core/:na] at com.xmlnamespace.panel.server.core.communication.mtl.ModelDispatcher.add(ModelDispatcher.java:122) ~[com.xmlnamespace.panel.server.core/:na] at com.xmlnamespace.panel.server.core.communication.mtl.ModelDispatcher.collectionChange(ModelDispatcher.java:181) ~[com.xmlnamespace.panel.server.core/:na] at com.xmlnamespace.panel.core.shared.communication.mtl.api.CollectionChangeSupport.doFireCollectionChange(CollectionChangeSupport.java:182) ~[shared-objects.jar:na] at com.xmlnamespace.panel.core.shared.communication.mtl.api.CollectionChangeSupport.fireCollectionChange(CollectionChangeSupport.java:47) ~[shared-objects.jar:na] at com.xmlnamespace.panel.core.shared.user.model.internal.UserModelImpl.addUserLogin(UserModelImpl.java:96) ~[shared-objects.jar:na] at com.xmlnamespace.panel.server.core.login.LoginManager.authenticateConnection(LoginManager.java:1013) ~[com.xmlnamespace.panel.server.core/:na] at com.xmlnamespace.panel.server.core.communication.broker.BrokerAuthenticationFilter.addConnection(BrokerAuthenticationFilter.java:69) ~[com.xmlnamespace.panel.server.core/:na] at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:705) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:83) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:217) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:199) [activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] at java.lang.Thread.run(Thread.java:662) [na:1.6.0_26] Caused by: java.io.NotSerializableException: org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1164) ~[na:1.6.0_26] at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) ~[na:1.6.0_26] at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483) ~[na:1.6.0_26] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) ~[na:1.6.0_26] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_26] at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) ~[na:1.6.0_26] at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483) ~[na:1.6.0_26] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) ~[na:1.6.0_26] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_26] at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) ~[na:1.6.0_26] at org.apache.activemq.command.ActiveMQObjectMessage.storeContent(ActiveMQObjectMessage.java:105) ~[activemq-all-5.6-SNAPSHOT.jar:5.6-SNAPSHOT] ... 24 common frames omitted I assume that DelegatingSubject is meant to be serialized since it does implement serializable. I noticed that the class inner class StoppingAwareProxiedSession is the culprit. Would the issue be resolved by simply making the Session interface, ProxiedSession class, and StoppingAwareProxiedSession serializable?	Bug	CLOSED	Major	Fixed	1.1.0	1.2.0	Subject	serialization	linux	0	Les Hazlewood	Michael Yara
SHIRO-324	SHIRO	HashedCredentialsMatcher getCredentials() bug	// isStoredCredentialsHexEncoded() always returns true, no matter if I store a hex or a base64 password or credential. Hex is Base16. Authentication fails if I store Base64 and don't move it to Hex before here with an IllegalArgumentException because Hex.decode(...) doesn't recognize but the 0..9 and a..f I think //account.credentials were a char[] or String, so //we need to do text decoding first: if (isStoredCredentialsHexEncoded()) { storedBytes = Hex.decode(storedBytes); } else { storedBytes = Base64.decode(storedBytes); } ... from my ini: password hashing specification sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher sha256Matcher.hashAlgorithmName=SHA-256	Bug	CLOSED	Major	Duplicate	1.1.0	None	Authentication (log-in), (1)	None		0	Unassigned	an wolf
SHIRO-325	SHIRO	SimpleSession serializes fields twice	org.apache.shiro.session.mgt.SimpleSession serializes fields twice - once via the 'writeObject' implementations' call to out.writeDefaultObject(), and again via the custom bitmask-based serialization that follows it. The internal fields should be marked as transient to prevent this. out.writeDefaultObject should still be called for JVM security reasons, but SimpleSession's custom field-based serialization is more efficient so it should be retained. The solution is to mark all custom-serialized fields as transient. Discussion thread here: http://mail-archives.apache.org/mod_mbox/shiro-user/201109.mbox/%3C4E81BCBD.8060909@metaphysis.net%3E	Bug	CLOSED	Major	Fixed	1.0.0, 1.1.0	1.2.0	Session Management	None		0	Les Hazlewood	Les Hazlewood
SHIRO-326	SHIRO	HashedCredentialsMatcher > getCredentials() bug	isStoredCredentialsHexEncoded() always returns true, no matter if I store a hex or a base64 password or credential. Hex is Base16. Authentication fails if I store Base64 with an IllegalArgumentException because Hex.decode(...) doesn't recognize but the 0..9 and a..f alphabet Code quote: //account.credentials were a char[] or String, so //we need to do text decoding first: if (isStoredCredentialsHexEncoded()) { storedBytes = Hex.decode(storedBytes); } else { storedBytes = Base64.decode(storedBytes); } ... from my ini: password hashing specification sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher sha256Matcher.hashAlgorithmName=SHA-256	Bug	CLOSED	Major	Duplicate	1.1.0	None	Authorization (access control) , (1)	None		0	Unassigned	an wolf
SHIRO-327	SHIRO	HashedCredentialsMatcher getCredentials() bug	isStoredCredentialsHexEncoded() always returns true, no matter if I store a hex or a base64 password or credential. Hex is Base16. Authentication fails if I store Base64 with an IllegalArgumentException because Hex.decode(...) doesn't recognize but the 0..9 and a..f alphabet Code quote: //account.credentials were a char[] or String, so //we need to do text decoding first: if (isStoredCredentialsHexEncoded()) { storedBytes = Hex.decode(storedBytes); } else { storedBytes = Base64.decode(storedBytes); } ... from my ini: password hashing specification sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher sha256Matcher.hashAlgorithmName=SHA-256	Bug	CLOSED	Major	Not A Problem	1.1.0	1.1.0	Authorization (access control) , (1)	None		0	Unassigned	Tudor Raneti
SHIRO-328	SHIRO	Default Block Cipher OperationMode should be CBC	Most block cipher encryption these days (that uses Initialization Vectors) use a CBC mode (e.g. SSL and many others). Shiro's default is currently CFB and should be changed to match the common default.	Task	CLOSED	Major	Fixed	None	1.2.0	Cryptography & Hashing	None		0	Les Hazlewood	Les Hazlewood
SHIRO-329	SHIRO	Standalone session timeout issue	Hi, I have some questions regarding sessions and the API behaviour. If I execute the following code: Factory<org.apache.shiro.mgt.SecurityManager> factory = new IniSecurityManagerFactory("vkb.ini"); org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance(); SecurityUtils.setSecurityManager(securityManager); Subject user = SecurityUtils.getSubject(); UsernamePasswordToken token = new UsernamePasswordToken("user", "battle1"); user.login(token); Session session = user.getSession(); session.setTimeout(0); user.logout(); The logout method causes the following exception to occur: Exception in thread "main" org.apache.shiro.session.ExpiredSessionException: Session with id [7c3d80f2-ae4c-49b5-9a2d-a2c0f39cd904] has expired. Last access time: 28/09/11 09:35. Current time: 28/09/11 09:35. Session timeout is set to 0 seconds (0 minutes) at org.apache.shiro.session.mgt.SimpleSession.validate(SimpleSession.java:276) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doValidate(AbstractValidatingSessionManager.java:180) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:143) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.removeAttribute(AbstractNativeSessionManager.java:220) at org.apache.shiro.session.mgt.DelegatingSession.removeAttribute(DelegatingSession.java:159) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.subject.support.DelegatingSubject.clearRunAsIdentities(DelegatingSubject.java:424) at org.apache.shiro.subject.support.DelegatingSubject.logout(DelegatingSubject.java:322) at com.thalesgroup.battlelab.vkb.test.SecurityTest.main(SecurityTest.java:45) The only reason I'm calling setTimeout(0) is to simulate the session expiring due to a timeout that occurs in the system. Why would the logout fail just because the session has expired? How can I get around this issue? If I execute the following code: Factory<org.apache.shiro.mgt.SecurityManager> factory = new IniSecurityManagerFactory("vkb.ini"); org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance(); SecurityUtils.setSecurityManager(securityManager); Subject user = SecurityUtils.getSubject(); UsernamePasswordToken token = new UsernamePasswordToken("user", "battle1"); user.login(token); user.login(token); user.login(token); user.login(token); user.login(token); Session session = user.getSession(); session.setTimeout(0); user.login(token); The last login command throws an exception with the following stack trace: Exception in thread "main" org.apache.shiro.session.ExpiredSessionException: Session with id [96aa8e29-4a55-4c79-be48-8ed90f49da85] has expired. Last access time: 28/09/11 09:41. Current time: 28/09/11 09:41. Session timeout is set to 0 seconds (0 minutes) at org.apache.shiro.session.mgt.SimpleSession.validate(SimpleSession.java:276) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doValidate(AbstractValidatingSessionManager.java:180) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:143) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.removeAttribute(AbstractNativeSessionManager.java:220) at org.apache.shiro.session.mgt.DelegatingSession.removeAttribute(DelegatingSession.java:159) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135) at org.apache.shiro.subject.support.DelegatingSubject.clearRunAsIdentities(DelegatingSubject.java:424) at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:246) at com.thalesgroup.battlelab.vkb.test.SecurityTest.main(SecurityTest.java:49) Is this the same problem. Why can't I login after the a session has expired? How can I login after a session has expired? It is probably me misunderstanding the API but any help would be greatly appreciated. Best regards Matt Classic List star Reply More Close Sep 28, 2011; 6:20pm Les Hazlewood-2 Les Hazlewood-2 Hi Matt, I'd consider this a bug - please open a Jira issue. This probably hasn't been seen before because, for example in a web or other 'server' style app, Shiro will validate a session on an inbound request before allowing it to continue - this behavior wouldn't be seen further down the call stack. In a standalone environment, such as a test case or daemon program, this would cause a problem if the timeout is very low. Could you please open an issue? Thanks, – Les Hazlewood CTO, Katasoft | http://www.katasoft.com | 888.391.5282 twitter: @lhazlewood | http://twitter.com/lhazlewood katasoft blog: http://www.katasoft.com/blogs/lhazlewood personal blog: http://leshazlewood.com	Bug	RESOLVED	Major	Fixed	1.1.0	1.2.0	Session Management	None	windows xp, java 1.6	0	Unassigned	Matt Shaw
SHIRO-33	SHIRO	Features overview	Doing and updating continuously a sort of comparison chart between Acegi and JSecurity with features, usages, ... so that we can all see quickly the current limitations of both so that we can make a faster decision.	Task	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Alan Cabrera
SHIRO-330	SHIRO	Refactor Cookie / Simple Cookie & Add Encrypted Cookie	The current Cookie/SimpleCookie mechanism blends usage and creational concerns, i.e. the cookie both holds state and is a factory, acting as a template to create new cookie instances. These concerns should be separated. In addition, it would be nice to have an encrypted cookie mechanism. Attached there is a patch for an initial implementation of an encrypted cookie based on 1.2.0 code. It's been added to capture the intent behind the cookie and to quickly patch the code base with this functionality before refactoring in a future version.	New Feature	OPEN	Minor	Unresolved	1.2.0	None	Web	patch patch-with-tes		0	Unassigned	Allan Ditzel
SHIRO-331	SHIRO	The Spring ACL has a cool feature that allow you to evaluate any SpEL when doing Authorization check using annotation. This is a feature that allow doing the same with shiro.	On Spring ACL you can annotate a function with something like this: @PreAuthorize("hasAnyRole('ROLE_SUPER_USER','ROLE_ SYSTEM_ADMIN') and hasPermission(#id, 'com.xyz.db.domain.impl.XyzConfigImpl', 'read')") Note the evaluation of a method, the use of logic operators, the ability t use the parameters passed to the method. This is a neccessary feature for doing any ACL like control check from an annotation because otherwise you're obliged to do the check your self from inside the method body.	New Feature	OPEN	Major	Unresolved	1.1.0	None	Authorization (access control)	Authorization SpEl, 		0	Unassigned	DIALLO Mamadou BObo
SHIRO-332	SHIRO	Change access level of method 'isPermitted' in org.apache.shiro.realm.AuthorizingRealm (line 461) from private to protected	In org.apache.shiro.realm.AuthorizingRealm, line 461, the method private boolean isPermitted(Permission permission, AuthorizationInfo info) should have its access level set to protected. This method is the ideal method to override If a developer wishes to change how a realm that extends AuthorizingRealm interacts with the AuthorizationInfo when permissions are checked. This is because all of the 'isPermitted' method overloads delegate the actual permission checking to this method. As the class stands now, all of the isPermitted overloads have to be re-implemented as overrides to Authorizing realm in order for the developer to safely change this behavior.	Improvement	RESOLVED	Minor	Fixed	1.1.0	1.2.4	Authorization (access control)	api-change authoriza		0	Unassigned	clifford harms
SHIRO-333	SHIRO	Error in DOAP	The DOAP contains the following entries: <category rdf:resource="http://projects.apache.org/category/library" /> <category rdf:resource="http://www.apache.org/category/web-framework"/> Only the first one has the correct URL; please can you correct the other one to the following: <category rdf:resource="http://projects.apache.org/category/web-framework"/> Unfortunately there was an error on the page that described the categories (now fixed in SVN). However the DOAP creation form was correct.	Bug	CLOSED	Major	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Sebb
SHIRO-334	SHIRO	DefaultSerializer does not load classes from the ContextClassLoader, causing RememberMe to not work	RememberMe functionality does not work because Shiro is in a different class loader than the RememberMe serializable class, The only thing that needs to change is the resolveClass() function, and it should use Thread.currentThread().getContextClassLoader().loadClass() to load the class, as that works in all cases and all class loader configurations. I fixed this in my code by overriding DefaultSerializer, but this should be the default behavior: private static class Serialize<T> extends DefaultSerializer<T> { @Override public T deserialize(byte[] serialized) throws SerializationException { if (serialized == null) { String msg = "argument cannot be null."; throw new IllegalArgumentException(msg); } ByteArrayInputStream bais = new ByteArrayInputStream(serialized); BufferedInputStream bis = new BufferedInputStream(bais); try { ObjectInputStream ois = new ObjectInputStream(bis) { @Override public Class resolveClass(ObjectStreamClass desc) throws ClassNotFoundException { // ************ THIS IS THE LINE THAT WAS CHANGED ******************** return Thread.currentThread().getContextClassLoader().loadClass(desc.getName()); } }; @SuppressWarnings( {"unchecked"} ) T deserialized = (T) ois.readObject(); ois.close(); return deserialized; } catch (Exception e) { String msg = "Unable to deserialze argument byte array."; throw new SerializationException(msg, e); } } }	Bug	CLOSED	Major	Fixed	1.1.0, (3)	1.2.0	Authentication (log-in)	None	glassfish	0	Les Hazlewood	Lenny Primak
SHIRO-335	SHIRO	Build with Maven 3 generates a multitude of warnings.	We see multiple warnings like this: (one for each module) [WARNING] Some problems were encountered while building the effective model for org.apache.shiro:shiro-core:bundle:1.2.0-SNAPSHOT [WARNING] The expression ${scm.url} is deprecated. Please use ${project.scm.url} instead. And then we also see: [WARNING] Some problems were encountered while building the effective model for org.apache.shiro:shiro-features:pom:1.2.0-SNAPSHOT [WARNING] 'build.plugins.plugin.version' for org.codehaus.mojo:build-helper-maven-plugin is missing. @ line 74, column 21 and [WARNING] Some problems were encountered while building the effective model for org.apache.shiro.samples:samples-spring:war:1.2.0-SNAPSHOT [WARNING] 'build.plugins.plugin.version' for org.codehaus.mojo:dependency-maven-plugin is missing. @ line 72, column 21 These are simple things that should be fixable with some minor pom updates and shouldn't break compatibility with Maven 2.	Bug	CLOSED	Minor	Fixed	1.1.0, 1.2.0	1.2.0	None	None		0	Jared Bunting	Jared Bunting
SHIRO-336	SHIRO	Documentation related to EHCache setup needs to be clearer	See thread: http://shiro-user.582556.n2.nabble.com/Issue-with-Shiro-authorization-getting-cleared-td7140992.html It turns out that this was a cache "problem". AuthorizingRealm requires its own cache to be defined and sans doing that reverts back to the default cache (2 minute cache). The cache HAS to be named as follows: authorizationCacheName = getClass().getName() + DEFAULT_AUTHORIZATION_CACHE_SUFFIX; where the suffix is ".authorizationCache". Failing to define an eternal cache for this results in really odd behavior. If you override AuthorizingCache then you'll need to define the cache using your own class name as shown below. <cache name="com.samples.MyCustomRealm.authorizationCache" maxElementsInMemory="10000" overflowToDisk="true" eternal="true" timeToLiveSeconds="0" timeToIdleSeconds="0" diskPersistent="true" diskExpiryThreadIntervalSeconds="600"> </cache> Maybe this is in the documentation somewhere, but I totally missed it and it caused me a lot of time and effort to figure it out. The documentation does say that expiring the cache without telling Shiro about it is a very bad thing – I agree. I hope this bit of information benefits somebody else.	Improvement	OPEN	Minor	Unresolved	2.0.0	None	Caching , (1)	documentation		0	Unassigned	Jeff Parker
SHIRO-337	SHIRO	adding support for CDI	As there is a spring or guice integration, a CDI integration could be welcomed.	New Feature	OPEN	Critical	Unresolved	1.2.0, 1.2.1	None	Integration: JEE	patch patch-with-tes		0	Unassigned	Romain Manni-Bucau
SHIRO-338	SHIRO	Jenkins builds fail regularly	The Jenkins builds are failing on regular basis. There seems to be two reasons for this: The build runs out of memory. This is a known caveat with the build - it can be fixed by adding "-Xmx96m -XX:MaxPermSize=96m" to MAVEN_OPTS. ContainerIntegrationTest in the samples-web module fails to listen on the port it attempt to. This is a common issue on build servers as other builds or processes may already be occupying the port. This test can be modified to select the port dynamically. I can fix the second one shortly with a patch to the test class, but I do not have access to the Jenkins configuration.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.0	None	None		0	Jared Bunting	Jared Bunting
SHIRO-339	SHIRO	Release 1.2.0		Task	CLOSED	Major	Fixed	None	1.2.0	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-34	SHIRO	Cipher refactoring	The Cipher interface should be refactored to have two methods: byte[] encrypt( byte[] raw); and byte[] decrypt( byte[] encrypted); Since almost all usages of Ciphers in JSecurity don't expect the key to change across method invocations. But for the few cases that do require such a requirement, we need to move the existing two methods into a new interface: VariableKeyCipher or DynamicKeyCipher that contains the existing two methods: byte[] encrypt( byte[] raw, byte[] encryptionKey); and byte[] decrypt( byte[] encrypted, byte[] decryptionKey);	Task	CLOSED	Major	Fixed	None	1.0.0	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-340	SHIRO	Shiro should avoid creating sessions if one doesn't exist	WebUtils.saveRequest() forces creating a session even if doesn't exist before. This hinders scalability. For savedRequests, it's not clear session is needed at all, a cookie might be better option for storing information in this case. Similarly, we should go through the rest of the codebase and see if sessions are created unnecessarily.	Improvement	OPEN	Major	Unresolved	1.1.0, 1.2.0	None	Web	None		0	Unassigned	Kalle Korhonen
SHIRO-341	SHIRO	ReflectionBuilder has invalid log message format	Someone pointed this out to me: https://github.com/apache/shiro/blob/trunk/core/src/main/java/org/apache/shiro/config/ReflectionBuilder.java#L136 "Redefining this object as a new instance of type []" should be "Redefining this object as a new instance of type {}"	Bug	CLOSED	Major	Fixed	1.0.0, 1.1.0	1.2.1	None	None		0	Unassigned	Brian Demers
SHIRO-342	SHIRO	Running the example as described at http://shiro.apache.org/10-minute-tutorial.html fails	I was not able to execute the maven commands because the environment from the zip file is not a valid svn working directory. I had to modify the pom to give it a revision number before maven was happy. I found the info at http://mojo.codehaus.org/buildnumber-maven-plugin/faq.html.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.1	Sample Apps	None		0	Unassigned	Jason Porter
SHIRO-343	SHIRO	RequiresRoles annotation is not intercepting on a class level when configured with Spring MVC	With the shown sanitized context definition, Shiro intercepts method invocations annotated with RequiresRoles, but fails to intercept if the annotation is at the class level. This requires duplication of the annotation to every method within a Controller class. Les says: "[...] this is something our AOPAlliance interceptor would have to check for - first the method and if it has annotations, and then the class to see if it has annotations [...]"	Bug	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Brian M. Carr
SHIRO-344	SHIRO	runAs feature doesn't work	Right after SecurityUtils.getSubject().runAs(new new SimplePrincipalCollection() {...} ) SecurityUtils.getSubject().getPrincipal() returns correct new Principal SecurityUtils.getSubject()..getPreviousPrincipals() returns correct original Principal but DefaultSubjectDAO merge principals in method protected void mergePrincipals(Subject subject) { PrincipalCollection currentPrincipals = subject.getPrincipals(); ... if (session == null) { ... } else { PrincipalCollection existingPrincipals = (PrincipalCollection) session.getAttribute(DefaultSubjectContext.PRINCIPALS_SESSION_KEY); if (CollectionUtils.isEmpty(currentPrincipals)) { ... } else { if (!currentPrincipals.equals(existingPrincipals)) { session.setAttribute(DefaultSubjectContext.PRINCIPALS_SESSION_KEY, currentPrincipals); } } } and after that SecurityUtils.getSubject().getPrincipal() and SecurityUtils.getSubject().getPreviousPrincipals() both returns new Principal - this is wrong behavior	Bug	CLOSED	Major	Fixed	1.2.0	1.2.1	Realms	principal, shiro, su		0	Unassigned	yourik
SHIRO-345	SHIRO	Annotations support of shiro is not compatible to aop enabled spring mvc controllers.	Seems like the way we actualy integrate shiro to work with spring is not compatible with spring's own aop stack. I've verified this issue at least on spring's @Controller beans. This seems to be due to the fact that we proxy the classes marked with shiro's annotations. To reproduce this issue: 1. Create a spring beans that is annotated with either @Component or @Controller. 2. Add shiro security annotations to this class. 3. then configure the shiro annotations as advised here: http://shiro.apache.org/spring.html I can extract a sample maven project that reproduce this issue. I think that we should add annotations support to spring enabled web app the same way all others spring components does, through spring's own AOP stack.	Bug	OPEN	Major	Unresolved	1.2.0	None	Authorization (access control)	aop authorization sp		0	Unassigned	DIALLO Mamadou BObo
SHIRO-346	SHIRO	Use the credentials that are stored when a user logs on to Windows. They are cached on the machine. Linux is similar.		New Feature	OPEN	Minor	Unresolved	None	None	Authentication (log-in)	patch		0	Unassigned	Scott Kubina
SHIRO-347	SHIRO	Improved JndiLdapRealm Concept	I am new to this framework, but I have a concept for extending the JndiLdapRealm to make it more usable for larger LDAP trees. I have found the JndiLdapRealm to be VERY limiting, especially since it only allows a single OU due to the use of 'userDnTemplate'. I have extended the JndiLdapRealm class to allow for sub-tree searches with a base OU as well as customized search filters. This implementation probably isn't production ready, and doesn't follow the coding standards of Shiro, it is more of a proof of concept. Since I don't see a way to attach files/diffs, the source and configuration for Shiro.ini is below: == Start Source == package net.dupage88.usercentral.shiro; import java.util.ArrayList; import java.util.List; import javax.naming.NamingEnumeration; import javax.naming.NamingException; import javax.naming.directory.SearchControls; import javax.naming.directory.SearchResult; import javax.naming.ldap.LdapContext; import org.apache.shiro.authc.AuthenticationInfo; import org.apache.shiro.authc.AuthenticationToken; import org.apache.shiro.realm.ldap.JndiLdapRealm; import org.apache.shiro.realm.ldap.LdapContextFactory; import org.apache.shiro.realm.ldap.LdapUtils; import org.apache.shiro.util.StringUtils; import org.slf4j.Logger; import org.slf4j.LoggerFactory; /** * @author csyperski */ public class CWSJndiLdapRealm extends JndiLdapRealm { private static final Logger log = LoggerFactory.getLogger(CWSJndiLdapRealm.class); public static final String DEFAULT_SEARCH_FILTER = "(uid= {0})"; private String searchBase; private String searchFilter;  public CWSJndiLdapRealm() { super(); searchFilter = DEFAULT_SEARCH_FILTER; searchBase = null; }  @Override public void setUserDnTemplate(String template) throws IllegalArgumentException { throw new RuntimeException("This method is not implemented, please use setSeachFilter and setBaseDn"); }  @Override public String getUserDnTemplate() { throw new RuntimeException("This method is not implemented, please use getSeachFilter and getBaseDn"); }  protected String getSearchFilter(String principal) throws IllegalArgumentException, IllegalStateException { if (!StringUtils.hasText(principal)) { throw new IllegalArgumentException("User principal cannot be null or empty."); }  if ( ! searchFilter.contains("{0} ") ) { log.warn("You didn't include {0} in your searchFilter, I assume you know what you are doing!"); } return searchFilter.replace("{0} ", principal); } @Override protected AuthenticationInfo queryForAuthenticationInfo(AuthenticationToken token, LdapContextFactory ldapContextFactory) throws NamingException { Object principal = token.getPrincipal(); Object credentials = token.getCredentials(); if ( searchBase == null || searchBase.trim().length() == 0 ) { log.error("searchBase must be defined"); return null; } if ( searchFilter == null || searchFilter.trim().length() == 0 ) { log.error("searchFilter must be defined"); return null; } if ( ! (principal instanceof String) ) { log.error("principal must be a string"); return null; } String filter = getSearchFilter((String)principal); log.debug("Using base: {}", searchBase); log.debug("Using filter: {}", filter); LdapContext ctx = null; SearchControls searchControls = new SearchControls(); searchControls.setReturningAttributes(new String[] { "dn" } ); searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE); /* We don't know what the search filter will look like So if we get multiple results, we should try them all. */ List<String> possibleDns = new ArrayList<String>(); /* Lets search for the user first */ try { log.debug("Searching for user '{}' through LDAP", principal); ctx = ldapContextFactory.getSystemLdapContext(); NamingEnumeration response = ctx.search(searchBase, filter, searchControls); while (response.hasMoreElements()) { possibleDns.add(((SearchResult)response.next()).getNameInNamespace()); } } finally { LdapUtils.closeContext(ctx); } /* Now lets authenticate */ if ( ! possibleDns.isEmpty() ) { for( String dn : possibleDns ) { ctx = null; try { log.debug("Attempting dn '{}' through LDAP", dn); ctx = ldapContextFactory.getLdapContext(dn, credentials); log.debug("Authenticated: {}!", dn); return createAuthenticationInfo(token, principal, credentials, ctx); // currently uses simple -> change to a subclass thats supports holding the dn? } catch ( NamingException e ) { log.debug("Failed to authenticate for: {}", dn); } finally { LdapUtils.closeContext(ctx); } } } throw new NamingException( "User: '" + (String)principal + "' not authenticated!" ); } /** @return the searchBase */ public String getSearchBase() { return searchBase; } /** @param searchBase the searchBase to set */ public void setSearchBase(String searchBase) { this.searchBase = searchBase; } /** @return the searchFilter */ public String getSearchFilter() { return searchFilter; } /** @param searchFilter the searchFilter to set */ public void setSearchFilter(String searchFilter) { this.searchFilter = searchFilter; } } == End Source == == Configuration Details == Shiro.ini ldapRealm = [yourpackagename].CWSJndiLdapRealm Removed the need for this below userDnTemplate limited the scope to a single OU (I believe) so it is replaced by searchBase and searchFilter #ldapRealm.userDnTemplate = cn= {0},ou=test,o=test  # This is the root of the LDAP search ldapRealm.searchBase = o=test # NEW - The search root  # Search filter allows for more complex queries like (&(cn={0} )(objectClass=inetOrgPerson)) or (&(uid= {0})(objectClass=inetOrgPerson)(memberOf=somegroup)) ldapRealm.searchFilter = (cn={0} ) ldapRealm.contextFactory.url = ldap://X.X.X.X:389 ldapRealm.contextFactory.authenticationMechanism = DIGEST-MD5 ldapRealm.contextFactory.systemUsername = cn=someuser,o=test ldapRealm.contextFactory.systemPassword = somepassword	New Feature	OPEN	Trivial	Unresolved	1.2.0	2.0.0	Realms	JndiLdapRealm ldap r		0	Unassigned	Charles Syperski
SHIRO-348	SHIRO	Allow ModularRealmAuthorizer to ignore ShiroExceptions thrown by realms when authz is checked.	This is useful, when you have multiple realms configured and one of those realms throws exceptions. In this case you may not want to stop ALL authz checks because one realm failed. <snippet from here> From Les: Refactoring the ModularRealmAuthorizer to use the Strategy design pattern (like the ModularRealmAuthenticator) is probably the best approach. This allows pluggable strategies to be used so you don't need to subclass.	Improvement	OPEN	Major	Unresolved	None	None	Authorization (access control)	None		0	Unassigned	Brian Demers
SHIRO-349	SHIRO	Security: Byte arrays (and other memory) holding sensitive data (even temporarily) should be zerod-out	Shiro provides features related to end-users interacting with sensitive information. For instance passwords, but also the cryptography features could be used for all sorts of sensitive information, such as credit card numbers. Policy-driven environments require compliance with rules that include the requirement to use FIPS 140.2 compliant JCA implementations, and that the application code that works with such crypto libraries also take care to leave no sensitive data as artifacts in memory (vulnerable to core dumps, etc.). See PCI DSS, DoD Application Security STIG, etc.. A quick review raises flags about various points in Shiro code that handle sensitive data and do not properly comply. For example within JcaCipherService copies of data are made in byte arrays which (which, base upon quick review) never get zeroed out (all of the bytes set to 0x0 or some other meaningless values). Also decryption results are returned via ByteSource. SimpleByteSource holds the byte[] of decrypted data but provides no way of clearing it. By coincidence, the internal representation is 'leaked' through the getBytes() implementation, and the end user could clear the array themselves, but reliance on the internal representation being passed out by all implmentations of ByteSource is rather risky. Suggest a review of all points of encrypt/decrypt to ensure temporary (internal) copies of data are always cleared, and suggest ByteSource have a new method added to the interface, such as wipe() that the end user can call when they are finished with the ByteSource.	Bug	OPEN	Critical	Unresolved	1.2.0	2.0.0	Authentication (log-in), (1)	None		0	Unassigned	James House
SHIRO-35	SHIRO	Documentation - Intro to Apache Shiro	Write the "Intro to JSecurity" article to be published on ServerSide or OnJava	Task	CLOSED	Major	Fixed	None	1.1.0	Documentation	None		0	Les Hazlewood	Alan Cabrera
SHIRO-350	SHIRO	Creating a subject should not create a session	When the following method is called: public Subject getSubjectByLogin(final String login) { PrincipalCollection principals = new SimplePrincipalCollection(login, REALM_NAME); return new Subject.Builder().principals(principals).buildSubject(); } it throws an exception on buildSubject(): Caused by: java.lang.IllegalArgumentException: SessionContext must be an HTTP compatible implementation. at org.apache.shiro.web.session.mgt.ServletContainerSessionManager.createSession(ServletContainerSessionManager.java:103) at org.apache.shiro.web.session.mgt.ServletContainerSessionManager.start(ServletContainerSessionManager.java:64) at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:121) at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336) at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:314) at org.apache.shiro.mgt.DefaultSubjectDAO.mergePrincipals(DefaultSubjectDAO.java:182) at org.apache.shiro.mgt.DefaultSubjectDAO.saveToSession(DefaultSubjectDAO.java:163) at org.apache.shiro.mgt.DefaultSubjectDAO.save(DefaultSubjectDAO.java:144) at org.apache.shiro.mgt.DefaultSecurityManager.save(DefaultSecurityManager.java:383) at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:350) at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846) It tries to create a session but really should not. Please see forum http://shiro-user.582556.n2.nabble.com/Subject-being-changed-td7370203.html for more details In our app, in our backoffice area, we display lists of users and their roles, and this functionality is used in this way.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.1	None	None		0	Unassigned	Dan Finkelstein
SHIRO-351	SHIRO	Shiro Native Session implementation cannot extract JSESSIONID From URL if JSESSIONID is URL parameter (not HTTP parameter)	The background for this issue is here: http://shiro-user.582556.n2.nabble.com/Shiro-Native-Sessions-quot-JSESSIONID-quot-or-quot-JSESSIONID-quot-td7367217.html In summary the issue is that Shiro supports extracting JSESSIONID from urls of this format: http://www.mycompany.com/myResource?JSESSIONID=ABCDEF but not of this format (this URL format is generated by HTTPServletResponse encodeURL method and is Servlet specification 2.5 compliant): http://www.mycompany.com/myResource;JSESSIONID=ABCDEF Shiro should be able to support both URL formats.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.2	Web	None		0	Unassigned	Gareth Collins
SHIRO-352	SHIRO	Shiro annotations with @Component and getBean(Type)	I have a bean where I'd like to annotate one of the methods with the @RequiresAuthentication annotation. When using the @RequiresAuthentication annotation and calling applicationContext.getBean(Class<?>) spring does not find my bean. Commenting out @RequiresAuthentication allows spring to find the bean. Using the string name of the bean instead of the type (i.e. applicationContext.getBean(String)) does work. // this causes spring to be unable to find the bean when using @RequiresAuthentication Class<? extends Processor> processorType = command.getProcessorType(); Processor processor = applicationContext.getBean(processorType); // However this works: Processor processor = applicationContext.getBean(processorStringName);	Bug	CLOSED	Major	Not A Problem	1.2.0	None	Integration: Spring	None	linux, java	0	Unassigned	Matt Friedman
SHIRO-353	SHIRO	DefaultSecurityManager has invalid SLF4J log instruction	Invalid SLF4J message (string concatenation with {} inside template) in DefaultSecurityManager class. Line 550: log.debug("Logging out subject with primary principal {}" + principals.getPrimaryPrincipal()); Should be: log.debug("Logging out subject with primary principal {}", principals.getPrimaryPrincipal());	Bug	CLOSED	Trivial	Fixed	1.2.0	1.2.1	None	None		0	Unassigned	Maciej Ziarko
SHIRO-354	SHIRO	Authentication cache	Please see this subject for details: http://shiro-user.582556.n2.nabble.com/how-to-log-out-another-user-programatically-authentication-cache-problem-td7420486.html#a7429528 In short: I can't set authenticationCachingEnabled from shiro.ini or realm constructor; Even if it were set, as I managed to start an authentication cache, it would not work because !isAuthenticationCachingEnabled(token, info) always returns true in AuthenticatingRealm.cacheAuthenticationInfoIfPossible, returning w/o putting anything on the cache. Otherwise the system logs say that it's using the cache...	Bug	CLOSED	Major	Fixed	1.2.0	1.2.1	Caching	authentication cache		0	Unassigned	Tudor Raneti
SHIRO-355	SHIRO	Provide runAs storage options (not just session).	Hi, I am using the runAs functionality of Shiro. However I think that there is a design flaw in the implementation. Because the runAs principles are stored in the Session object. However when a user does a second request to the server, while the first request to the server is still running, then there is a concurrency issue with the stored runAs principles. This issue caused problems in our application which used JSF2.0 frontend. Therefore I have overridden the default behavior of the org.apache.shiro.subject.Subject class, by implementing our own Subject class. This class stores the runAs principles in the servletRequest object. The concurrency issue is thereby fixed. See mine implementation in the attachment. Am I right that the current session implementation is incorrect? If so, please fix this bug. If not, is it an idea to make this a configuration choice in Shiro by using a storeRunAsPrinciplesInSession or storeRunAsPrincipleInServletRequest indicator? Greets, Marinus	Improvement	OPEN	Minor	Unresolved	1.2.0	None	Subject	None		0	Unassigned	Marinus Geuze
SHIRO-356	SHIRO	DefaultSubjectDAO clears principals on subject logout	From mailing list http://shiro-user.582556.n2.nabble.com/session-listener-and-principals-td7441157.html On explicit logout DefaultSubjectDAO#removeFromSession(Subject) removes all principals before SessionListener#onStop() is called. However there are no particular reason for such behavior. This behavior breaks session listeners that rely on principals	Task	OPEN	Major	Unresolved	1.2.0	None	None	None		0	Unassigned	Alex Vasilenko
SHIRO-357	SHIRO	Push push -javadoc.jar and -sources.jar into the maven repository	Maven aware IDEs (think Eclipse or IDEA) would be able to automatically download sources and show javadocs. User would not have to download and bind sources to project separately. Those who do not use IDEs would be able to use mvn eclipse:eclipse -DdownloadSources command to get the same thing.	Improvement	CLOSED	Major	Invalid	None	None	None	None		0	Les Hazlewood	Maria Jurcovicova
SHIRO-358	SHIRO	Source Tarball doesn't Build	When extracting the source tarball for 1.2.0 (http://www.apache.org/dyn/closer.cgi/shiro/1.2.0/shiro-root-1.2.0-source-release.zip), the maven build fails. It gives the following error in the root project: [ERROR] Failed to execute goal org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4:create (default) on project shiro-root: Cannot get the revision information from the scm repository : [ERROR] Error! I am able to get it building by setting the revisionOnScmFailure in the buildnumber plugin configuration.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.1	None	None		0	Unassigned	Jared Bunting
SHIRO-359	SHIRO	Realm not initialised when bound in servlet mode with guice	I have a SampleRealm class which extends TextConfigurationRealm. I bind it in configureShiroWeb() method of ShiroWebModule with bindRealm().to(SampleRealm .class).in(Singleton.class); My expectation is OnInit() to be called at some point. But that never happens. I guess that should happen through InitializableInjectionListener() with Guice, but doesn't get triggered.	Bug	OPEN	Major	Unresolved	1.2.0	None	Realms	OnInit patch		0	Jared Bunting	HG
SHIRO-36	SHIRO	Switch all usages of commons-logging to SLF4J		Task	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Jeremy Haile
SHIRO-360	SHIRO	Create UrlEncoder	To customize how URL encoding in a web app occurs, we should have a UrlEncoder component. More specifically, this can be used to customize how JSESSIONID is appended to a URL (if at all, depending on security preferences). The solution could be resolved as follows: Create a new UrlEncoder interface: public interface UrlEncoder { String encodeUrl(EncodeUrlRequest request); } The EncodeUrlRequest: public interface EncodeUrlRequest { String getUrl(); HttpServletRequest getHttpServletRequest(); HttpServletResponse getHttpServletResponse(); ServletContext getServletContext(); } Update WebEnvironment to have a new property: UrlEncoder getUrlEncoder();	New Feature	OPEN	Major	Unresolved	None	2.0.0	Web	None		0	Unassigned	Les Hazlewood
SHIRO-361	SHIRO	HttpServletResponse.encodeURL: only append JSESSIONID when necessary	The JSESSIONID only needs to be added to the URL when cookies are disabled. Ideally, this would be resolved via SHIRO-360.	Improvement	RESOLVED	Major	Fixed	None	1.3.0	Web	None		0	Unassigned	Les Hazlewood
SHIRO-362	SHIRO	UnavailableSecurityManagerException	i struggle for the error quite long already, i call to init() via spring's init-method for DAO call. The error missing if remove the spring's init-method or remove the DAO call.	Question	CLOSED	Major	Invalid	None	None	Configuration, (3)	None		0	Unassigned	jason.huewk
SHIRO-363	SHIRO	PasswordMatcher should support character arrays	The JdbcRealm by default returns a character array as its stored credentials. The PasswordMatcher should automatically convert any saved character arrays to a String for use with the PasswordService.	Bug	CLOSED	Major	Fixed	1.2.0	1.2.1	Authentication (log-in)	None		0	Unassigned	Les Hazlewood
SHIRO-364	SHIRO	Add "bean listener" feature to Ini factories	The ini factory/configuration has been described as a poor man's dependency injection. Even though other DI mechanisms are often used when more power and configurability is required, the ini factory is still quite popular. Adding the ability to register "bean listeners" that are notified of the beans that get created would allow us to add some more complex functionality to shiro, decouple it from our core classes, and support it in all of our supported DI solutions.	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Jared Bunting	Jared Bunting
SHIRO-365	SHIRO	Add JMX Support	JMX support is viewed as the implementation of multiple MBeans that can be optionally registered. These mbeans should allow introspection, configuration, assertion testing, and performance monitoring on, at the very least, the security manager, realms, filters, the filterChainResolver, and sessionDaos.	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Jared Bunting	Jared Bunting
SHIRO-366	SHIRO	Make possible to dynamically select the Realm that participates in authc/authz	Right now, Shiro will always use all the configured Realms (one or more) to perform authc/authz actions. But, there might be situations where a "targeted" approach would be needed. One simple (but breaking) change would be to extend AuthenticationStrategy iface, to somehow make it able to tell "skip this realm" to ModularRealmAuthenticator (as beforeAttempt and afterAttempt already exists)? === A use case would be to make Shiro able to authc/authz targeting different realms using same "mech" (like HTTP Basic for example) against different sources, unlike today, where all realms will be always used. For example, a single App could have: Realm A using LDAP A Realm B using LDAP B Realm C ... (LDAP A and LDAP B might even have overlapping usernames but those usernames are not same users, they have different perms etc) Today, Shiro will always consult Realms A, B, C (one can affect the "strategy" only). But, based on some conditions (IP of incoming HTTP request? User Agent? Path? etc), I'd like to be able to do: use A realm only use A and C realm only use B only etc. But the point is, that client should be unaware of this (so, it would not need to pass in some HTTP Header saying "I need realm B" etc). It should simply stick with plain HTTP Basic for example. Other ideas welcome, if I missed something in Shiro already making this possible!	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Cservenak, Tamas
SHIRO-367	SHIRO	Support for auto population of custom principal records	By default, adding any custom principal objects to the subject is overly difficult, and the implementation of it either reduces the benefit of having Shiro handle authentication, or required duplicate calls to the data store for authentication credentials. By default, I think Realms should be extended so that any additional information about the user that is returned from the autentication query (JdbcRealm, Active Directory, etc...) that is not part of the credentials matching process, should be auto-appended to the subject principals collection. This would allow developers to add items to the principals for a user simply by controlling what data points came back from the data store call. In the case of a JdbcRealm, this would be as simple as adding fields to the return type on the authenticationQuery. They could be mapped to the principal using Strings if we needed simplicity (but more accurate type mappings would be nice), making them immediately accessible without having to implement the custom logic to extend or override doGetAuthenticationInfo. Simply map them as a key value pair using the column name from the query as the key, and then the value. Same could be done for all other default realms (ActiveDirectory would be a big one).	New Feature	OPEN	Major	Unresolved	1.2.0	None	Subject	custom principal,		0	Unassigned	Josh Smith
SHIRO-368	SHIRO	DomainPermission(string, string) constructor sets targets to the same value as actions	The DomainPermission(string, string) constructor incorrectly sets the 'targets' field to the value supplied for 'actions': 055 public DomainPermission(String actions, String targets) { 056 this.domain = getDomain(getClass()); 057 this.actions = StringUtils.splitToSet(actions, SUBPART_DIVIDER_TOKEN); 058 this.targets = StringUtils.splitToSet(actions, SUBPART_DIVIDER_TOKEN); 059 encodeParts(this.domain, actions, targets); 060 }	Bug	CLOSED	Minor	Fixed	1.2.0	1.2.1	Authorization (access control)	None	windows xp	0	Unassigned	Ben Johnson
SHIRO-369	SHIRO	Guice integration property setting doesn't always work	The mechanism to allow the setting of arbitrary properties on shiro objects in Guice doesn't always work and sometimes require a workaround. The workaround is to explicitly bind the class that you want the property to be set upon in the ShiroModule. This is less than ideal. I believe that the issue is because the type listener that does the property setting is bound in the private module, meaning that it only affects beans bound in that private module. However, when bindings to classes aren't made specifically in the private module, they occur as just-in-time bindings, which are effectively bound at the root binder. Therefore, the type listener never gets to see these bindings. I believe that the solution is to bind all shiro objects in the ShiroModule (and ShiroWebModule as appropriate). This will cause them to always be bound within the private module. To ensure that this is effective, we will also require a test case that scans the classpath for implementations of particular interfaces and ensures that they are bound.	Bug	OPEN	Major	Unresolved	1.2.0	None	Integration: Guice	None		0	Jared Bunting	Jared Bunting
SHIRO-37	SHIRO	Deploy snapshots automatically	Deploy snapshots automatically from CI system to the new Apache snaphost repo at http://repository.apache.org/snapshots. Here's a link to mailing list thread with instructions on how to do that: http://www.nabble.com/Deploy-Snapshots-from-http:--vmbuild.apache.org-continuum--td22197057.html	Task	CLOSED	Minor	Fixed	None	1.0.0	None	None		0	Unassigned	Kalle Korhonen
SHIRO-370	SHIRO	Allow for a more type-safe way to set properties when using Guice integration	Currently, setting properties when using Guice integration is somewhat hacky. We're just binding constants to strings, and hoping that the names match up with method calls. I would prefer something more guicey, that provides us with the typesafety that I tend to expect from Guice. My thought is to allow methods, similar to the @Provides methods, on the ShiroModule and ShiroWebModule with a @Configures annotation. These methods would then be essentially wrapped in a MembersInjector and setup to be passed a particular object just after its instantiation. The goal would be to allow something like this in the module: @Configures public void configureSessionManager(DefaultWebSessionManager webSessionManager, Cookie cookie) { webSessionManager.setSessionIdCookie(cookie); webSessionManager.setGlobalSessionTimeout(5000L); } The DefaultWebSessionManager would be the bean being injected, while the Cookie would simply be treated as an injected dependency, much like the arguments in a @Provides method.	New Feature	OPEN	Major	Unresolved	None	None	None	None		0	Jared Bunting	Jared Bunting
SHIRO-371	SHIRO	SimpleAccountRealm should implement RolePermissionResolver	It seems to be a valid use case to have an external user management system (ldap, active directory, etc) manage users and the roles that they are in. However, since permissions are often application-dependent, it is not uncommon to map roles to permissions at the application level. The shiro.ini file seems a perfect place to do this, but it is non-trivial to allow a different realm (again, ldap or active directory) to use the role->permission mappings place in the ini file. If the SimpleAccountRealm implemented RolePermissionResolver, then it could be done as simply as: myRealm = com.example.MyCustomRealm myRealm.rolePermissionResolver = $iniRealm	Improvement	OPEN	Minor	Unresolved	None	None	Authorization (access control) , (2)	None		0	Jared Bunting	Jared Bunting
SHIRO-372	SHIRO	provide some integration with wss4j	A simple way to integrate shiro with wss4j is to extend the UsernameTokenValidator and add a login.	Improvement	OPEN	Major	Unresolved	1.2.0	None	None	None		0	Unassigned	Romain Manni-Bucau
SHIRO-373	SHIRO	Complete CAS remember-me support	I was preparing a demo on CAS support for Shiro : https://github.com/leleuj/cas-shiro-demo and I did realize the remember-me feature is not fully addressed. One use case is missing : if the user is already remembered (by CAS) and want to be authenticated, it should be redirected to CAS server with a specific parameter (renew=true) to force CAS re-authentication. For this use case, I created a CasAuthenticatedUserFilter which checks if the user is authenticated (not remembered) and sends him to the CAS server if he's not (with the specific parameter to force re-authentication if he's already remembered).	Bug	RESOLVED	Major	Fixed	None	1.3.0	None	patch		0	Unassigned	Jérôme Leleu
SHIRO-374	SHIRO	Session Cookie will not be deleted on subjects logout	Our web application initializes Shiro through an .ini file. Within the ini file we set the application cookie as following: Cookie Management cookie = org.apache.shiro.web.servlet.SimpleCookie cookie.name = AppCookie cookie.secure = true cookie.httpOnly = false securityManager.sessionManager.sessionIdCookie = $cookie Shiro runs in "native" session mode. When an user enters the application the MyCookie and an JSESSIONID cookie will be created. The session will be authenticated on subject.login(...). Everything works fine until the user log out and we call subject.logout() method. It seems that the JSESSIONID cookie will not be deleted. The value of the cookie stays always the same, while the value(id) of our AppCookie always change. The problem is that the user get the same session again if he log in again. That means that the settings the user made before logout already exists on relogin.	Bug	CLOSED	Major	Cannot Reproduce	1.2.0	None	Session Management, (1)	None	gf3, jsf	0	Unassigned	Sven Moschel
SHIRO-375	SHIRO	Basic authentication issue when using COLON character	A user with a COLON character in his password cannot connect to a Shiro protected application when using Basic authentication. The problem is in the method that splits the username and password.	Bug	CLOSED	Major	Fixed	1.1.0, 1.2.0	1.2.1	Authentication (log-in), Web	None		0	Unassigned	Nicolas Rougé
SHIRO-376	SHIRO	shiro-cas feature should not depend on shiro-cas	In the features.xml it contains this block <feature name="shiro-cas" version="1.2.0" resolver="(obr)"> <feature version="1.2.0">shiro-cas</feature> <!-- Is there a CAS client osgi bundle somewhere? <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.aspectj/${casclient.bundle.version}</bundle> --> <bundle>mvn:org.apache.shiro/shiro-cas/1.2.0</bundle> </feature> It indicates that shiro-cas depends on shiro-cas, installing this feature on Karaf will yield a stackoverflow error.	Bug	CLOSED	Critical	Fixed	1.2.0	1.2.1	Configuration	None	karaf	0	Jared Bunting	Archimedes Trajano
SHIRO-377	SHIRO	PropertiesRealm unable to reload Properties	In PropertiesRealm.afterRoleCacheSet() at line 166, the condition "scheduler != null" prevent the scheduler to be instantiated, should not it be "scheduler == null" ?	Bug	CLOSED	Minor	Fixed	1.2.0	1.2.1	Realms	None	windows 7, tomcat, java	0	Unassigned	Ludovic Garcia
SHIRO-378	SHIRO	PropertiesRealm able to reload Classpath properties files	When deploying a project using shiro on Tomcat, users.properties file could be referenced as classpath files, with condition in PropertiesRealm.afterRoleCacheSet() at line 166, automatic file reloading is impossible. if (this.resourcePath.startsWith(ResourceUtils.FILE_PREFIX) && scheduler != null) { startReloadThread(); }	New Feature	OPEN	Minor	Unresolved	1.2.0	None	Realms	patch	windows 7, tomcat, java 1.6	0	Unassigned	Ludovic Garcia
SHIRO-379	SHIRO	SimpleAccoutRealm concurrency access to roles and users	I'm using a PropertiesRealm which automatically reload Users and roles if the resource has been modified. And i noticed that authenticating an user and reloading properties file in the same time, authenticating do not wait for reloading to be finished. Should not SimpleAccountRealm be refactored in order to lock authentication while modifying users / roles? We should simply acquire a Mutex in order to retrieve users / roles or adding / removing users? An other way to ensure concurrency should be to use Collections.synchronizedMap() for users' map and roles' map, but while reloading resource, authentications won't wait for the reloading to be finished. I can do required changes if it helps	Bug	CLOSED	Minor	Fixed	1.2.0	1.2.2	Realms	None	tomcat, windows 7, java 1.6	0	Unassigned	Ludovic Garcia
SHIRO-38	SHIRO	Update JavaDoc for return type of SecurityUtils.getSubject()	From JavaDoc for SecurityUtils.getSubject() it is not clear what returns this method if nobody is logged in. Does it return null? or some default Subject? From Subject class documentation (getPrincipal method) I would expect that SecurityUtils.getSubject() returns some default Subject, but simple tests shows that it is not true - it returns null. So I would change it like this: @return the currently accessible <tt>Subject</tt> accessible to the calling code or null if .... (actually when?)	Task	CLOSED	Trivial	Fixed	None	None	None	None		0	Les Hazlewood	Grzegorz Borkowski
SHIRO-380	SHIRO	runAs feature (still) doesn't work	Right after SecurityUtils.getSubject().runAs(new new SimplePrincipalCollection() {...} ) SecurityUtils.getSubject().getPrincipal() returns correct new Principal SecurityUtils.getSubject()..getPreviousPrincipals() returns correct original Principal but DefaultSubjectDAO merge principals in method protected void mergePrincipals(Subject subject) { PrincipalCollection currentPrincipals = subject.getPrincipals(); ... if (session == null) { ... } else { PrincipalCollection existingPrincipals = (PrincipalCollection) session.getAttribute(DefaultSubjectContext.PRINCIPALS_SESSION_KEY); if (CollectionUtils.isEmpty(currentPrincipals)) { ... } else { if (!currentPrincipals.equals(existingPrincipals)) { session.setAttribute(DefaultSubjectContext.PRINCIPALS_SESSION_KEY, currentPrincipals); } } } and after that SecurityUtils.getSubject().getPrincipal() and SecurityUtils.getSubject().getPreviousPrincipals() both returns new Principal - this is wrong behavior	Bug	CLOSED	Major	Fixed	1.2.1	1.2.2	Realms	principal, shiro, su		0	Unassigned	Jochen Munz
SHIRO-381	SHIRO	Function to repeatedly generate same encryption key	I would like a way in Shiro to repeatedly generate my encryption keys so that I do not need to store them anywhere. This is similar (I think) to how PBKDF2 works. For my use case, I'd need this for both IV and non-IV encryption methods. My use case is pretty straightforward: I encrypt data in a database in the cloud using symmetric key. The database is separate from my application server for a variety of reasons (actually on a different provider completely). Since I need to obviously retain the encryption keys across system restarts and system scale events, I am challenged with finding a way to store those keys in a way that the application server can restart without manually entering them (and therefore its restart being dependent on someone being available), but also not storing my encryption key in a database where somebody could access it easily. I've thought about using master keys to generate other keys, and/or storing fragments of keys in different places (like half the key in my app code, and the other half in the database), but each of these has issues. What I'd like to be able to do instead is to generate the same encryption keys upon application restart and store those keys in memory only while the application is running. Obviously whatever initialization code I used to do this would need to be accessible somewhere too, but that could be handled in a few ways, and ultimately adds one more barrier to getting the encryption key. One could argue that I could just handle my encryption key in that way too, and there's some merit to that, but there's something scary about storing my encryption key somewhere, plus I'd really need to find a 2nd database provider, complicating my deployment substantially.	New Feature	OPEN	Major	Unresolved	None	None	Cryptography & Hashing	None		0	Unassigned	Michael Swiernik
SHIRO-382	SHIRO	Typo in http://shiro.apache.org/java-authentication-guide.html	Typo on the http://shiro.apache.org/java-authentication-guide.html file. (near the top of the page) Under heading: Terminology you'll need In the 'Realms' bullet, 'and' is misspelled 'ans' in the last sentence. ... The idea is that you would use a realm per back end data source ans Shiro would know... should be: ... The idea is that you would use a realm per back end data source and Shiro would know... NOTE: I checked out the 'trunk' source tree, and tried to create a proper patch for this, but I couldn't seem to find the source for this file. Could you point me in the right direction to find the source for these docs?	Bug	CLOSED	Minor	Fixed	1.2.1	None	Documentation, (1)	None		0	Unassigned	Dan Rollo
SHIRO-383	SHIRO	Member variable name incorrect (sessionDAO.activeSessionCache) in docs for: EnterpriseCacheSessionDAO	In the 'Session Management' docs, under heading: EnterpriseCacheSessionDAO, the example ini settings snippet following 'For example, in shiro.ini:' cause an error (http://shiro.apache.org/session-management.html#SessionManagement-%257B%257BEnterpriseCacheSessionDAO%257D%257D). SEVERE: Exception sending context initialized event to listener instance of class org.apache.shiro.web.env.EnvironmentLoaderListener org.apache.shiro.config.ConfigurationException: Property 'activeSessionCache' does not exist for object of type org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO. at org.apache.shiro.config.ReflectionBuilder.isTypedProperty(ReflectionBuilder.java:252) I think the variable named used is incorrect: sessionDAO.activeSessionCache because no such field/setter exists. However, changing the variable name to: sessionDAO.activeSessionsCache appears to work. For consistency, it should probably be changed everywhere it is used in that example snippet (3 places): This: #This implementation would use your preferred distributed caching product's APIs: activeSessionCache = my.org.apache.shiro.cache.CacheImplementation sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO sessionDAO.activeSessionCache = $activeSessionCache securityManager.sessionManager.sessionDAO = $sessionDAO becomes this: #This implementation would use your preferred distributed caching product's APIs: activeSessionsCache = my.org.apache.shiro.cache.CacheImplementation sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO sessionDAO.activeSessionsCache = $activeSessionsCache securityManager.sessionManager.sessionDAO = $sessionDAO	Bug	CLOSED	Major	Fixed	1.2.1	None	Documentation, (1)	None		0	Unassigned	Dan Rollo
SHIRO-384	SHIRO	Download link is not available for binary	Hi Guys, In you'r download's page http://shiro.apache.org/download.htm, there is not any available link to download binary shiro. there are some link blue, but they aren't a link.	Bug	CLOSED	Major	Not A Problem	None	None	None	None		0	Unassigned	Iman Reihanian
SHIRO-385	SHIRO	Waffle Integration	Waffle (Windows Authentication Framework) is a simple authentication framework that delegates authentication to the host (windows) machine. This lets you use the machine/domain settings with zero configuration. Integration with Shiro should be pretty easy. It likely makes more sense to host this in the waffle project, but I will add an issue here so there is something to point to	New Feature	OPEN	Minor	Unresolved	None	None	None	patch		0	Unassigned	Ryan McKinley
SHIRO-386	SHIRO	Possibility to use DefaultWebSecurityContext without servlet api	DefaultWebSecurityManager seems to be almost capable of functioning even if servlet api isn't available DefaultSecurityManager. There are couple things that currently prohibits utilizing this feature. 1. DefaultWebSecurityManager is fixed to deliver a WebSubjectContext implementation but ClassUtils.isAvailable("javax.servlet.ServletRequest") could be used to determine if falling back to super implementation would be more appropriate. A pluggable subject context provider/factory would eliminate the need of using classpath determination inside the implementation. 2. WebUtils has couple of static field dependencies to servlet api which are trivial to factor out. 3. ServletContainerSessionManager is not designed to fall back to super class when req/resp do not meet it's needs while creating a session and it only generates an exception from such an attempt. A simple ClassUtils.isAvailable("javax.servlet.http.HttpSession") could be used to make a decision between it and DefaultWebSessionManager. Alternative approach would be deriving the former from latter and using the fallback pattern mentioned is case 1.	Wish	CLOSED	Minor	Won't Fix	1.2.0, 1.2.1	None	Web	None	osgi	0	Unassigned	Tuomas Kiviaho
SHIRO-387	SHIRO	EnvironmentLoader destroys wrong environment	I've got a singleton EnvironmentLoader that is used to create multiple environments for multiple servlet contexts. Initialization goes all well but destroying is done to the last created environment and not to the one that resides in given servlet context. A simple fix/workaroud would be to change the destroyEnvironment as Object environment = servletContext.getAttribute(ENVIRONMENT_ATTRIBUTE_KEY); LifecycleUtils.destroy(environment); Instance variable reference to last initialized environment should also be removed to allow garbage to be collected after last environment has been destroyed.	Bug	CLOSED	Major	Fixed	1.2.1	1.2.2	Web	None		0	Unassigned	Tuomas Kiviaho
SHIRO-388	SHIRO	Stackoverflow org.apache.shiro.session.SessionListener.onStop()	While trying to access the session variable in the Sessionlistener onStop() method cyclic call happens and ends with stack overflow . just sent the part of the stacktrace. few lines get repeated lot and ends with exception SEVERE: Servlet.service() for servlet jsp threw exception java.lang.StackOverflowError at java.text.SimpleDateFormat.zeroPaddingNumber(Unknown Source) at java.text.SimpleDateFormat.subFormat(Unknown Source) at java.text.SimpleDateFormat.format(Unknown Source) at java.text.SimpleDateFormat.format(Unknown Source) at java.text.DateFormat.format(Unknown Source) at org.apache.log4j.helpers.PatternParser$DatePatternConverter.convert(PatternParser.java:443) at org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:65) at org.apache.log4j.PatternLayout.format(PatternLayout.java:506) at org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:310) at org.apache.log4j.WriterAppender.append(WriterAppender.java:162) at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251) at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66) at org.apache.log4j.Category.callAppenders(Category.java:206) at org.apache.log4j.Category.forcedLog(Category.java:391) at org.apache.log4j.Category.debug(Category.java:260) at com.stutzen.abc.common.LoggerManager.writeHelperInfo(LoggerManager.java:52) at com.stutzen.abc.shiro.SessionListener.onStop(SessionListener.java:37) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.notifyStop(AbstractNativeSessionManager.java:158) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.onInvalidation(AbstractValidatingSessionManager.java:174) at org.apache.shiro.web.session.mgt.DefaultWebSessionManager.onInvalidation(DefaultWebSessionManager.java:221) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:148) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:206) at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141) at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) at com.stutzen.abc.utils.CUtils.getSessionAttribute(CUtils.java:279) at com.stutzen.abc.shiro.SessionListener.setRequestEmployeeStatus(SessionListener.java:47) at com.stutzen.abc.shiro.SessionListener.onStop(SessionListener.java:38) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.notifyStop(AbstractNativeSessionManager.java:158) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.onInvalidation(AbstractValidatingSessionManager.java:174) at org.apache.shiro.web.session.mgt.DefaultWebSessionManager.onInvalidation(DefaultWebSessionManager.java:221) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:148) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:206) at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141) at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) at com.stutzen.abc.utils.CUtils.getSessionAttribute(CUtils.java:279) at com.stutzen.abc.shiro.SessionListener.setRequestEmployeeStatus(SessionListener.java:47) at com.stutzen.abc.shiro.SessionListener.onStop(SessionListener.java:38) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.notifyStop(AbstractNativeSessionManager.java:158) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.onInvalidation(AbstractValidatingSessionManager.java:174) at org.apache.shiro.web.session.mgt.DefaultWebSessionManager.onInvalidation(DefaultWebSessionManager.java:221) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:148) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:206) at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141) at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) at com.stutzen.abc.utils.CUtils.getSessionAttribute(CUtils.java:279) at com.stutzen.abc.shiro.SessionListener.setRequestEmployeeStatus(SessionListener.java:47) at com.stutzen.abc.shiro.SessionListener.onStop(SessionListener.java:38) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.notifyStop(AbstractNativeSessionManager.java:158) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.onInvalidation(AbstractValidatingSessionManager.java:174) at org.apache.shiro.web.session.mgt.DefaultWebSessionManager.onInvalidation(DefaultWebSessionManager.java:221) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:148) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:206) at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141) at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) at com.stutzen.abc.utils.CUtils.getSessionAttribute(CUtils.java:279) at com.stutzen.abc.shiro.SessionListener.setRequestEmployeeStatus(SessionListener.java:47) at com.stutzen.abc.shiro.SessionListener.onStop(SessionListener.java:38) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.notifyStop(AbstractNativeSessionManager.java:158) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.onInvalidation(AbstractValidatingSessionManager.java:174) at org.apache.shiro.web.session.mgt.DefaultWebSessionManager.onInvalidation(DefaultWebSessionManager.java:221) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:148) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120)	Bug	CLOSED	Major	Fixed	1.2.1	1.2.2	Session Management	None	tomcat	0	Unassigned	Arvind S
SHIRO-389	SHIRO	Fix OSGI Exports for shiro-ehcache	Currently the osgi-export in the pom file is org.apache.shiro.ehcache which isn't a valid package. It should be changed to org.apache.shiro.cache.ehcache	Bug	CLOSED	Major	Fixed	1.2.0, 1.2.1	1.2.2	Caching	None		0	Unassigned	Chris Geer
SHIRO-39	SHIRO	JEE integration	Make it easy for Ki to run inside a JEE server, using only JEE configuration mechanisms (annotations, JNDI). Do not rely on Spring or other container-specific config if at all possible. Write a sample app that can run in any JEE container (JBoss, Geronimo, etc).	Task	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Les Hazlewood
SHIRO-390	SHIRO	OSGi Import for JSP (javax.servlet.jsp) should be declared optional	I am using Shiro with OSGi (Equinox) in a web application. Yet I do not use JSP pages. Therefore I use the shiro web bundle without requiring the package *.tags. So actually I do not need the jsp bundles as I don't use the tags. To avoid having to include the jsp bundles the import should be declared optional. I hacked up the manifest to suit my needs and it works just fine. Another option would be to create a separate package like "shiro.web.jsp" which contains the code for using shiro with JSPs.	Bug	CLOSED	Minor	Fixed	1.2.1	1.2.2	None	None	eclipse	0	Unassigned	Jan Stamer
SHIRO-391	SHIRO	Enable Principal in Logs using SLF4J MDC	Sometimes it is useful to log the user name. That way it can easily be traced which user faced an exception or where an error occurred. The Mapped Diagnostic Context (MDC) of SLF4J can be used for that as it uses the same mechanisms as Shiro already does. That way one can use %X {shiroSubject} in the log pattern. This will then be filled with the principal name or left blank. Remark: No additional libraries or anything are necessary for that. All that's needed is SLF4J and that's there already.	Improvement	REOPENED	Minor	Unresolved	None	None	None	patch		0	Jared Bunting	Jan Stamer
SHIRO-392	SHIRO	Shiro Extension for JAX-RS	We've added an extension to Shiro which enables Shiro annotations in the JAX-RS implementation Sun Jersey. You can do the following with it: @Path("/changelog") @RequiresPermissions("repository:read") public class ChangelogResourceImpl { @POST @Consumes(MediaType.APPLICATION_JSON) @Path("/addObject") @Override @RequiresPermissions("repository:write") public Response addObject(ObjectJson objectJson) { someService.addObject(object); return Response.ok().build(); } } If the user is not authenticated Http Status Code 401 is returned. If the user has insufficient privileges Status Code 403 is returned. Right now we've only added support for the annoation @RequiresPermissions. The other Shiro annoations could easily be added in the same fashion. Yet currently that's the only one we need.	Improvement	RESOLVED	Major	Fixed	None	1.4.0-RC2	None	None		0	Unassigned	Jan Stamer
SHIRO-393	SHIRO	Support accessing isRemembered() & isAuthenticated() state during getAuthorizationInfo() (and probably methods like check*)	As mentioned in http://shiro-user.582556.n2.nabble.com/How-to-check-for-remember-in-a-Realm-td7577897.html#a7577898 currently Shiro has no supported way of accessing the remembered & authenticated state to support dynamic permissions. Please add this to the API. A limited workaround is possible, by calling SecurityUtils.getSubject(), however it doesn't work when the subject is not strictly thread-bound.	Improvement	OPEN	Major	Unresolved	1.2.1	None	Authorization (access control)	None		0	Unassigned	Hendy Irawan
SHIRO-394	SHIRO	PropertiesRealm reloading not working when loading from file	I use a PropertiesRealm with a file url. This works fine when initially loading the properties file. Yet I was puzzled to find out that reloading does not work. I debugged and found the problem: First of all the method isFileModified() checks for the lastModified date. Yet this returns 0 if the file does not exist. This is always the case when using the prefix "file:". Therefore the file was never reloaded because the reload file was checking the last modfied date of a file that was never there. I have several problems with that: 1. Frankly speaking has anyone ever tested that stuff? To me it does not look like that and I think Shiro can do better. 2. The isModified method should react if the file is not existing (any more). Because maybe someone deleted in by accident which causes problems for the next startup. 3. The initial file loading and the reloading should use the same code. So at least then its clear that if the initial load succeeds so does the reloading. The quick fix is pretty straightforward - just remove the prefix "file:" from the resource path:: private boolean isFileModified() { File propertyFile = new File(ResourceUtils.stripPrefix(this.resourcePath)); long currentLastModified = propertyFile.lastModified(); if (currentLastModified > this.fileLastModified) { this.fileLastModified = currentLastModified; return true; } else { return false; } } I will hopefully be able to supply a patch soon. Thanks, Jan	Bug	CLOSED	Major	Fixed	1.2.1	1.2.2	Realms	None		0	Unassigned	Jan Stamer
SHIRO-395	SHIRO	Add an Event Bus for event publishing and low-coupling for custom components/plugins.	https://cwiki.apache.org/confluence/display/SHIRO/Version+2+Brainstorming#Version2Brainstorming-Eventdrivendesign	New Feature	RESOLVED	Major	Fixed	None	1.3.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-396	SHIRO	Exception after logout java.lang.IllegalArgumentException: HttpSession constructor argument cannot be null.	Hi, I am developing a single page app using plain html5 and rest in the server side. When I deploy the app and login and then logout in shiro everything works fine. When I try to login again a get this error: 20:26:24,255 ERROR [com.pelopiti.teamgol.socialnetwork.rest.secured.SignInService] (http-localhost-127.0.0.1-8080-5) Login general exception: : java.lang.IllegalArgumentException: HttpSession constructor argument cannot be null. at org.apache.shiro.web.session.HttpServletSession.<init>(HttpServletSession.java:51) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.web.session.mgt.ServletContainerSessionManager.createSession(ServletContainerSessionManager.java:119) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.web.session.mgt.ServletContainerSessionManager.createSession(ServletContainerSessionManager.java:115) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.web.session.mgt.ServletContainerSessionManager.start(ServletContainerSessionManager.java:64) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:121) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336) [shiro-core-1.2.1.jar:1.2.1] at com.pelopiti.teamgol.socialnetwork.rest.secured.SignInService.login(SignInService.java:79) [classes:] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_21] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_21] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_21] at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_21] at org.jboss.as.ee.component.ManagedReferenceMethodInterceptorFactory$ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptorFactory.java:72) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:374) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:127) [jboss-as-weld-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:135) [jboss-as-weld-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:36) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:36) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47) [jboss-as-jpa-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:82) [jboss-as-weld-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:53) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInCallerTx(CMTTxInterceptor.java:202) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.ejb3.tx.CMTTxInterceptor.required(CMTTxInterceptor.java:306) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:190) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:59) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:32) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.TCCLInterceptor.processInvocation(TCCLInterceptor.java:45) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:165) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:173) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:72) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at com.pelopiti.teamgol.socialnetwork.rest.secured.SignInService$$$view61.login(Unknown Source) [classes:] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_21] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_21] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_21] at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_21] at org.jboss.weld.util.reflection.SecureReflections$13.work(SecureReflections.java:264) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInvocation(SecureReflectionAccess.java:137) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.util.reflection.SecureReflections.invoke(SecureReflections.java:260) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.bean.proxy.EnterpriseBeanProxyMethodHandler.invoke(EnterpriseBeanProxyMethodHandler.java:111) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.bean.proxy.EnterpriseTargetBeanInstance.invoke(EnterpriseTargetBeanInstance.java:56) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.bean.proxy.ProxyMethodHandler.invoke(ProxyMethodHandler.java:105) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at com.pelopiti.teamgol.socialnetwork.rest.secured.SignInService$Proxy$$$_Weld$Proxy$.login(SignInService$Proxy$$$_Weld$Proxy$.java) [classes:] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_21] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_21] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_21] at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_21] at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:155) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.ResourceMethod.invokeOnTarget(ResourceMethod.java:257) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:222) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:211) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.SynchronousDispatcher.getResponse(SynchronousDispatcher.java:525) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:502) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:119) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:208) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:55) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:50) [resteasy-jaxrs-2.3.2.Final.jar:] at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.0.Final.jar:1.0.0.Final] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:329) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.jboss.weld.servlet.ConversationPropagationFilter.doFilter(ConversationPropagationFilter.java:62) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.jboss.solder.servlet.exception.CatchExceptionFilter.doFilter(CatchExceptionFilter.java:65) [solder-impl-3.1.0.Final.jar:3.1.0.Final] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.jboss.solder.servlet.event.ServletEventBridgeFilter.doFilter(ServletEventBridgeFilter.java:74) [solder-impl-3.1.0.Final.jar:3.1.0.Final] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at com.ocpsoft.pretty.PrettyFilter.doFilter(PrettyFilter.java:145) [prettyfaces-jsf2-3.3.3.jar:] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at com.pelopiti.teamgol.socialnetwork.view.filters.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:36) [classes:] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.2.1.jar:1.2.1] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) [jbossweb-7.0.13.Final.jar:] at org.jboss.as.jpa.interceptor.WebNonTxEmCloserValve.invoke(WebNonTxEmCloserValve.java:50) [jboss-as-jpa-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:153) [jboss-as-web-7.1.1.Final.jar:7.1.1.Final] at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:155) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:368) [jbossweb-7.0.13.Final.jar:] at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877) [jbossweb-7.0.13.Final.jar:] at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:671) [jbossweb-7.0.13.Final.jar:] at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:930) [jbossweb-7.0.13.Final.jar:] at java.lang.Thread.run(Thread.java:619) [rt.jar:1.6.0_21] 20:26:24,300 SEVERE [org.jboss.resteasy.core.SynchronousDispatcher] (http-localhost-127.0.0.1-8080-5) failed to execute: com.pelopiti.teamgol.socialnetwork.rest.RestServiceException at com.pelopiti.teamgol.socialnetwork.rest.secured.SignInService.login(SignInService.java:153) [classes:] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_21] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_21] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_21] at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_21] at org.jboss.as.ee.component.ManagedReferenceMethodInterceptorFactory$ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptorFactory.java:72) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:374) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:127) [jboss-as-weld-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:135) [jboss-as-weld-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:36) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:36) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47) [jboss-as-jpa-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:82) [jboss-as-weld-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:53) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInCallerTx(CMTTxInterceptor.java:202) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.ejb3.tx.CMTTxInterceptor.required(CMTTxInterceptor.java:306) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:190) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:59) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:32) [jboss-as-ejb3-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.TCCLInterceptor.processInvocation(TCCLInterceptor.java:45) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:165) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:173) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61) [jboss-invocation-1.1.1.Final.jar:1.1.1.Final] at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:72) [jboss-as-ee-7.1.1.Final.jar:7.1.1.Final] at com.pelopiti.teamgol.socialnetwork.rest.secured.SignInService$$$view61.login(Unknown Source) [classes:] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_21] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_21] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_21] at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_21] at org.jboss.weld.util.reflection.SecureReflections$13.work(SecureReflections.java:264) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInvocation(SecureReflectionAccess.java:137) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.util.reflection.SecureReflections.invoke(SecureReflections.java:260) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.bean.proxy.EnterpriseBeanProxyMethodHandler.invoke(EnterpriseBeanProxyMethodHandler.java:111) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.bean.proxy.EnterpriseTargetBeanInstance.invoke(EnterpriseTargetBeanInstance.java:56) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.jboss.weld.bean.proxy.ProxyMethodHandler.invoke(ProxyMethodHandler.java:105) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at com.pelopiti.teamgol.socialnetwork.rest.secured.SignInService$Proxy$$$_Weld$Proxy$.login(SignInService$Proxy$$$_Weld$Proxy$.java) [classes:] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_21] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_21] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_21] at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_21] at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:155) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.ResourceMethod.invokeOnTarget(ResourceMethod.java:257) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:222) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:211) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.SynchronousDispatcher.getResponse(SynchronousDispatcher.java:525) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:502) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:119) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:208) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:55) [resteasy-jaxrs-2.3.2.Final.jar:] at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:50) [resteasy-jaxrs-2.3.2.Final.jar:] at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.0.Final.jar:1.0.0.Final] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:329) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.jboss.weld.servlet.ConversationPropagationFilter.doFilter(ConversationPropagationFilter.java:62) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.jboss.solder.servlet.exception.CatchExceptionFilter.doFilter(CatchExceptionFilter.java:65) [solder-impl-3.1.0.Final.jar:3.1.0.Final] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.jboss.solder.servlet.event.ServletEventBridgeFilter.doFilter(ServletEventBridgeFilter.java:74) [solder-impl-3.1.0.Final.jar:3.1.0.Final] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at com.ocpsoft.pretty.PrettyFilter.doFilter(PrettyFilter.java:145) [prettyfaces-jsf2-3.3.3.jar:] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at com.pelopiti.teamgol.socialnetwork.view.filters.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:36) [classes:] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) [shiro-web-1.2.1.jar:1.2.1] at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.2.1.jar:1.2.1] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) [jbossweb-7.0.13.Final.jar:] at org.jboss.as.jpa.interceptor.WebNonTxEmCloserValve.invoke(WebNonTxEmCloserValve.java:50) [jboss-as-jpa-7.1.1.Final.jar:7.1.1.Final] at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:153) [jboss-as-web-7.1.1.Final.jar:7.1.1.Final] at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:155) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [jbossweb-7.0.13.Final.jar:] at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:368) [jbossweb-7.0.13.Final.jar:] at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877) [jbossweb-7.0.13.Final.jar:] at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:671) [jbossweb-7.0.13.Final.jar:] at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:930) [jbossweb-7.0.13.Final.jar:] at java.lang.Thread.run(Thread.java:619) [rt.jar:1.6.0_21] If I log the following lines: log.debug("HTTP SESSION" +httpRequest.getSession()); log.debug("HTTP SESSION" +subject.getSession(true)); Where httpRequest is @Context HttpServletRequest httpRequest. The first returns the session object and the last crashes. Could anyone tell me what could happen?	Bug	CLOSED	Major	Invalid	1.2.1	None	Integration: JBoss, (2)	http session	jboss	0	Unassigned	Esteve
SHIRO-397	SHIRO	SingleArgumentMethodEventListenerTest fails	Cannot build trunk due to failure in SingleArgumentMethodEventListenerTest. The attached patch fixes the build.	Bug	CLOSED	Major	Fixed	None	1.3.0	None	None		0	Unassigned	Harald Wellmann
SHIRO-398	SHIRO	Inconsistent name for session validation interval property in different implementations	In the subclasses of SessionValidationScheduler the session validation interval name is inconsistent: In ExecutorServiceSessionValidationScheduler is "interval" whereas in QuartzSessionValidationScheduler is "sessionValidationInterval". The problem would be when switching implementations of the SessionValidationScheduler in the shiro.ini config file, and renaming this property too.	Improvement	OPEN	Minor	Unresolved	1.2.1	2.0.0	None	None		0	Unassigned	Bogdan Flueras
SHIRO-399	SHIRO	Memory leak for invalid sessions	Have a session and wait till gets invalidated via logout/expiration. In a SessionListener implementation for the session the client code can try to clean-up the session (what I originally did: session.removeAttributes() but doing so throws an InvalidSessionException because the session is already invalidated by the time it reaches the listener) This unexpected exception alters the normal flow, hence the code that should delete the session never gets executed, hence the invalidated session data hangs forever either in memory or other storage. This can be avoided with well behaved client code-which knows that it shouldn't try to clean an expired session, but it should be also handled on your side as well and to enclose some code in try/finally blocks.	Bug	CLOSED	Major	Fixed	1.2.1	1.2.2	None	patch patch-with-tes		0	Unassigned	Bogdan Flueras
SHIRO-4	SHIRO	CookieAttribute should support Cookie domain values for Cross Domain Cookies	The cookie.setDomain method should be available via cookieAttribute.setDomain to support cross-domain cookies. Also, the 'comment' and 'version' properties should also be configurable which currently are not as well.	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-40	SHIRO	All committers should add their keys to KEYS	It's not required that all committers be added. Just ones that are going to perform a release.	Task	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Alan Cabrera
SHIRO-400	SHIRO	Allow access to AuthenticationInfo when making decision of it's cache key	Currently it is not possible to utilize generated authentication info in it's key generation when it is written to cache. I'm unable to override the getAuthenticationInfo and cacheAuthenticationInfoIfPossible due to their private and final nature and therefore I suggest that there would be a protected Object getAuthenticationCacheKey(AuthenticationToken token, AuthenticationInfo info) variant which would fall back to the original implementation by default thus being backwards compliant as well. This variant would be used only when writing to the cache. My current workaround options are to mutilate the token itself or duplicate the cache handling at assertCredentialsMatch.	Improvement	OPEN	Minor	Unresolved	1.2.1	None	Authentication (log-in)	None		0	Unassigned	Tuomas Kiviaho
SHIRO-401	SHIRO	Add the ability to pass Provider<ServletContext> to the constructor of ShiroWebModule	At times, the ServletContext may not be available at injector creation time. In these cases, being able to pass a provider would be useful.	Improvement	OPEN	Major	Unresolved	None	None	Integration: Guice	None		0	Jared Bunting	Jared Bunting
SHIRO-402	SHIRO	Add CAS proxy tickets support to CasRealm	Add much fuller CAS support by adding CAS proxy chains and proxy ticket validations via standard CAS https callbacks for proxy tickets. This will enable to easily add features to CasRealm such as ClearPass support: https://github.com/Unicon/cas-addons/wiki/Spring-Security-CAS-ClearPass-Extension https://github.com/Unicon/cas-addons/blob/master/src/main/java/net/unicon/cas/addons/client/springsecurity/ClearpassRetrievingCasAuthenticationProvider.java	Improvement	OPEN	Major	Unresolved	1.2.2	None	None	cas		0	Unassigned	Dmitriy Kopylenko
SHIRO-403	SHIRO	Trunk will not build under JDK 1.7 due to webstart plugin	When building shiro from source (trunk) using JDK 1.7, the following error occurs in the 'samples' module: [ERROR] Failed to execute goal org.codehaus.mojo.webstart:webstart-maven-plugin:1.0-alpha-2:jnlp-inline (default) on project samples-spring-client: Execution default of goal org.codehaus.mojo.webstart:webstart-maven-plugin:1.0-alpha-2:jnlp-inline failed: A required class was missing while executing org.codehaus.mojo.webstart:webstart-maven-plugin:1.0-alpha-2:jnlp-inline: org/codehaus/mojo/webstart/Pack200 Updating to the latest released version of webstart-maven-plugin solves the problem. svn diff attached (and github pull request sent). dev list discussion: http://shiro-developer.582600.n2.nabble.com/Build-failure-samples-spring-client-td7577755.html	Bug	CLOSED	Major	Fixed	None	1.2.2	Sample Apps	None		0	Unassigned	Dan Rollo
SHIRO-404	SHIRO	Migrate from Confluence to ASF CMS for web site content management	ASF Infra is discontinuing Confluence as a web site CMS mechanism on Jan 1, 2012: http://www.apache.org/dev/cmsref.html This issue will track work related to migrating to the ASF svn-based CMS system.	Task	IN PROGRESS	Major	Unresolved	None	None	Web Site	None		0	Les Hazlewood	Les Hazlewood
SHIRO-405	SHIRO	In SimpleAuthorizationInfo, use LinkedHashSet instead of HashSet so that order of roles/permissions is preserved.	This is to support custom permissions schemes whereby the order of evaluation affects the result of the check. See http://mail-archives.apache.org/mod_mbox/shiro-user/201301.mbox/%3CCAAtvD4WDCUXuh3nxUyBXp5%3DvLbEvuKmpYpk5X7RCPrE5%3DfwZHw%40mail.gmail.com%3E	Improvement	OPEN	Major	Unresolved	1.2.1	None	None	None		0	Unassigned	Dan Haywood
SHIRO-406	SHIRO	Redirected to the wrong url after successful login	Navigate to a secure page that requires the user to be logged in, the user is redirected to the login page, after successful login the user is redirected to a primfaces js page. Cause This occurs when the login page is contained within a secured url, if the login page contains any external links e.g. js,css one of these will end up being the saved request. I think this is the wrong behaviour, if the login page is treated as a special case (as it seems to be) then the request that caused it to be invoked should remain as the saved request, subsequent requests for secure content by the login page should not be saved or provided. As this is essentially user mis-configuration it could be prevented by not having the login page as a special case, if it is located at a secure url nothing will happen.	Bug	RESOLVED	Minor	Not A Problem	1.2.1	None	None	None	jboss, hibernate, jsf	0	Unassigned	Alex Edwards
SHIRO-407	SHIRO	AuthenticatingRealm supports() should utilize a flag to enable authentication	AuthorizingRealm is a subclass of Authentication realm. However, there are circumstances where a realm wants to be used for authorization but not authentication. A flag, which can be set in the ini, should be added to disable authentication for things which are authorizing. This flag can then be utilized in the supports() method to handle it.	Improvement	OPEN	Major	Unresolved	None	None	Authentication (log-in)	patch		0	Unassigned	John Vines
SHIRO-408	SHIRO	Specifying memberOf for ActiveDirectoryRealm LDAP search	searchCtls.setReturningAttributes(new String[] {"memberOf"} ); This line will do the search with only returning the information the call in getRoleNamesForUser needs. It's a minor performance improvement.	Improvement	OPEN	Major	Unresolved	None	None	Realms	patch		0	Unassigned	John Vines
SHIRO-409	SHIRO	Need a nossl to match the ssl filter	One great-but not seemingly too difficult- feature would be a nossl filter to match the ssl filter. In my website, I only want the login process to be handled over https, but using ssl filter, the site stays in https since all of the links on those pages will stay relative to the https url. It would be great if a nossl filter exisited that one could define and would switch the port for the urls defined.	New Feature	RESOLVED	Critical	Won't Fix	1.2.1	None	Authentication (log-in)	features		0	Unassigned	Kamal Sharif
SHIRO-41	SHIRO	Need release form for Ki logo		Task	CLOSED	Blocker	Fixed	None	Incubation	None	None		0	Unassigned	Alan Cabrera
SHIRO-410	SHIRO	Clarify the configuration for the form based login	I just started learning Shiro and I struggled a bit to integrate a simple form based login into my web application. My mistake was to exclude the loginUrl from the urls covered by the FormAuthenticationFilter. I assumed the login form had to be accessible to anonymous users, so my configuration looked like this: [main] authc.loginUrl = /account/login.jsp  [urls] /account/login.jsp = anon /account/register.jsp = anon /account/reset.jsp = anon /account/** = authc But this doesn't work because login.jsp must be processed by authc. I would suggest mentioning this detail in the reference manual, that wasn't obvious at first glance (but maybe I didn't read carefully enough).	Improvement	OPEN	Trivial	Unresolved	1.2.1	None	Documentation	None		0	Unassigned	Emmanuel Bourg
SHIRO-411	SHIRO	Authentication not required for welcome-files in web.xml	Sample CAS server configuration as it was described in http://shiro.apache.org/cas.html (Complete configuration sample) doesn't require authentication for welcome files defined in web.xml. INI configuration [urls]: /shiro-cas = casFilter /protected/** = roles[ROLE_USER] /** = anon web.xml: <welcome-file-list> <welcome-file>protected/index.xhtml</welcome-file> </welcome-file-list> When I access URL localhost:8080/shiro-cas/protected/index.xhtml shiro correctly redirects me to CAS server for authentication. But if I access localhost:8080/shiro-cas/, application redirects me to specified welcome file /protected/index.xhtml without authentication.	Bug	RESOLVED	Major	Invalid	1.2.1	None	Authorization (access control) , (2)	cas	windows 7, glassfish, tomcat	0	Unassigned	Peter Bočák
SHIRO-412	SHIRO	Hazelcast-based caching and session clustering	Hazelcast is an Apache-licensed open source clustering and highly scalable data distribution platform for Java. It is an ideal candidate for Shiro's caching needs, including distributed/clustered sessions.	New Feature	RESOLVED	Critical	Fixed	None	1.3.0	Caching	hazelcast		0	Les Hazlewood	Les Hazlewood
SHIRO-413	SHIRO	init() method is not called on class that implements org.apache.shiro.util.Initializable	Classes configured in shiro.ini that implement the "Initializable" interface should automatically have their "init()" methods called. It appears this call is not always occurring. Example below: public class WaffleNegotiateAuthFilter extends BasicHttpAuthenticationFilter implements Initializable { ... private final NegotiateSecurityFilter negotiateFilter; public WaffleNegotiateAuthFilter() { negotiateFilter = new NegotiateSecurityFilter(); } @Override protected void onFilterConfigSet() throws Exception { negotiateFilter.init(getFilterConfig()); } /** Initializes this object. * @throws org.apache.shiro.ShiroException if an exception occurs during initialization. */ public void init() throws ShiroException Unknown macro: { try { super.init(getFilterConfig()); } catch (ServletException e) { throw new ShiroException(e); } } ... I still do not see the init() method being called. See this thread for more details: http://shiro-user.582556.n2.nabble.com/AuthenticatingFilter-lifecycle-when-used-in-urls-td7578146.html	Bug	CLOSED	Critical	Fixed	1.2.1	1.2.2	Configuration	None		0	Unassigned	Dan Rollo
SHIRO-414	SHIRO	Create generic HttpAuthenticationFilter supporting multiple HTTP authentication schemes	The BasicHttpAuthentication filter assumes HTTP's 'Basic' authentication scheme. But HTTP Authentication can support multiple schemes - instead of creating a filter per scheme, like we assume today, it probably makes sense to have a single filter that can support multiple schemes. This issue is to create a general HttpAuthenticationFilter that allows one or more pluggable Schemes. Each Scheme should be able to resolve an authentication token based on the Authorization header value. Existing authc filters (e.g. BasicHttpAuthenticationFilter) can leverage this new concept if necessary - they would just be a filter that comes pre-configured with a single scheme.	New Feature	OPEN	Major	Unresolved	None	2.0.0	Authentication (log-in), Web	None		0	Unassigned	Les Hazlewood
SHIRO-415	SHIRO	isLoginAttempt method in BasicHttpAuthenticationFilter class fails if used in any locale other than English	In isLoginAttempt method in BasicHttpAuthenticationFilter class fails if used in any locale other than English. This happens because at the line String authzScheme = getAuthzScheme().toLowerCase(); , the toLowerCase methods takes i18n into consideration. If the locale of the host is Turkish the string "BASIC" becomes "basıc" but not "basic" (there is the letter "ı" lowercase i without the dot in Turkish) So the comparison returns false. The method fails. The solution is pretty easy: The two lines of the method "isLoginAttempt" in BasicHttpAuthenticationFilter class should be changed as below to make sure it works always the same: protected boolean isLoginAttempt(String authzHeader) { String authzScheme = getAuthzScheme().toLowerCase(Locale.ENGLISH); return authzHeader.toLowerCase(Locale.ENGLISH).startsWith(authzScheme); }	Bug	CLOSED	Minor	Fixed	1.2.1	1.2.2	Realms	i18n	windows 7, netbeans, eclipse	0	Unassigned	Salih Cenap Baydar
SHIRO-416	SHIRO	Getting error while building shiro sample files using Maven	I am getting the following error when I am doing : mvn compile exec:java -e -------------------------------------- [INFO] Error stacktraces are turned on. [INFO] Scanning for projects... [INFO] [INFO] ------------------------------------------------------------------------ [INFO] Building Apache Shiro :: Samples :: Quick Start 1.2.1 [INFO] ------------------------------------------------------------------------ [INFO] [INFO] — buildnumber-maven-plugin:1.0-beta-4:create (default) @ samples-quickstart — Downloading: http://repo.maven.apache.org/maven2/org/apache/maven/scm/maven-scm-provider-cvsexe/1.2/maven-scm-provider-cvsexe-1.2.pom [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 1.489s [INFO] Finished at: Fri Feb 15 16:33:39 IST 2013 [INFO] Final Memory: 6M/14M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4:create (default) on project samples-quickstart: Execution default of goal org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4:create failed: Plugin org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4 or one of its dependencies could not be resolved: Failed to collect dependencies for org.codehaus.mojo:buildnumber-maven-plugin:jar:1.0-beta-4 (): Failed to read artifact descriptor for org.apache.maven.scm:maven-scm-provider-cvsexe:jar:1.2: Could not transfer artifact org.apache.maven.scm:maven-scm-provider-cvsexe:pom:1.2 from/to central (http://repo.maven.apache.org/maven2): Access denied to: http://repo.maven.apache.org/maven2/org/apache/maven/scm/maven-scm-provider-cvsexe/1.2/maven-scm-provider-cvsexe-1.2.pom -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4:create (default) on project samples-quickstart: Execution default of goal org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4:create failed: Plugin org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4 or one of its dependencies could not be resolved: Failed to collect dependencies for org.codehaus.mojo:buildnumber-maven-plugin:jar:1.0-beta-4 () at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:225) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59) at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183) at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320) at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156) at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537) at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196) at org.apache.maven.cli.MavenCli.main(MavenCli.java:141) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290) at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409) at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352) Caused by: org.apache.maven.plugin.PluginExecutionException: Execution default of goal org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4:create failed: Plugin org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4 or one of its dependencies could not be resolved: Failed to collect dependencies for org.codehaus.mojo:buildnumber-maven-plugin:jar:1.0-beta-4 () at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:82) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209) ... 19 more Caused by: org.apache.maven.plugin.PluginResolutionException: Plugin org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4 or one of its dependencies could not be resolved: Failed to collect dependencies for org.codehaus.mojo:buildnumber-maven-plugin:jar:1.0-beta-4 () at org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver.resolve(DefaultPluginDependenciesResolver.java:211) at org.apache.maven.plugin.internal.DefaultMavenPluginManager.createPluginRealm(DefaultMavenPluginManager.java:353) at org.apache.maven.plugin.internal.DefaultMavenPluginManager.setupPluginRealm(DefaultMavenPluginManager.java:321) at org.apache.maven.plugin.DefaultBuildPluginManager.getPluginRealm(DefaultBuildPluginManager.java:175) at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:78) ... 20 more Caused by: org.sonatype.aether.collection.DependencyCollectionException: Failed to collect dependencies for org.codehaus.mojo:buildnumber-maven-plugin:jar:1.0-beta-4 () at org.sonatype.aether.impl.internal.DefaultDependencyCollector.collectDependencies(DefaultDependencyCollector.java:258) at org.sonatype.aether.impl.internal.DefaultRepositorySystem.collectDependencies(DefaultRepositorySystem.java:308) at org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver.resolve(DefaultPluginDependenciesResolver.java:199) ... 24 more Caused by: org.sonatype.aether.resolution.ArtifactDescriptorException: Failed to read artifact descriptor for org.apache.maven.scm:maven-scm-provider-cvsexe:jar:1.2 at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.loadPom(DefaultArtifactDescriptorReader.java:296) at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.readArtifactDescriptor(DefaultArtifactDescriptorReader.java:186) at org.sonatype.aether.impl.internal.DefaultDependencyCollector.process(DefaultDependencyCollector.java:412) at org.sonatype.aether.impl.internal.DefaultDependencyCollector.collectDependencies(DefaultDependencyCollector.java:240) ... 26 more Caused by: org.sonatype.aether.resolution.ArtifactResolutionException: Could not transfer artifact org.apache.maven.scm:maven-scm-provider-cvsexe:pom:1.2 from/to central (http://repo.maven.apache.org/maven2): Access denied to: http://repo.maven.apache.org/maven2/org/apache/maven/scm/maven-scm-provider-cvsexe/1.2/maven-scm-provider-cvsexe-1.2.pom at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:538) at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:216) at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifact(DefaultArtifactResolver.java:193) at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.loadPom(DefaultArtifactDescriptorReader.java:281) ... 29 more Caused by: org.sonatype.aether.transfer.ArtifactTransferException: Could not transfer artifact org.apache.maven.scm:maven-scm-provider-cvsexe:pom:1.2 from/to central (http://repo.maven.apache.org/maven2): Access denied to: http://repo.maven.apache.org/maven2/org/apache/maven/scm/maven-scm-provider-cvsexe/1.2/maven-scm-provider-cvsexe-1.2.pom at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$4.wrap(WagonRepositoryConnector.java:951) at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$4.wrap(WagonRepositoryConnector.java:939) at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$GetTask.run(WagonRepositoryConnector.java:669) at org.sonatype.aether.util.concurrency.RunnableErrorForwarder$1.run(RunnableErrorForwarder.java:60) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) at java.lang.Thread.run(Thread.java:722) Caused by: org.apache.maven.wagon.authorization.AuthorizationException: Access denied to: http://repo.maven.apache.org/maven2/org/apache/maven/scm/maven-scm-provider-cvsexe/1.2/maven-scm-provider-cvsexe-1.2.pom at org.apache.maven.wagon.shared.http.AbstractHttpClientWagon.fillInputData(AbstractHttpClientWagon.java:592) at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116) at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88) at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:61) at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$GetTask.run(WagonRepositoryConnector.java:601) ... 4 more [ERROR] [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR] [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginResolutionException	Question	OPEN	Major	Unresolved	1.2.1	None	None	None	ubuntu, maven	0	Unassigned	Big Boss
SHIRO-417	SHIRO	allow basic templating in permission annotation matching parameters	Here the idea:    @RequiresPermissions("{name}:foo")     public void retrieve(final @PermissionParam("name") String name) {         ...     }	New Feature	OPEN	Major	Unresolved	None	None	None	patch patch-with-tes		0	Unassigned	Romain Manni-Bucau
SHIRO-418	SHIRO	Javadoc typo in JdbcRealm.SaltStyle	The javadocs for JdbcRealm.SaltStyle have this line: <li>CRYTP - password hashes are stored in in the database unix crypt format.</li> It should be "CRYPT"	Bug	RESOLVED	Trivial	Fixed	1.2.1	1.2.2	Authentication (log-in)	None		0	Unassigned	Matt Bishop
SHIRO-419	SHIRO	Improve Shiro OSGI support for accessing 3rd Party bundles from INI	Follow-up ticket from SHIRO-389	Improvement	OPEN	Major	Unresolved	None	1.4.1	None	OSGi		0	Francois Papon	Chris Geer
SHIRO-42	SHIRO	Remove the default realm	Default realms are dangerous. The user should have to specify something, even if we make it extremely easy. (e.g. setting a single property to enable the default realm)	Task	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-420	SHIRO	Allow a configurable strategy to backup runAs() informations	Subject.runAs() saves current subject principal in a stack into user session ; this saved information will be popped by Subject.releaseRunAs(). Thus Subject.runAs() is not usable with the noSessionFilter. Use of session may not always be desirable (in case of stateless web application where no session should be created). Alternatively it would be interesting to be able to configure the way runAs() informations are saved. A RunAsManager (or something similar) in the SecurityManager that could be consulted for runAs operations. Then you could plug in a persistence strategy, whether it be via the session or something else.	Improvement	OPEN	Major	Unresolved	1.2.1	None	Configuration	None		0	Unassigned	Maison
SHIRO-421	SHIRO	Unable to set long timeouts on HttpServletSession	When I set the timeout on a org.apache.shiro.web.session.HttpServletSession to a large value (30 days == 2592000000 milliseconds) using the setTimeout(long) method and then read the timeout with the getTimeout() method, I get -1702967296. I would like to be able to do this in order to have a long-lasting session for users who select "remember me" when logging in to a web app. I think this may have something to do with the fact that the getTimeout() method is using integer multiplication before converting the javax.servlet.http.HttpSession's max inactive interval from an int to a long.	Bug	RESOLVED	Major	Fixed	1.2.1	1.3.0	Session Management	patch patch-with-tes		0	Unassigned	Andrew Pitman
SHIRO-422	SHIRO	Reference CDI Managed Beans from INI files	In Java EE 6, CDI is the default dependency mechanism, which is not currently integrated with Shiro's lightweight DI using INI files. Example: [main] myRealm = com.example.MyRealm securityManager.realms = $myRealm In the MyRealm class, it would be natural to @Inject a UserDAO, but this does not work, since the myRealm instance is directly created by Shiro and not managed by the CDI BeanManager. Requirement: Find a way to use CDI managed beans in INI files.	New Feature	RESOLVED	Major	Duplicate	1.2.1	None	Integration: JEE	patch patch-with-tes		0	Unassigned	Harald Wellmann
SHIRO-423	SHIRO	INI ReflectionBuilder should not wrap reference values	When injecting a property whose setter expects say a Set, special handling is performed (split string with comma and build a set before injection ; List, Map, byte[]... types are also handled with special code). But this is performed before references are resolved, thus this does not work if myUrlsSetRef is already a Set : obj.urlsSet = $myUrlsSetRef ReflectionBuilder.applyProperty() builds a Set containing a single element $myUrlsSetRef, then resolves $myUrlsSetRef : this wraps the referenced set into a new set with 1 element. Workaround : create a fake setter with Object argument type.	Bug	CLOSED	Major	Fixed	1.2.1	1.2.2	Configuration	None		0	Unassigned	Maison
SHIRO-424	SHIRO	INI should support OGNL notation at the right of = sign	When using references in INI, it is not always possible to navigate graph from the reference : $ref1.prop1 = $ref2 works $ref1.prop1 = $ref2.prop2 does not work	Improvement	OPEN	Major	Unresolved	1.2.1	None	Configuration	None		0	Unassigned	Maison
SHIRO-425	SHIRO	Ability to set a property value with an enum in shiro.ini file	If I try to set an object property value with an enum (myObject.p = ENUM_VALUE) in a shiro.ini file, I get an exception : org.apache.shiro.config.ConfigurationException: Unable to set property 'p' with value [ENUM_VALUE] on object of type myObject	Improvement	OPEN	Minor	Unresolved	1.2.1	None	Configuration	patch patch-with-tes		0	Unassigned	Jérôme Leleu
SHIRO-426	SHIRO	Update Shiro Feature File With New War Feature File Name (or remove the war feature dependency)	In the next version of Karaf (Karaf 3.0.0), Karaf will use the http/war features from Pax Web. These features will be called pax-http/pax-war instead of http/war. Thus it would be good if the shiro feature file was updated to depend on pax-war instead of war, or (even better) remove the war dependency entirely.	Improvement	OPEN	Minor	Unresolved	1.2.1	None	None	patch		0	Unassigned	Gareth Collins
SHIRO-427	SHIRO	No log when have exception		Improvement	CLOSED	Major	Duplicate	1.2.1	None	Authentication (log-in)	None		0	Unassigned	Ha Duy Dinh
SHIRO-428	SHIRO	AuthorizingRealm "no cache" logging should be at DEBUG level, not INFO, OR is should log only once	The org.apache.shiro.realm.AuthorizingRealm contains the following: log.info("No cache or cacheManager properties have been set. Authorization cache cannot " + "be obtained."); When running without a cache manager, this spams the log files when running at INFO level. This should either: 1) Be logged at DEBUG level, or 2) Be logged only once at INFO level.	Improvement	RESOLVED	Trivial	Fixed	1.2.1	1.3.0	Authorization (access control)	None		0	Unassigned	Raman Gupta
SHIRO-429	SHIRO	perms filter parsing is too sensitive to a trailing space	I have a filter definition similar to: /some/url/** = someFilter, anotherFilter, perms["perm1", "perm2"] The above does not work – the parser concatenates perm1 and perm2 into one permission, and therefore denies the request. The "fix" is to add a space before the trailing "]" i.e.: /some/url/** = someFilter, anotherFilter, perms["perm1", "perm2" ] This then works fine. Ouch! As an aside, the trace level logging logs all sorts of stuff to the logs, but fails to log anything from the perms filter explaining why the request was being denied. This is weird, to say the least.	Bug	CLOSED	Major	Fixed	1.2.0, 1.2.1	1.2.2	Configuration	None		0	Unassigned	Raman Gupta
SHIRO-43	SHIRO	Ignore Eclipse folders & files and mvn target folders from svn	Easier to create patches and commit if Eclipse configuration files and folders (for Eclipse) and mvn target folders are ignored. The following patch will ignore them in all sub modules, place in trunk.	Task	CLOSED	Trivial	Fixed	None	1.0.0	None	None		0	Les Hazlewood	Kalle Korhonen
SHIRO-430	SHIRO	Support for multiple session timeouts	Quoting from the mailing list (http://grokbase.com/t/shiro/user/128h0pe5xv/support-for-multiple-session-timeouts) as my requirement is exactly the same: > I'm trying to support an app that has multiple session timeouts depending on > how the users interact with it. One way is to use a mobile app, and the > other is a web-based version. Both access the same backend using AJAX, and I > use Shiro to authenticate those queries and handle the session timeouts. > Because the mobile app will only be used on locked mobile phones, I would > like to have the session timeout to be substantially longer than would be > acceptable for the web version (several hours v. ~15 minutes). Lez was kind enough to suggest several approaches to this in his post on the mailing list: custom servlet filter (not an option for me here) add a session listener subclassing session manager In the default configuration the session listener receives only a SimpleSession object - a change to the timeout value is not persisted back to the session store (redis in my case). So subclassing the session manager currently seems to be the only option, the problem being the call to "applyGlobalSessionTimeout" after the session has been created. Lez suggested to have sth like a "sessionTimeoutResolver" in an upcoming version, but this might not really be necessary as a custom session factory is capable of doing this. This is also the approach I have been taking before realizing that my changes get overwritten by the the "applyGlobalSessionTimeout" that overwrites my changes. The session storage sees this access pattern (with custom factory and listener): session factory creates session with custom timeout applyGlobal reads session back from store and sets the default timeout listener receives simplesession object with default timeout, tries to change but change is persisted From my point of view the easiest way would be to apply the global session timeout in the session factory, allowing custom factories to change timeouts as they see fit. Is this a viable alternative approach, or am I missing something here?	Improvement	OPEN	Minor	Unresolved	1.2.1	None	Session Management	factory session time		0	Unassigned	Jochen Munz
SHIRO-431	SHIRO	please use git ignore	please use git ignore https://github.com/apache/shiro/pull/3 FYI: there are PR there pending for 9 month. this might create impression you do not care about community	Bug	CLOSED	Major	Fixed	None	1.2.2	None	None		0	Unassigned	Andrei Pozolotin
SHIRO-432	SHIRO	Make shiro-tools-hasher-cli available in maven	shiro-tools-hasher-cli is as it sais on the download page "not intended to be used as a Maven/program dependency", but I think we have one use case where it is. We build our application rpm package using Maven and are going to include the hashing cli tool in it. Currently we have to set individual dependencies to shiro-tools-hasher and its dependencies in the rpm packaging pom. It would simplify things if we were able to depend on shiro-tools-hasher-cli directly.	Improvement	OPEN	Minor	Unresolved	1.2.1	None	None	None		0	Unassigned	André Borgqvist
SHIRO-433	SHIRO	Add JSF EL Functions	The attached patch will provide common Shiro functions as EL functions that can be used within JSF components (e.g. in the "rendered" attribute). It provides about the same functionality as the recently merged JSF tags but this time as EL functions that are sometimes more convenient to use than the tags.	New Feature	OPEN	Major	Unresolved	1.3.0	None	None	patch	jsf	0	Unassigned	Thorsten Kunz
SHIRO-434	SHIRO	Improve design of ShiroFilterFactoryBean	Currently ShiroFilterFactoryBean implements both BeanPostProcessor as well as FactoryBean. This is unfortunate as BeanPostProcessors are instantiated extremely early in the lifecycle of a Spring Application context. This means, dependencies needed to be wired into the BPP instance (esp. the SecurityManager and it's transitive dependencies) are already looked up at a time when potentially not even all BeanPostProcessors are instantiated. In general, BeanPostProcessors should not have general dependencies on application components as this potentially triggers premature intialization of application components which can cause subtle issues with dependency resolution, other BeanPostProcessors not being applied etc. (see [0] as an example). Looking at the implementation of ShiroFilterFactoryBean it seems the implementation of the BeanPostProcessor interface can be extracted into a separate class so that it doesn't trigger the initialization of the SecurityManager on BeanPostProcessor instantiation. The BPP instance can then be wired to the factory bean or looked up through the BeanFactory (through implementing BeanFactoryAware). This would delay the initialization of the SecurityManager (which seems to be triggering the transitive dependency lookups) until the FactoryBean implementation is initialized. [0] https://jira.springsource.org/browse/DATAJPA-335	Improvement	OPEN	Major	Unresolved	1.2.1	None	Integration: Spring	None		0	Les Hazlewood	Oliver Drotbohm
SHIRO-435	SHIRO	SecurityManager is not a singleton in ShiroWebModule	While integrating Shiro to our guice based webapp I've noticed something strange. The module setup is pretty much the same as the example in the Guice page of Shiro's documentation. Only extra code is that I'm exposing the WebSecurityManager like this: public class AuthModule extends ShiroWebModule { public AuthModule(ServletContext servletContext) { super(servletContext); } @Override @SuppressWarnings("unchecked") protected void configureShiroWeb() { IniRealm iniRealm = new IniRealm(Ini.fromResourcePath("classpath:shiro.ini")); bindRealm().toInstance(iniRealm); expose(WebSecurityManager.class); } } A guice injected SecurityManager instance is not the same as the cached static SecurityManager in SecurityUtils. @Path("/Ping") @Singleton public class PingResource { @Inject SecurityManager sec; @Inject WebSecurityManager websec; @GET public void ping() { SecurityManager man = SecurityUtils.getSecurityManager(); assert(man == websec); assert(man == sec); } } First assert passes, second fails. Debugger confirms that there are 2 instances in memory, both of them are of type DefaultWebSecurityManager but only the WebSecurityManager instance works. Any meaningful operation on "sec" will fail (like an authorization check). I think the problem might be the double binding of SecurityManager(s). One is bound in ShiroModule another is in ShiroWebModule: in ShiroModule: public void configure() { // setup security manager bindSecurityManager(bind(SecurityManager.class)); in ShiroWebModule: protected final void configureShiro() { .... bindWebSecurityManager(bind(WebSecurityManager.class)); Both of these methods are running at init time, hence the duplicated singletons. It might be better if ShiroWebModule would overrinde the standard configure() method to avoid this double-binding.	Bug	RESOLVED	Major	Fixed	1.2.1	1.3.0	Integration: Guice	patch patch-with-tes		0	Jared Bunting	Laszlo Ferenczi
SHIRO-436	SHIRO	Add EnvironmentLoader finalizeEnvironment method	Add a finalizeEnvironment protected method to EnvironmentLoader so subclasses can cleanup resources if desired. Original request: https://issues.apache.org/jira/browse/SHIRO-387?focusedCommentId=13476052&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13476052	New Feature	RESOLVED	Major	Fixed	None	1.3.0	None	None		0	Unassigned	Les Hazlewood
SHIRO-437	SHIRO	WildcardPermission: conformed toString	Attached patch enhances SHIRO-75, updating WildcardPermission.toString() to return conform wildcard expression, in order to satisfy assertions like: WildcardPermission p1 = new WildcardPermission("foo,bar:baz:*"); assert p1.equals(new WildcardPermission(p1.toString());	Improvement	RESOLVED	Trivial	Fixed	1.3.0	1.3.0	Authorization (access control)	patch patch-with-tes		0	Unassigned	picpoc
SHIRO-438	SHIRO	WilcardPermission: any token	Attached is a proposal patch to add another special token in the WildcardPermission, the any token '?'. When granting the any token on a permission level, it behaves exactly as the wildcard, and implies everything: any -> any any -> wildcard any -> literals When querying the any token on a permission level, it is implied by everything: any -> any wildcard -> any literals -> any Thus, it is quite similar to say: i don't care about the detail of this level, it's fine if the user is granted something on it. Typical use case is when using shiro permission to perform some fined-grained access control. For instance to give read access on newsletter 13 to anyone who has been granted the access to read, edit or delete it. Instead of checking for: newsletter:view:13 or newsletter:edit:13 or newsletter:delete:13 we can simply check for: newsletter:?:13	New Feature	RESOLVED	Minor	Incomplete	1.3.0	None	Authorization (access control)	features patch		0	Unassigned	picpoc
SHIRO-439	SHIRO	Provide a full programmatic sample of Shiro Web Application	Currently, It is almost impossible to using Shiro Filter programmatically. A full web application based on Jetty would be great to understand internal parts of Shiro. Ini configuration is great in terms of simplicity but real world examples can be far complicated than ini configurations. I will be really glad If this new sample application will provide a new custom Realm and Session Manager.	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Cemalettin Koç
SHIRO-44	SHIRO	All committers should add their ids to STATUS	Please perform this task and pass this issue along	Task	OPEN	Major	Unresolved	None	None	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-440	SHIRO	Improve Permission creation performance	On complex systems, where many permissions (and complex recursive roles exists), the generic WildcardPermissionResolver creates a LOT of different instances even of same String permission representations. This might cause spikes in heap usage, but also eats CPU (as WildcardPermission constructor does a lot of string and collection operations too). One possible solution would be "instance cache" of permissions, something like used in Nexus: https://github.com/sonatype/security/blob/master/security-system/src/main/java/org/sonatype/security/authorization/PermissionFactory.java https://github.com/sonatype/security/blob/master/security-system/src/main/java/org/sonatype/security/authorization/WildcardPermissionFactory.java https://github.com/sonatype/security/blob/master/security-system/src/main/java/org/sonatype/security/authorization/InstanceCachingPermissionFactory.java Using instance cache, we see tremendous improvements in heap usage, but also speed improvements as WildardPermission creation, as mentioned above, is (well, somewhat) costly. It might be that Nexus uses too granular perms (hence deal with a lot of permissions at once), but still this abstraction with these two implementations would be welcome in Shiro core. Also, it opens gates for future improvements in this area, without disturbing the rest of codebase.	Improvement	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Cservenak, Tamas
SHIRO-441	SHIRO	Explain how "Remember Me" works under the hood and that you might want to use a custom cipher key	Neither the tutorial (http://shiro.apache.org/tutorial.html (section "Using Shiro")) nor the the reference documentation (http://shiro.apache.org/authentication.html#Authentication-Rememberedvs.Authenticated (chapter "Authentication")) give any hints that without a custom cipher key the - publicly available - default key will be used (defined in http://grepcode.com/file/repo1.maven.org/maven2/com.ning/metrics.collector/1.2.1/org/apache/shiro/mgt/AbstractRememberMeManager.java/). Especially the statement in the tutorial is questionable: "this is all you have to do to support 'remember me' (no config - built in!)". While true and fairly obvious to advanced developers the potential security implications should be better explained.	Documentation	OPEN	Major	Unresolved	1.2.1	None	Documentation, (1)	None		0	Unassigned	Marian Seitner
SHIRO-442	SHIRO	CAS client fails with multi-valued SAML attributes	When using org.apache.shiro.cas.CasRealm, if the SAML returned by CAS contains multiple attributes of the same name (e.g. roles?), CasRealm blows up in doGetAuthorizationInfo String value = attributes.get(attributeName); with java.lang.ClassCastException: java.util.ArrayList cannot be cast to java.lang.String This is because the org.jasig.cas.client.validation.Saml11TicketValidator is populating the attributes in the principal as follows: personAttributes.put(samlAttribute.getName(), values.size() == 1 ? values.get(0) : values); See attached patch for a fix	Bug	OPEN	Major	Unresolved	1.2.1	None	Authorization (access control)	patch		0	Unassigned	Art O Cathain
SHIRO-443	SHIRO	SessionValidationScheduler created multiple times, enabling it is not thread safe	DefaultSessionManager superclass AbstractValidatingSessionManager enables SessionValidatorScheduler on-demand, not on creation. Validation is enabled by any of the two SessionManager methods: start(context) or getSession(key). But none of the methods has proper synchronisation around critical methods like org.apache.shiro.session.mgt.AbstractValidatingSessionManager.enableSessionValidation() or org.apache.shiro.session.mgt.AbstractValidatingSessionManager.enableSessionValidationIfNecessary(). Problem is that in case of parallel incoming requests (like two concurrent HTTP request in web application), two instances (or more than one) instances of SessionValidationScheduler will be created (which are by default ExecutorServiceSessionValidationScheduler). This results in multiple threads competing around for session validation. While this does NOT cause problems in Shiro operations (multiple threads validating sessions is synchronised just fine), it looks very awkward in thread dumps and logs, and is usually source of confusion or "false alarms". Repository that contains sample code (with possible workaround for Shiro integrators): https://github.com/cstamas/shiro-session-validation-thread Note: I did not fiddle to properly assert, but when you run from CLI and inspect the thread dump, you can see how SessionManagerTest ends up with 3 threads (as many concurrent session requests are made), on my system named as "Thread-0", "Thread-1" and "Thread-2". While the SessionManagerWorkaroundTest creates only "Thread-0". If running from IDE, don't forget to run the tests in separate JVMs, otherwise the daemon threads will remain from one test during execution of another!	Bug	CLOSED	Major	Fixed	1.2.1	1.2.5	Session Management	None		0	Unassigned	Cservenak, Tamas
SHIRO-444	SHIRO	Rewrite AuthorizingRealm, and configure the cacheManager throws an exception	Rewrite AuthorizingRealm, and configure the cacheManager throws an exception cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager cacheManager.cacheManagerConfigFile = classpath:ehcache-shiro.xml securityManager.cacheManager = $cacheManager shiroDbRealm = com.earlybird.aloha.ext.shiro.MyShiroRealm securityManager.realms = $shiroDbRealm sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager sessionDAO.activeSessionsCacheName = shiro-activeSessionsCache sessionManager.sessionDAO = $sessionDAO securityManager.sessionManager = $sessionManager	Bug	RESOLVED	Major	Cannot Reproduce	1.2.1	None	Integration: JEE	cacheManager realm	mac os x, java 1.6	0	Unassigned	Leon Lee
SHIRO-445	SHIRO	Mechanism needed to secure passwords in shiro.ini	There should be a mechanism to secure passwords stored in shiro.ini for accessing databases or other data sources, as described in this Shiro user forum post: http://shiro-user.582556.n2.nabble.com/How-to-secure-database-password-in-shiro-ini-td7578763.html A flexible and extensible approach should allow for passwords to be stored in other INI or properties files, JNDI resources, databases, key stores, key servers, or other data sources. Passwords might be encrypted using a master key, which could likewise be stored in various data sources. I already have an initial patch prepared that allows for passwords to be stored (plaintext or encrypted with a master key) in other INI files, similar to a shadow password file. This can be further extended to use other data sources as needs arise.	New Feature	IN PROGRESS	Major	Unresolved	1.2.2	None	Authentication (log-in), (1)	patch		0	Brian Demers	Richard J. Barbalace
SHIRO-446	SHIRO	Login/logout throws UnknownSessionException for a user whose previous session is expired	After a user session is expired logout attempt is causing an UnknownSessionException. This is happening even for every subsequent login attempt for the same user. The user cannot be able to login again untill the server is restarted.	Bug	OPEN	Major	Unresolved	1.2.1, 1.2.2	None	Authentication (log-in)	None		0	Unassigned	Dewan Mohammad Mokse
SHIRO-447	SHIRO	Broken Javadoc links	All the javadoc links in the site seems to be broken. Eg. http://shiro.apache.org/static/current/apidocs/org/apache/shiro/authc/AuthenticationException.html It is especially an irritant for new adopters going through the documentation.	Bug	CLOSED	Major	Fixed	None	1.2.2	Web Site	javadoc		0	Unassigned	Dhrubajyoti Gogoi
SHIRO-448	SHIRO	CasRealm not cooperating with other realms: Expects all principals to be originating from itself	in CasRealm.doGetAuthorizationInfo(...): // retrieve user information SimplePrincipalCollection principalCollection = (SimplePrincipalCollection) principals; List<Object> listPrincipals = principalCollection.asList(); Map<String, String> attributes = (Map<String, String>) listPrincipals.get(1); But if I use multiple realms of course the principal could stem from one of the other realms and therefore of course be without parameters and causes an IndexOutOfBoundsException in line 182: Map<String, String> attributes = (Map<String, String>) listPrincipals.get(1); Workaround: Override doGetAuthorizationInfo in own subclass and fix.	Bug	OPEN	Major	Unresolved	1.2.0, 1.2.1, 1.2.2	None	Realms	None		0	Unassigned	Georg Koester
SHIRO-449	SHIRO	Instance Level Role	Take a project management application for example. User 1 is the Project Manager of Project 1 User 2 is the Project Manager of Project 2 Using the existing instance level permission, we have following for each user: user1 -> project:edit,delete,addMember:1 user2 -> project:edit,delete,addMember:2 Here the Role "Project Manager" is meaningless, because in this scenario the role is also instance specific. You can not simple assign a Project Manager role to a user. So if we have instance level role, then we can model our authentication data as: user1 -> project:manager:1 user2 -> project:manager:2 project:manager -> project:edit project:delete project:addMember ......	New Feature	OPEN	Major	Unresolved	None	None	Authorization (access control)	None		0	Unassigned	Deng Zhi Cheng
SHIRO-45	SHIRO	In the quick start guide add information about default realm, based on default-jsecurity-users.properties	For new user it is nor clear where the users mentioned in quick start guide come from, so it should be updated to make it clear: > Regarding default users settings - that's interesting. I found the > properties file, it is actually called > org\jsecurity\realm\text\default-jsecurity-users.properties. This can be > useful for jumpstarting, but it should be also clearly explained that it is > installed by deafult! Please at least update the QuickStart article on > JSecurity page to mention this fact - I was really puzzled how it can work > without defining users and roles somewhere!	Task	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Grzegorz Borkowski
SHIRO-450	SHIRO	Create a new tag <hasAnyPermission> on the shiro-web project	In the Shiro web page: http://shiro.apache.org/web.html#Web-JSP%2FGSPTagLibrary I found that there is a <hasAnyRole> tag but NO <hasAnyPermission> tag. I am wondering if there is a plan to implement the <hasAnyPermission> tag.	Improvement	OPEN	Minor	Unresolved	1.2.1	None	Authorization (access control) , (1)	patch		0	Unassigned	Harry Chan
SHIRO-451	SHIRO	Shiro with spring: Remember me with custom cipher key: need custom property editor to set base64 encoded key	While using Shiro with spring, if you are specifing a custom cipher key via spring config file. In spring code the bytes are set in the rememberme manager using string.getBytes. This does not conform to Base64 encoding, with which the key is encoded in the first place. Documentation should include this. More information on the issue here: http://amitsmittal.blogspot.in/2013/07/shiro-with-spring-remember-me-custom.html	Documentation	OPEN	Major	Unresolved	1.2.1	None	RememberMe	None		0	Unassigned	Amit Mittal
SHIRO-452	SHIRO	SimpleSession serialization failing	We cache SimpleSession in EhCache which is configured with Overflow to Disk and an LRU eviction policy. When the cache is full, EhCache will attempt to evict a session from the Disk Storage to reclaim space. To evict the `SimpleSession`, EhCache will attempt to deserialize the eveicted session first. From time to time, the deserialization of the `SimpleSession` fails. When that happens the system is locked, since no additional session can be created. `SimpleSession` has a custom serialization mechanism that calculates a bit mask which indicates which fields of the `SimpleSession` contain values. This bitMask is serialized first (as a Short) then the fields containing values. When deserialization is failing, the bitMask indicates that the `attributes` Map contains data, however no `attributes` have actually been serialized and the deserialization fails with a `java.io.OptionalDataException`. The discrepancy is very likely due to `attributes` being a non synchronized Map: the SimpleSession is created on a Servlet thread, however the serialization to Disk is performed by EhCache on one of its cache management threads. SimpleSession fields should likely be marked as volatile and the Map should be a Synchronized Map or SimpleSession should be made immutable.	Bug	OPEN	Major	Unresolved	1.2.1	None	Caching , (1)	None	java 1.6, ehcache	0	Unassigned	Bruno GRIEDER
SHIRO-453	SHIRO	Provide Sonar analysis for Shiro source code	I noticed Shiro isn't listed on the Apache Sonar site: https://analysis.apache.org/ . Sonar lets people quickly know where the code could use improvement, helpful for those hoping to start submitting patches (like me, if I can get some time in.) Could someone on the Shiro team submit a JIRA to INFRA to have Sonar activated for Shiro? Thanks!	Improvement	CLOSED	Minor	Duplicate	None	None	Web Site	None		0	Unassigned	Glen Mazza
SHIRO-454	SHIRO	Provide a way to logout a user without destroying the http session	I am using Shiro together with Vaadin, but the following should be true for all GWT based rich clients. If you are using these kind of frameworks, you mostly want to handle login and logout within the application itself. If this is the case, you absolutely don't want that a logout destroys the http session. Because that will alert the user that the session is gone and will force the user to reload the whole application and starting from scratch. Please: Just give me the possibility to do a user logout without ruining the http session. As a workaround I inherited from DefaultWebSecurityManager and overwrote the logout method to do everything but the http session invalidation. But that's a lot of cut and paste code and it could be easily provided by introducing a configurable setting or parameter for the logout.	Improvement	OPEN	Major	Unresolved	1.2.1	None	Authentication (log-in), (1)	None		0	Unassigned	Bla Bla
SHIRO-455	SHIRO	Allowing to cache WildcardPermission in WildcardPermissionResolver class	Hello, I am benching Shiro, tahnks this method: public void bench() { final Subject subject = SecurityUtils.getSubject(); subject.login(new UsernamePasswordToken(LOGIN+i, PWD)); for (int ind = 0; ind < 100000; ind++) { // a lot of authorizations assertTrue(subject.isPermitted("medias:album:read")); } subject.logout(); } I see that I waste my time in the methode WildCardPermissionResolver which create a new instance of permission each time even if it is the same String in parameter. I added a map which allows to cache WildcardPermission. You can find in attachement the patch. PS : the cache for authorisation is activated: cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager securityManager.cacheManager = $cacheManager Regards, Thibault	Improvement	OPEN	Major	Unresolved	1.2.1, 1.2.2	None	Authorization (access control) , (1)	features patch		0	Unassigned	Thibault Tigeon
SHIRO-456	SHIRO	A way to limit the numer of current sessons with the same credentials	A usual requirement is to limit the number of users that can be simultaneously logged in using the same credentials (or invalidate previous sessions) Even you can find a possible implementation in https://kenai.com/projects/shirospring I think that it is important to add it as standard As a reference, spring security implements it with the max-sessions="1" attribute <security:concurrent-session-control max-sessions="1" exception-if-maximum-exceeded="true" expired-url="/login" />	New Feature	OPEN	Minor	Unresolved	1.2.1	None	Authentication (log-in)	features		0	Unassigned	JD Evora
SHIRO-457	SHIRO	Login without static VM security manager cause exception in debug	I have run into a possible issue with regards to using the Subject login(use,pwd) api when the SecurityUtils SecurityManager has not been set (SecurityUtils.setSecurityManager(secMgr). Subject currentUser = new Subject.Builder(securityManager).buildSubject(); UsernamePasswordToken token = new UsernamePasswordToken(userName, password); currentUser.login(token); The code above results in an exception (this exception is not the end of the world as later in the code the current default security manager will get set so all should be ok): 15:31:01.325 [main] DEBUG o.a.s.s.s.DefaultSubjectContext - No SecurityManager available via SecurityUtils. Heuristics exhausted. org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton. This is an invalid application configuration. at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123) ~[shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.DefaultSubjectContext.resolveSecurityManager(DefaultSubjectContext.java:106) ~[shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.mgt.DefaultSecurityManager.ensureSecurityManager(DefaultSecurityManager.java:411) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:333) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:183) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:283) [shiro-core-1.2.1.jar:1.2.1] at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256) [shiro-core-1.2.1.jar:1.2.1] I think the issue rises from line 1 of the following code in DefaultSecurityManager: protected Subject createSubject(AuthenticationToken token, AuthenticationInfo info, Subject existing) { SubjectContext context = createSubjectContext(); <-- Results in a context with no security manager context.setAuthenticated(true); context.setAuthenticationToken(token); context.setAuthenticationInfo(info); if (existing != null) { context.setSubject(existing); } return createSubject(context); <-- This complains about no security manager }  Could the DefaultSecurityManager code instead be as follows?  protected Subject createSubject(AuthenticationToken token, AuthenticationInfo info, Subject existing) { SubjectContext context = createSubjectContext(); context.setAuthenticated(true); context.setAuthenticationToken(token); context.setAuthenticationInfo(info); context.setSecurityManager(this); <-- Set the security manager before the createSubject if (existing != null) { context.setSubject(existing); } return createSubject(context); } This exception can be masked but I think it would be better not to raise it in this scenario.	Bug	OPEN	Minor	Unresolved	1.2.2	None	Authentication (log-in)	None	mac os x, java 1.6	0	Unassigned	Stuart Broad
SHIRO-458	SHIRO	Possible leaked timing information from DefaultPasswordService	Use of the String equals comparison for the password hash comparison could leak timing information since it returns false as soon a character does not match. DefaultPasswordService>>passwordsMatch(Object submittedPlaintext, String saved) Last line is: return saved.equals(formatted); //saved and formatted are strings A possible constant time equals could be: private boolean constantEquals(String s1, String s2) { /* Alternative option (simpler but I'm not sure about the intern 'cost'): s1.intern(); s2.intern(); s1 == s2 */ int result = 0; byte[] a = s1.getBytes(); byte[] b = s2.getBytes(); // Also leaks timing information but probably ok... if (a.length != b.length) { return false; } /* XOR each byte. If each byte is the same the XOR will result in 0. */ for (int i = 0; i < a.length; i++) { result |= a[i] ^ b[i]; } return result == 0; }	Bug	OPEN	Trivial	Unresolved	1.2.2	None	Cryptography & Hashing	None	mac os x, java 1.6	0	Unassigned	Stuart Broad
SHIRO-459	SHIRO	Support role-based authorization depending on HTTP request method	Below is a copy+paste from the Shiro users mailing list: ===================== Dear Shiro gods! I'm struggling to figure out how I can do role-based authorization depending on what HTTP method a request is using. I've posted this question on StackOverflow as it seems nobody has been asking it before (at least I couldn't find it with my search terms). I would be incredibly happy if you could take a look! http://stackoverflow.com/questions/18824670/how-to-do-role-based-authorization-with-apache-shiro-depending-on-http-request-m Cheers Daniel Bimschas ============================= Then, in a second mail I proposed a solution to the issue: ============================= Digging into the Shiro source codes I found that this feature is in fact not available in Shiro. I've now implemented my own custom filter (extending RolesAuthorizationFilter) that allows you to do exactly what I wanted. Configuration for the filter follows the following example: [main] myFilter=my.package.HttpMethodRolesAuthorizationFilter [urls] /rest = authcBasic, myFilter[PUT=SERVICE_PROVIDER&EXPERIMENTER,POST=EXPERIMENTER,DELETE=ADMINISTRATOR] So, in this example a user must be authenticated to execute any operation a user with both roles SERVICE_PROVIDER and EXPERIMENTER can send a PUT request, a user with role EXPERIMENTER can send POST requests, and a user with role ADMINISTRATOR can DELETE things I would be more than happy to contribute this little bit of code to the project in case you're interested! =============================	New Feature	OPEN	Minor	Unresolved	1.2.2	None	Authorization (access control)	features newbie		0	Unassigned	Daniel Bimschas
SHIRO-46	SHIRO	Create Maven POMs to build code base	Create Maven POMs to build code base	Task	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-460	SHIRO	Active Directory succeeds even if the user name and password is not passed.	Here below is how my active directory setup looks like in shiro.ini: ldapContextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory ldapContextFactory.url = ldap://abc.internal:389/ adRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm adRealm.ldapContextFactory = $ldapContextFactory adRealm.searchBase = "CN=Configuration,DC=abc,DC=internal" Servlet Code: Subject subject = SecurityUtils.getSubject(); String username = request.getParameter("uid"); String password = request.getParameter("pwd"); String rememberMe = request.getParameter("rememberMe"); Boolean flag = false; if (rememberMe != null && rememberMe.equalsIgnoreCase("on")) { flag = true; } if (!subject.isAuthenticated()) { logger.info("Authenticating user: " + request.getParameter("uid")); UsernamePasswordToken token = new UsernamePasswordToken(username, password, flag); try { subject.login(token); } catch (UnknownAccountException e) { logger.info("Unknown user account..."); } catch (IncorrectCredentialsException e) { logger.info("Incorrect credentials..."); } catch (DisabledAccountException e) { logger.info("User account disabled..."); } catch (AuthenticationException e) { logger.info("Authentication Exception..."); } Actions performed in login.jsp, 1. With empty username and password field => authentication succeeds - This should not happen 2. With empty username and some random password => authentication succeeds - This should not happen 3. With non-existent username and some password => authentication fails - This is correct 4. With existing username and invalid password => authentication fails - This is correct 5. With correct username and password => authentication succeeds - This is correct. Please let me know if you were able to reproduce this issue in your environment and what other information would you need. FYI, The Ldap and Jdbc Realms are working fine except for the ActiveDirectory realm. Thank You	Bug	OPEN	Major	Unresolved	1.2.2	None	Authentication (log-in)	None	windows xp, java 1.7, maven	0	Unassigned	skis
SHIRO-461	SHIRO	Log level of: "No cache or cacheManager properties have been set. Authorization cache cannot be obtained." ?	I got a bunch of rapid logs as follows : 09:29:15.713 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.715 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.717 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.718 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.720 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.722 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.723 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.725 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.726 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.728 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.730 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.732 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.733 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.735 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.737 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.738 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.741 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.743 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.745 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. 09:29:15.747 I | mmerce/app/mall/salesorder/new  Mozilla/5.0 (X11; Li | -nio-8201-exec-4 o.a.s.r.AuthorizingRealm         | No cache or cacheManager properties have been set.  Authorization cache cannot be obtained. Are these normal ? If so, then it should be DEBUG level, because I think it's too noisy to be on INFO.	Improvement	OPEN	Trivial	Unresolved	1.2.2	None	Authorization (access control)	None		0	Unassigned	Hendy Irawan
SHIRO-462	SHIRO	Authentication exceptions are swallowed	In org.apache.shiro.cas.CasFilter.onLoginFailure(AuthenticationToken, AuthenticationException, ServletRequest, ServletResponse) the passed-in AuthenticationException is not logged anywhere. In my case, a misconfigured SSL certificate error was being swallowed. The lack of logging meant I had to use a debugger to see the exception details. There is a similar issue with the other override of this method, in org.apache.shiro.web.filter.authc.FormAuthenticationFilter. Suggest logging at debug level (which is off by default in sensible setups, but can be enabled during investigations). See attached patch.	Bug	CLOSED	Minor	Fixed	1.2.2	1.2.5	Authentication (log-in)	None		0	Unassigned	Art O Cathain
SHIRO-463	SHIRO	Enabling Shiro Annotations bring me a problem	I want to enable shiro annotations support,so i config it like the suggestion at "http://shiro.apache.org/spring.html#Spring-WebApplications" . Some code as follow: <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/> <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> <property name="securityManager" ref="securityManager"/> </bean> But,when i put these code into my applicationContext.xml,some controller can't be found,and the application take me to the 404 page.It will be solved as remove these code. So,why?	Question	OPEN	Major	Unresolved	1.2.2	1.2.2	Configuration, (2)	annotation security 	springnvc, mybatis, sitemesh	0	Les Hazlewood	lisanlai
SHIRO-464	SHIRO	Support role mapping similar to PermissionResolver and RolePermissionResolver	The basic idea is to provide a plug-in point that can be used to resolve principals to roles or map input roles to output roles that can be externalized from an AuthorizingRealm. The primary use case that is driving this for me is to be able to resolve group principals provided by an AuthenticatingRealm to a set of roles. This will allow for multiple AuthorizingRealm to share RoleMapper implementations.	New Feature	OPEN	Major	Unresolved	1.2.2	2.0.0	Authorization (access control)	patch patch-with-tes		0	Unassigned	Kevin Minder
SHIRO-465	SHIRO	Support externalized principal mapping in AuthenticatingRealm and ModularRealmAuthenticator	The basic idea is to provide a plug-in point that can be used to resolve principals to things like groups or effective principals. The primary use case that is driving this for me is to be able to resolve authenticated principals to a set of groups where that user to group mapping is external to the user repository. In addition other mappings can be done like mapping a real user principal to an effective user principal. This would be useful when a translation is required from an external identity store (e.g. LDAP) to some application specific identities. The existing pattern for things like RolePermissionResolver should be followed for consistency.	Improvement	OPEN	Major	Unresolved	1.2.2	2.0.0	Authentication (log-in)	patch patch-with-tes		0	Unassigned	Kevin Minder
SHIRO-466	SHIRO	Implement Infinispan cache manager	Implement Infinispan as another cache manager alternative to EhCache, and document the integration with JBoss AS 7.x (howto). Infinispan is an extremely scalable, highly available key/value data store and data grid platform. It is 100% open source, and written in Java. The purpose of Infinispan is to expose a data structure that is distributed, highly concurrent and designed ground-up to make the most of modern multi-processor and multi-core architectures. It is often used as a distributed cache, but also as a NoSQL key/value store or object database.	Wish	OPEN	Minor	Unresolved	1.3.0	None	Caching	features support		0	Unassigned	Jorge Solorzano
SHIRO-467	SHIRO	Authentication exception gets swallowed	We extend from AuthorizingRealm and when we have a bug in our implementation, the exception gets swallowed by AbstractAuthenticator. A comment in the code mentions it needs a warn log, but no such statement is present: if (ae == null) { //Exception thrown was not an expected AuthenticationException. Therefore it is probably a little more //severe or unexpected. So, wrap in an AuthenticationException, log to warn, and propagate: String msg = "Authentication failed for token submission [" + token + "]. Possible unexpected " + "error? (Typical or expected login exceptions should extend from AuthenticationException)."; ae = new AuthenticationException(msg, t); }	Bug	CLOSED	Major	Fixed	1.2.1	1.2.5	Authentication (log-in)	patch patch-with-tes		0	Unassigned	Wouter de Vaal
SHIRO-468	SHIRO	How to use multiple logins url in Shiro	I am trying to have two different loggin page for apache shiro 1) For Mobile devices (little screen, limited javascript different theme) 2) For standard devices How can i do? Now only one url is working at a time. <property name="securityManager" ref="securityManager" /> <property name="loginUrl" value="/login.jsp" /> <property name="successUrl" value="/index.jsp" /> Thankyou	Question	OPEN	Major	Unresolved	1.2.0	None	Authorization (access control)	None		0	Unassigned	xuhao
SHIRO-469	SHIRO	Wrong description of JdbcRealm#setPermissionsQuery	Javadoc for JdbcRealm#setPermissionsQuery says: "... and return a row per permission with three columns containing the fully qualified name of the permission class, the permission name, and the permission actions (in that order)..." However the DEFAULT_PERMISSIONS_QUERY returns just 1 column, the permission name: protected static final String DEFAULT_PERMISSIONS_QUERY = "select permission from roles_permissions where role_name = ?";	Bug	OPEN	Minor	Unresolved	1.2.2	None	Realms	None		0	Unassigned	Radek Skokan
SHIRO-47	SHIRO	Rename packages and Maven POMs to new ki name.		Task	CLOSED	Major	Won't Fix	None	None	None	None		0	Alan Cabrera	Alan Cabrera
SHIRO-470	SHIRO	how to return custom message after session had been expired and redirect to the home page	i read the full document and also try in google ..but no ideal that how i will send custom message to user once the session had been expired .and this is requirement in all application . so how to solve that must be there in document. Thanks Ishwar	New Feature	OPEN	Minor	Unresolved	1.2.2	None	Session Management	documentation featur		0	Unassigned	ishwar
SHIRO-471	SHIRO	shiro-core tests jar is needed by shiro-web	But packaging is commented out in core/pom.xml Index: core/pom.xml =================================================================== — core/pom.xml (revision 1545287) +++ core/pom.xml (working copy) @@ -34,7 +34,7 @@ <build> <plugins> <!-- collect the test classes so they can be referenced by other modules --> <!-- <plugin> + <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId> <executions> @@ -44,7 +44,7 @@ </goals> </execution> </executions> </plugin> --> + </plugin> <!-- <plugin> <groupId>org.apache.felix</groupId> <artifactId>maven-bundle-plugin</artifactId>	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Erik Martino Hansen
SHIRO-472	SHIRO	copy and createSubjectContext doesn't set the correct security manager	It makes shiro rely too much on ThreadContext, this is a problem in web envirionments where websocket packets tends to sneak around the installed filter. public static void main(String[] args) { DefaultSecurityManager n = new DefaultSecurityManager(); SecurityUtils.setSecurityManager; DefaultSecurityManager m = new DefaultSecurityManager(); SubjectContext ct = m.createSubjectContext(); if (m != ct.getSecurityManager()) { throw new AssertionError("createSubjectContext doesn't set the correct security manager"); } SubjectContext copy = m.copy(ct); if (m != copy.getSecurityManager()) { throw new AssertionError("copy doesn't set the correct security manager"); } }	Bug	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Erik Martino Hansen
SHIRO-473	SHIRO	DefaultAnnotationResolver.getAnnotation throws NullPointerException	Bug Description The method org.apache.shiro.aop.DefaultAnnotationResolver.getAnnotation throws NullPointerException when a given MethodInvocation argument represents static method: Technical Info http://shiro.apache.org/static/1.2.2/apidocs/src-html/org/apache/shiro/aop/DefaultAnnotationResolver.html#line.62: return annotation == null ? mi.getThis().getClass().getAnnotation(clazz) : annotation; if annotation is null and mi represents static method invocation, then mi.getThis() will return null causing the following chained call getClass() fail with NullPointerException. Resolution See attached patch: DefaultAnnotationResolver.java.diff.	Bug	RESOLVED	Major	Fixed	1.2.2	1.3.0	Integration: JEE	AOP AnnotationResolv		0	Unassigned	Sergiy Sokolenko
SHIRO-474	SHIRO	Adding 3 new taglibs to Apache Shiro	Hi, I think it would be useful adding three simple new tags to the ones provided by Shiro. Recently we used Shiro successfully in a new project but we had to develop some custom tags to meet certain requirements. hasAllPermissions = Displays the inner body content only if all the specified permissions from a comma-separated list of permission names are granted. hasAnyPermissions = Displays the inner body content if at least one of the specified permissions from a comma-separated list of permission names are granted. hasNonePermissions = Displays the inner body content if none of the specified permissions from a comma-separated list of permission names are granted.	Improvement	OPEN	Minor	Unresolved	None	None	None	taglib		0	Unassigned	Alex Epelde
SHIRO-475	SHIRO	Integrate with JDK7's ForkJoinPool	There are SubjectAwareExecutor and SubjectAwareExecutorService that wrap Runnables and Callables to be executed with the creating thread's security context. There is no such integration for JDK7's ForkJoinPool/Task. AFAICT, we'd have to hook into ForkJoinPool's exec method, but as it is protected, the delegate pattern that is used for SubjectRunnable and SubjectCallable cannot be applied here.	Improvement	OPEN	Major	Unresolved	1.2.2	None	None	None		0	Unassigned	Jochen Kemnade
SHIRO-476	SHIRO	Update Shiro Logo to include trademark 'TM'	From: http://apache.org/foundation/marks/pmcs.html#graphics Logos are important to recognize as trademarks as well. For the project's official logo (if it has one, and especially if it uses the ASF feather), ensure that it includes a small "TM" symbol in the graphic or immediately adjacent to it. For pages that include the project logo on them, ensure you mention "... and the Project logo are trademarks..." in the attribution. The current log does NOT include the 'TM'	Bug	OPEN	Minor	Unresolved	None	None	Documentation, (1)	None		0	Unassigned	Brian Demers
SHIRO-477	SHIRO	Update Shiro site navigation to conform to ASF standards	For full requirements see: http://apache.org/foundation/marks/pmcs.html#navigation A few of the obvious things from this doc are: The Shiro site contains most of this information, but does NOT have a link back to the ASF homepage. The license link is not in the header The 'Security' link which may be of particular intrest to this project	Bug	OPEN	Minor	Unresolved	None	None	Web Site	None		0	Unassigned	Brian Demers
SHIRO-478	SHIRO	Upgrade dependencies on trunk	Here is a patch to upgrade some dependencies on trunk. Note that the SLF4J upgrade contains a significant performance improvement.	Improvement	CLOSED	Trivial	Won't Fix	None	2.0.0	None	patch		0	Francois Papon	Colm O hEigeartaigh
SHIRO-479	SHIRO	update ehcache dependency		Improvement	OPEN	Minor	Unresolved	1.2.2	2.0.0	Caching	None		0	Francois Papon	arash pajooh
SHIRO-48	SHIRO	Need JSecurity website which will be created off of the wiki	The autoexport plugin is automatically enabled for all Confluence spaces. The JSEC space is exported here: /www/confluence-exports/JSEC You can find the details on setting up a sync to your site here: http://cwiki.apache.org/CWIKI/#Index-Canweusetheautoexportsiteaspartofourmainwebsite%253F That page also contains information on how to configure the auto-exporter. I've found this to be a great way to maintain a project web site. Please note the requirements on CLA on file for contributors if the space should be the JSecurity site.	Task	CLOSED	Major	Fixed	None	Incubation	None	None		0	Unassigned	Alan Cabrera
SHIRO-480	SHIRO	setTarget method in DomainPermission does not set targets	The setTarget() method in org.apache.shiro.authz.permission.DomainPermission has an apparent typo, or copy paste error: 133 protected void setTargets(Set<String> targets) { 134 this.targets = targets; 135 if (this.targets != null && this.targets.equals(targets)) { 136 return; 137 } 138 this.targets = targets; 139 setParts(domain, actions, targets); 140 } As you can see, line 134 is a duplicate of line 138 and will in all cases, except where the argument targets is null, prevent execution from ever calling setParts() and functioning properly. The work around for now is for classes extending DomainPermission to handle the call to setParts() directly.	Bug	RESOLVED	Minor	Fixed	1.2.2	1.3.0	Authorization (access control)	None		0	Unassigned	Bill Weiss
SHIRO-481	SHIRO	Provide CacheManager implementation based on Guava caching API	Guava has become a common library used in many projects. Provided default implementation (MemoryConstrainedCacheManager) seems to retain data in cache for too long for common cases. Others implementation (ehcache, terracotta) require the developper to add some dependencies. Guava provides a caching API [1]. It's convenient since it's in-memory and thread-safe, Guava has a mature quality code base and it support few tweaking options: concurrencyLevel initialCapacity maximumSize maximumWeight expireAfterAccess expireAfterWrite refreshAfterWrite weakKeys softValues weakValues recordStats I've already programmed the whole thing (patch provided) and I was wondering if the Shiro team would be interested to integrate this as a new module. It's tiny (no dependency except guava and shiro-cache). We could just put this CacheManager implementation in shiro-core or in shiro-cache module or in it's own module (but i think a module for a single class is overkill). It's not perfect but i did some Javadoc.	Wish	OPEN	Minor	Unresolved	1.2.2	None	Caching	features patch perfo		0	Unassigned	Brendan Le Ny
SHIRO-482	SHIRO	EhCache API misuse prevents use of decorated caches	Shiro's EhCacheManager poses some implicit requirements against Caches served by EHCache CacheManager. Most notable, that EHCache manager instance registered by CacheManager is also a net.sf.ehcache.Cache instance. This can be seen in getCache method of EhCacheManager, as it uses CacheManager.getCache(String) method instead of CacheManager.getEhcache(String) method to populate local variable "cache" of type net.sf.ehcache.Ehcache. This condition is not always true, especially when "cache decoration" [1] feature of EHCache is used. In that case, CacheManager.getCache(String) will return null (as decorated cache will probably not be an instance of Cache), and NPE will happen when creation of org.apache.shiro.cache.ehcache.EhCache is attempted with null Cache. Proposed fix: one liner change of line 162 that currently yields cache = manager.getCache(name); to cache = manager.getEhcache(name); [1] http://ehcache.org/documentation/apis/cache-decorators	Bug	OPEN	Major	Unresolved	None	None	Caching	None		0	Unassigned	Cservenak, Tamas
SHIRO-483	SHIRO	passwordsMatch() returns false with right plain password-encrypted password in JVM with default locale tr_TR	public static void main(String[] args) { PasswordService psd = new DefaultPasswordService(); String password = "333"; String enc = psd.encryptPassword(password); System.out.print(psd.passwordsMatch(password, enc)); } The above code outputs "false" on JVM which has default locale tr_TR, the following outputs "true" public static void main(String[] args) { PasswordService psd = new DefaultPasswordService(); String password = "333"; String enc = psd.encryptPassword(password); Locale.setDefault(Locale.ENGLISH); System.out.print(psd.passwordsMatch(password, enc)); }	Bug	RESOLVED	Major	Fixed	1.2.2	1.3.0	Authentication (log-in)	password		0	Unassigned	Salih ERİKCİ
SHIRO-484	SHIRO	Variables in annotations	I'm sure that I'm not the first who want it, but not found request about that. Are there any plans for supporting variables in Shiro annotations? Instead of dynamic checking like that: public Project getProject(String id) { SecurityUtils.getSubject().checkPermissions("project:" + id + ":read"); ... } it would be nice to have: @RequiresPermissions( {"project:#id:read"} ) public Project getProject(String id) { ... } variable reference could be in other syntax (${id}, $id, [id]...) or for better backward compatibility variables should be marked by new annotation just like: @RequiresPermissions( {"project:#id:read"} ) public Project getProject(@ShiroVariable("id") String id) { ... }	Improvement	OPEN	Minor	Unresolved	1.2.2	None	Authorization (access control)	annotations		0	Unassigned	Martin Schayna
SHIRO-485	SHIRO	Restrict HTTP requests to localhost	I needed a way to restrict administration operations on a HTTP-based system; it has to be out-of-the-box configuration (the user can then make changes). The solution was to limit access to localhost. Attached are: LocalhostFilter for HTTP requests - request must come from localhost (IPV4 or IPv6). Unlike HostFilter, this is specifically localhost. AuthorizationFilter403 for HTTP requests - if denied, give a 403 response. DenyFilter - deny, always (for testing). Tested with Jetty. Taken from https://svn.apache.org/repos/asf/jena/branches/jena-fuseki-new-ui/src/main/java/org/apache/jena/fuseki/authz/. This location should to (probably) https://svn.apache.org/repos/asf/jena/trunk/jena-fuseki/src/main/java/org/apache/jena/fuseki/authz/ at some point in the future.	New Feature	OPEN	Minor	Unresolved	None	None	Authorization (access control) , (1)	patch	web	0	Unassigned	Andy Seaborne
SHIRO-486	SHIRO	HttpSessionBindingListener not called when session expires	I posted this in the user mailing list, but after some debugging I think it is a bug in shiro's native session management: It seems that the HttpSessionBindingListener that spring installs is not called on destroy, so Spring is not able to delete session-scoped beans. From the mailing list post: I'm having problems with session-scoped beans like this one @Named @Scope(proxyMode = ScopedProxyMode.TARGET_CLASS, value = "session") public class SessionBean { @PostConstruct public void init() @PreDestroy public void destroy() } Using Shiro's default "ServletContainerSessionManager" both methods are called as expected, but when I switch to native session management with DefaultWebSessionManager the pre-destroy method is never called (post construct gets called). The validationScheduler runs, and the globalSessionTimeout has been set. Anyone knows whats happening here ? I've uploaded a small example project as an attachement (just comment out the sessionManager in applicationContext.xml to see the working @PreDestroy).	Bug	OPEN	Major	Unresolved	1.2.1, 1.2.2	None	Session Management	None	java 1.7	0	Unassigned	Steve
SHIRO-487	SHIRO	Session path parameter must be "JSESSIONID", not "jsessionid"	The DefaultWebSessionManager only looks for the session id in a path parameter with the name of "JSESSIONID" (all uppercase, not lowercase), and this cannot be configured. This should either be configurable, or just "jsessionid" (all lower case). The 3.0 servlet spec, section 7.1.3 states: "The session ID must be encoded as a path parameter in the URL string. The name of the parameter must be jsessionid." Other servlet containers (tomcat, jetty, etc) use "jsessionid" as the path parameter for session ids. Since path parameters really shouldn't be used, the query parameter is configurable, and changing our existing client code isn't that big of a deal, I'm marking this as a minor issue. Just thought I would record it.	Bug	OPEN	Minor	Unresolved	1.2.2	None	Session Management, (1)	easyfix		0	Unassigned	Terence Kent
SHIRO-488	SHIRO	ShiroWebModule.config does not work with sisu-guice 3.1.8	ShiroWebModule$FilterConfigKey is not instantiable in sisu-guice 3.1.8. To reproduce the error, configure dependencies. <dependency>     <groupId>org.apache.shiro</groupId>     <artifactId>shiro-guice</artifactId>     <version>1.2.2</version>     <exclusions>         <exclusion>             <artifactId>guice</artifactId>             <groupId>com.google.inject</groupId>         </exclusion>         <exclusion>             <artifactId>guice-multibindings</artifactId>             <groupId>com.google.inject.extensions</groupId>         </exclusion>     </exclusions> </dependency> <dependency>     <groupId>org.apache.shiro</groupId>     <artifactId>shiro-web</artifactId>     <version>1.2.2</version> </dependency> <dependency>     <groupId>org.sonatype.sisu.inject</groupId>     <artifactId>guice-servlet</artifactId>     <version>3.1.0</version> </dependency> <dependency>     <groupId>javax.servlet</groupId>     <artifactId>servlet-api</artifactId>     <version>2.4</version> </dependency> <dependency>     <groupId>org.sonatype.sisu</groupId>     <artifactId>sisu-guice</artifactId>     <version>3.1.8</version> </dependency> Run this code: public static void main(String[] args) {     new MyShiroWebModule(); }  private static class MyShiroWebModule extends ShiroWebModule {     public MyShiroWebModule() {         super(null);         addFilterChain("/**", AUTHC, config(PERMS, "hello"));     }     @Override public void configureShiroWeb() {} } And the result: Exception in thread "main" com.google.inject.ConfigurationException: Guice configuration errors:  1) T cannot be used as a key; It is not fully specified.  1 error  at com.google.inject.internal.MoreTypes.canonicalizeForKey(MoreTypes.java:80)  at com.google.inject.Key.<init>(Key.java:115)  at org.apache.shiro.guice.web.ShiroWebModule$FilterConfigKey.<init>(ShiroWebModule.java:243)  at org.apache.shiro.guice.web.ShiroWebModule$FilterConfigKey.<init>(ShiroWebModule.java:238)  at org.apache.shiro.guice.web.ShiroWebModule.config(ShiroWebModule.java:225)  at com.bacamt.ibaca.sandbox.ShiroBug$MyShiroWebModule.<init>(ShiroBug.java:14)	Bug	OPEN	Trivial	Unresolved	1.2.2	None	Integration: Guice	None		0	Jared Bunting	Ignacio Baca Moreno-
SHIRO-489	SHIRO	can not get session on sina app engine	org.apache.shiro.web.servlet.AbstractShiroFilter ... protected void doFilterInternal(ServletRequest servletRequest, ServletResponse servletResponse, final FilterChain chain) throws ServletException, IOException { ... final ServletRequest request = prepareServletRequest(servletRequest, servletResponse, chain); final ServletResponse response = prepareServletResponse(request, servletResponse, chain); final Subject subject = createSubject(request, response); //noinspection unchecked subject.execute(new Callable() { public Object call() throws Exception { updateSessionLastAccessTime(request, response); executeChain(request, response, chain); ... } executeChain(request, response, chain) would not use request instance,this is a ShiroHttpServletRequest instance and override getSession() method,and then any other place(servlet container or other filter) use this request will something unexpected will happen.for example:session.getId() is null in jsp,and login status can not be holded,I think this method should like this: protected void doFilterInternal(final ServletRequest servletRequest,final ServletResponse servletResponse, final FilterChain chain) throws ServletException, IOException { Throwable t = null; try { final ServletRequest request = prepareServletRequest(servletRequest, servletResponse, chain); final ServletResponse response = prepareServletResponse(request, servletResponse, chain); final Subject subject = createSubject(request, response); //noinspection unchecked subject.execute(new Callable() { public Object call() throws Exception { updateSessionLastAccessTime(request, response); executeChain(servletRequest, servletResponse, chain); ... }	Bug	OPEN	Major	Unresolved	1.2.3	None	Web, Web Site	None	sina app	0	Unassigned	吴开强
SHIRO-49	SHIRO	Fix SimpleAccountRealm to not rely on caching	The current implementation relies on caching being enabled. This should be fixed to work w/out caching being enabled.	Task	CLOSED	Major	Fixed	None	1.0.0	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-490	SHIRO	Extend shiro-faces with taglib functions	The current implementation of shiro-faces in the 2.0 branch is great but I also would like to have all tags as functions to use them directly in JSF component attributes. Therefor I created and attached a patch containing a new class with all Tag-Functions. I also updated the shiro-faces.taglib.xml to provide the new functions to xhtml-files.	Improvement	OPEN	Major	Unresolved	2.0.0	2.0.0	shiro-faces, Web	patch	mojarra	0	Unassigned	Gerry Gehrmann
SHIRO-491	SHIRO	shiro-faces principal tag is not rendered when used inside h:panelGroup component	When using the shiro-faces principal tag inside a h:panelGroup, nothing will be rendered. This is because the "encodeAll" method is never called. I changed the overriding method to encodeEnd which is called. Attached is a patch containing the respective change.	Bug	OPEN	Major	Unresolved	2.0.0	2.0.0	shiro-faces, Web	patch	mojarra	0	Unassigned	Gerry Gehrmann
SHIRO-492	SHIRO	Subject.getRoles() functionality	Currently shiro provides the ability to respond whether or not a user has a list of Authorizations. However, while the realms have methods for getting all authorizations (protected), these are not exposed in normal use to allow asking for all Roles. This should be exposed by adding a call to Subject to getRoles, to complement it's existing hasRoles calls. This may require making some of the calls around authorizations, like getAuthorizationInfo in AuthorizingRealm, public.	Improvement	OPEN	Major	Unresolved	None	2.0.0	Authorization (access control)	None		0	Unassigned	John Vines
SHIRO-493	SHIRO	shiro-guice not working with the guice 4.x	Switching from guice 3.0 to guice 4 beta is causing some problems. public class SecurityModule extends ShiroWebModule { public SecurityModule(ServletContext servletContext) { super(servletContext); } @Override protected void configureShiroWeb() { bind(Realm.class).to(JdbcRealm.class); } } com.google.inject.CreationException: Guice creation errors: 1) No implementation for java.util.Set<org.apache.shiro.realm.Realm> was bound. at org.apache.shiro.guice.ShiroModule.configure(ShiroModule.java:74) (via modules: pt.egoi.megan.guice.MeganModule -> pt.egoi.megan.security.SecurityModule) 1 error at com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:449) ~[guice-4.0-SNAPSHOT.jar:na] at com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:155) ~[guice-4.0-SNAPSHOT.jar:na] at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:107) ~[guice-4.0-SNAPSHOT.jar:na] at com.google.inject.Guice.createInjector(Guice.java:96) ~[guice-4.0-SNAPSHOT.jar:na] at com.google.inject.Guice.createInjector(Guice.java:84) ~[guice-4.0-SNAPSHOT.jar:na] at pt.egoi.megan.guice.GuiceListener.getInjector(GuiceListener.java:20) ~[classes/:na] at com.google.inject.servlet.GuiceServletContextListener.contextInitialized(GuiceServletContextListener.java:47) ~[guice-servlet-4.0-SNAPSHOT.jar:na] at pt.egoi.megan.guice.GuiceListener.contextInitialized(GuiceListener.java:31) ~[classes/:na] at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:746) ~[jetty-server-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:238) ~[jetty-servlet-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1240) ~[jetty-webapp-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:689) ~[jetty-server-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:482) ~[jetty-webapp-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:39) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:186) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:494) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:141) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:145) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:56) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:615) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:540) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:337) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:121) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:555) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:230) [jetty-deploy-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.component.AggregateLifeCycle.doStart(AggregateLifeCycle.java:81) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58) [jetty-server-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:96) [jetty-server-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.server.Server.doStart(Server.java:281) [jetty-server-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-7.6.14.v20131031.jar:7.6.14.v20131031] at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1274) [jetty-xml-7.6.14.v20131031.jar:7.6.14.v20131031] at java.security.AccessController.doPrivileged(Native Method) [na:1.7.0_51] at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1197) [jetty-xml-7.6.14.v20131031.jar:7.6.14.v20131031]	Bug	RESOLVED	Major	Fixed	1.2.3	1.4.0-RC2	Integration: Guice	None	java 1.7	0	Jared Bunting	Filipe Sousa
SHIRO-494	SHIRO	Make "Enabling session validation scheduler" line a debug log statement	The following method is called each time a new user session is created, thus spamming our logs with info messages: protected void enableSessionValidation() { SessionValidationScheduler scheduler = getSessionValidationScheduler(); if (scheduler == null) { scheduler = createSessionValidationScheduler(); setSessionValidationScheduler(scheduler); } if (log.isInfoEnabled()) { log.info("Enabling session validation scheduler..."); } scheduler.enableSessionValidation(); afterSessionValidationEnabled(); } IMHO this should be a debug message Same goes for the method validateSessions, that one is spamming our logs as well..	Bug	OPEN	Major	Unresolved	None	None	Session Management	None		0	Unassigned	Wouter de Vaal
SHIRO-495	SHIRO	AuthorizingRealm permission matching hard to override	The class AuthorizingRealm implements the Authorizer interface. That interface defines 10 permission-based methods which are all implemented to delegate down to a single isPermitted(Permission,AuthorizationInfo) method. Unfortunately, the isPermitted(Permission,AuthorizationInfo) method is defined as private. As such, subclass Realm implementations cannot override the permission evaluation to implement their own logic (which I want to do right now). There is no security issue with making the method protected, as it is possible to override each of the 10 public methods in the subclass. Its simply the case that overriding 10 methods to behave exactly the same as AuthorizingRealm simply because the single central method is not protected is dumb. Please change the isPermitted(Permission,AuthorizationInfo) method from private scope to protected scope. I would provide a patch, but its such a simple change its just not worth it I've classified it as a bug because it looks like a simple oversight when reviewing the rest of the class. The workaround is to define implementations of Permission and PermissionResolver, which is a more complex solution.	Bug	OPEN	Major	Unresolved	1.2.3	None	Realms	None		0	Unassigned	Stephen Colebourne
SHIRO-496	SHIRO	Update shiro.guice dependency	Guice-Integration depends on Guava r09 - lastest version is 16.+ pls update. As a workaround in Gradle I'm using: compile('org.apache.shiro:shiro-guice:' + '1.2.+') { // Old Version (r09) exclude module: 'guava' } compile group: 'com.google.guava', name: 'guava', version: '16.+'	Improvement	CLOSED	Minor	Fixed	1.2.3	1.2.4	Integration: Guice	None		0	Kalle Korhonen	Mike Mitterer
SHIRO-497	SHIRO	setFilterChainDefinitionMap accepts Map interface objects, whose implementations are mostly unordered	org.apache.shiro.spring.web.ShiroFilterFactoryBean has a method, setFilterChainDefinitionMap which accepts Map interface objects. Most Map interface objects have no guaranteed order, but the filter chain definitions rely heavily on specific ordering for the application of rules. For example,     Map<String, String> filterChainDefs = new HashMap<String, String>();     filterChainDefs.put("/s/test", "authc");     filterChainDefs.put("/s/**", "anon");     shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefs); In this example, this structure is acceptable to the setter on shiroFilterFactoryBean, but will non-deterministically allow or deny access to /s/test between server restarts.	Improvement	OPEN	Minor	Unresolved	None	None	Configuration	None		0	Unassigned	Jon Steege
SHIRO-498	SHIRO	ThreadLocal should not be created when not necessary	org.apache.shiro.util.ThreadContext.getValue(Object) and org.apache.shiro.util.ThreadContext.remove(Object) initialze the TheadLocal unnecessarily via initialValue(). Both methods should return without creating the ThreadLocal to avoid potential memory leaks.	Improvement	CLOSED	Major	Fixed	1.2.2	1.2.4	None	patch		0	Unassigned	Jochen Kemnade
SHIRO-499	SHIRO	Kerberos Realm	I'm working on adding a Kerberos Realm to Shiro. My approach is to port over the Kerberos support that is in Hadoop and make it work in Shiro. Should have a patch this week, I hope, although I am new to Shiro.	Improvement	OPEN	Major	Unresolved	None	2.0.0	Authentication (log-in)	patch		0	Unassigned	Grant Ingersoll
SHIRO-5	SHIRO	NPE in TextConfigurionRealm if configuration string contains blank lines	In TextConfigurationRealm, if user definisions or role definitions string contains blank lines, NPE is thrown. It can happen when configuratoin string is defined in XML, eg: <property name="userDefinitions"> <value> empl1 = pass1, EMPLOYEE </value> </property> Here you will get configurationString with three lines: first and third will be empty lines, and NPE will be raised.	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Grzegorz Borkowski
SHIRO-50	SHIRO	Spring NOTICE	We need to add the Spring NOTICE information to the JSecurity NOTICE file when we redistribute the code. We need to go to the Spring distribution to get it. See section 4.4 in the Apache license 2.0 for more text http://apache.org/licenses/LICENSE-2.0	Task	CLOSED	Major	Fixed	None	1.0.0	None	None		0	Unassigned	Alan Cabrera
SHIRO-500	SHIRO	ShiroHttpServletResponse is not compatible for Servlet 3.0	When JSTL C:URL create the url will call: response.encodeURL(result) , for Servlet 3.0 should to check the SessionTrackingMode. My suggestion is : ShiroHttpServletResponse don't overwrite the related HttpServletResponseWrapper functions: for example : encodeURL(String url),isEncodeable(final String location)	Bug	OPEN	Major	Unresolved	1.2.3	None	None	None	tomcat 7, servlet	0	Unassigned	liveever
SHIRO-501	SHIRO	Add ability to set system properties in shiro.ini	Shiro should be able to inject values from system properties into the INI key value pairs. http://shiro-user.582556.n2.nabble.com/System-properties-in-shiro-ini-td7579627.html	New Feature	RESOLVED	Major	Fixed	1.2.3	1.4.0-RC2	None	patch		0	Brian Demers	Johnathan James
SHIRO-502	SHIRO	OSGi import of com.google.inject in shiro-guice has incorrect version range	The guice project follows a relaxed* form of semantic versioning in its package exports. So while the bundle version increases on each major release: 2, 3, 4 the exported package version only increases the minor segment: 1.2, 1.3, 1.4 to reflect that the API is still binary compatible - albeit with additional features. (* relaxed because the same version is applied to all packages in the bundle) This means that shiro-guice fails to resolve against the official guice bundle, because guice 3 is exporting com.google.inject with a version "1.3", but shiro-guice is importing com.google.inject with a range of "[3, 4)" Solution is to either remove the version range on the import, or widen it to something like "1.3" (ie. provide a lower bound, but not an upper bound).	Bug	RESOLVED	Major	Fixed	None	1.3.0	Integration: Guice	patch		0	Jared Bunting	Stuart McCulloch
SHIRO-503	SHIRO	[DefaultWebSessionManager] Cannot get data w/ httpMethod="POST" and "Content-Type: application/x-www-form-urlencoded"	web.xml <?xml version="1.0" encoding="UTF-8"?>  <web-app xmlns="http://java.sun.com/xml/ns/javaee"          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"          xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"          version="3.0">      <context-param>         <param-name>shiroConfigLocations</param-name>         <param-value>classpath:shiro.ini</param-value>     </context-param>          <listener>             <listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class&gt;         </listener>          <filter>             <filter-name>ShiroFilter</filter-name>             <filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter</filter-class&gt;         </filter>          <filter-mapping>             <filter-name>ShiroFilter</filter-name>             <url-pattern>/*</url-pattern>             <dispatcher>REQUEST</dispatcher>             <dispatcher>FORWARD</dispatcher>             <dispatcher>INCLUDE</dispatcher>             <dispatcher>ERROR</dispatcher>         </filter-mapping> </web-app> ShiroServlet.java package shiro;  import java.io.IOException;  import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse;  import org.apache.commons.io.IOUtils;  /**  * Created by buom on 5/27/14.  */ @WebServlet(urlPatterns = "/shiro") public class ShiroServlet extends HttpServlet {     @Override     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {          String payload = IOUtils.toString(request.getInputStream());         String output = "payload: " + payload +  "\n" +             "contentType: " + request.getContentType() + "\n" +             "method: " + request.getMethod();          response.getWriter().write(output);      } } Test 1: shiro.ini [main]  # Create a Session Manager sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager securityManager.sessionManager = $sessionManager  [filters] authc.successUrl = /index.jsp Run $ curl -i -XPOST -H'Content-Type: application/x-www-form-urlencoded' -d'name=buom' http://localhost:8080/coz/shiro HTTP/1.1 200 OK Server: Apache-Coyote/1.1 Content-Length: 69 Date: Tue, 27 May 2014 12:48:41 GMT  payload:  contentType: application/x-www-form-urlencoded method: POST Test 2: shiro.ini [main]  # Create a Session Manager #sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager #securityManager.sessionManager = $sessionManager  [filters] authc.successUrl = /index.jsp Run $ curl -i -XPOST -H'Content-Type: application/x-www-form-urlencoded' -d'name=buom' http://localhost:8080/coz/shiro HTTP/1.1 200 OK Server: Apache-Coyote/1.1 Content-Length: 78 Date: Tue, 27 May 2014 12:47:39 GMT  payload: name=buom contentType: application/x-www-form-urlencoded method: POST Conclusion Fail in the Test 1	Bug	OPEN	Major	Unresolved	1.2.2, 1.2.3	None	Web	None		0	Unassigned	buom
SHIRO-504	SHIRO	Java 8 support	Here is a patch for JavaEnvironment to support Java 8. Shiro cannot be compiled with Java 8 but at least with this patch I can run the command line hasher with Java 8...	Improvement	RESOLVED	Major	Fixed	1.2.3	1.2.5	Cryptography & Hashing	patch	java 1.8	0	Unassigned	Cedric Thiebault
SHIRO-505	SHIRO	shiro-web won't compile because of missing shiro-core:jar:tests dependency	shiro-web module depends on shiro-core:jar:tests which is excluded from the build process. The bug was introduced in https://svn.apache.org/repos/asf/shiro/trunk@1484203. The attached patch enables maven-jar-plugin to generate test-jar.	Bug	CLOSED	Trivial	Cannot Reproduce	None	None	None	None		0	Unassigned	Mario Krizmanic
SHIRO-506	SHIRO	Update integrations page on website to include link to Apache Isis		Documentation	CLOSED	Trivial	Fixed	None	None	None	patch		0	Unassigned	Dan Haywood
SHIRO-507	SHIRO	Website Features wrong - Kerberos	The Feature Page still announces Kerberos as out-of-the-box pluggable datasource, which is wrong, as SHIRO-499 shows. Here is just a quick fix: $ svn diff Index: authentication-features.md =================================================================== --- authentication-features.md  (Revision 1602834) +++ authentication-features.md  (Arbeitskopie) @@ -41,7 +41,7 @@    *   **'Remember Me' built in** - Standard in the Shiro API is the ability to remember your users if they return to your application.  You can offer a better user experience to your them with minimal development effort.   -*   **Pluggable data sources** - Shiro uses pluggable data access objects (DAOs), called Realms, to connect to security data sources like LDAP and Active Directory.  To help you avoid building and maintaining integrations yourself, Shiro provides out-of-the-box realms for popular data sources like LDAP, Active Directory, Kerberos, and JDBC.  If needed, you can also create your own realms to support specific functionality not included in the basic realms. +*   **Pluggable data sources** - Shiro uses pluggable data access objects (DAOs), called Realms, to connect to security data sources like LDAP and Active Directory.  To help you avoid building and maintaining integrations yourself, Shiro provides out-of-the-box realms for popular data sources like LDAP, Active Directory and JDBC.  If needed, you can also create your own realms to support specific functionality not included in the basic realms.    *   **Login with one or more realms** - Using Shiro, you can easily authenticate a user against one or more realms and return one unified view of their identity.  In addition, you can customize the authentication process with Shiro's notion of an authentication strategy. The strategies can be setup in configuration files so changes don't require source code modifications-- reducing complexity and maintenance effort.	Improvement	CLOSED	Minor	Fixed	None	None	Web, Web Site	None		0	Unassigned	Robert Kornmesser
SHIRO-508	SHIRO	Shiro blocking CORSFILTER Tomcat 8.0.9	Hi sir/madam, I have the urgent problem in which I need your help. I am using Shiro, Tomcat 8.0.9 CORSFilter and RESTful WS. In my web.xml I have added Shiro filter as first entry and then tomcat CORSFILTER. When I do Jquery Ajax POST using cross domain and also my pass username and password. It gives me error since this shiro is blocking the cors. When I remove shiro filter from my web.xml then Ajax cross domain works fine. Please let me know how to resolve this issue. I'm writing this email with high hopes. Regards, Murtaza Email: murtaza_ghoda82@hotmail.com Mobile: +965 97180549	Bug	RESOLVED	Blocker	Unresolved	1.2.0, 1.2.2	None	None	None	linux, tomcat, ie, chrome, firefox	0	Unassigned	Murtaza
SHIRO-509	SHIRO	WebUtils.decodeAndCleanUriString incorrectly handles matrix parameters	If I config a web filter (say anon) for a path /**/public and make a request to /mystuff;filter=toys/prices/public the filter is not triggered because WebUtils.decodeAndCleanUriString() removes everything after the ';' (so it only tries to match on /mystuff). The fix is to change int semicolonIndex = uri.indexOf(';'); to int lastSlash = uri.lastIndexOf('/'); int semicolonIndex = uri.lastIndexOf(';'); if(semicolonIndex > lastSlash) then drop trailing matrix params. So that matrix params in parent path segments are left intact.	Bug	OPEN	Major	Unresolved	1.2.2	None	Web	None	jetty, web	0	Unassigned	Mark Hale
SHIRO-51	SHIRO	Investigate if JSecurity should support the ESAPI API	Determine if we should provide support for the following: http://www.owasp.org/index.php/ESAPI	Task	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Les Hazlewood
SHIRO-510	SHIRO	java.lang.StackOverflowError in shiro	326293 > POST http://killbill-uat2.snc1:8080/1.0/kb/payments/a3bb531b-9ab7-4e9b-8a71-602dfbf4680d?pluginProperty=TEST_MODE%3DCONTROL 326293 > accept: application/json 326293 > user-agent: killbill/0.7.3; ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-linux] 326293 > accept-encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3 326293 > authorization: Basic YWRtaW46cGFzc3dvcmQ= 326293 > content-type: application/json 326293 > x-killbill-createdby: AuthCapture 326293 > host: killbill-uat2.snc1:8080 326293 > content-length: 129 326293 > 2014-08-05 00:52:49,854 [catalina-exec-11] ERROR c.s.j.s.container.ContainerResponse - The exception contained within MappableContainerException could not be mapped to a response, re-throwing to the HTTP container java.lang.StackOverflowError: null at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) ~[ProxiedSession.class:1.2.2] at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) ~[ProxiedSession.class:1.2.2] at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) ~[ProxiedSession.class:1.2.2] at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) ~[ProxiedSession.class:1.2.2] at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) ~[ProxiedSession.class:1.2.2] at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) ~[ProxiedSession.class:1.2.2] at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) ~[ProxiedSession.class:1.2.2] at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) ~[ProxiedSession.class:1.2.2]	Bug	OPEN	Major	Unresolved	1.2.2	None	None	None	linux, ubuntu, tomcat	0	Unassigned	Kill Bill
SHIRO-511	SHIRO	Add shiro cachemanager implement	I've made a redis cache implement and wrote it in caching html (http://svn.apache.org/repos/asf/shiro/site/trunk/caching.html). Please help to add this patch to shiro-doc	Improvement	CLOSED	Minor	Fixed	None	None	Caching	patch		0	Unassigned	alexxiyang
SHIRO-512	SHIRO	Race condition in Shiro's web container session timeout handling	I cannot find anywhere that Shiro uses HttpSessionListener to trap sessionDestroyed event from the container. I believe this is leading to a rare race condition in my application, as Shiro thinks the session is still active, but in reality, the web session has been destroyed. Code: SecurityUtils.getSubject().getPrincipal(); Relevant bit of stack trace: Caused by: org.apache.shiro.session.InvalidSessionException: java.lang.IllegalStateException: PWC2778: getAttribute: Session already invalidated at org.apache.shiro.web.session.HttpServletSession.getAttribute(HttpServletSession.java:148) at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121) at org.apache.shiro.subject.support.DelegatingSubject.getRunAsPrincipalsStack(DelegatingSubject.java:469) at org.apache.shiro.subject.support.DelegatingSubject.getPrincipals(DelegatingSubject.java:153) at org.apache.shiro.subject.support.DelegatingSubject.getPrincipal(DelegatingSubject.java:149) Link to the mailing list thread: http://shiro-user.582556.n2.nabble.com/Possible-race-condition-in-Shiro-s-web-container-session-timeout-handling-td7580138.html	Bug	OPEN	Minor	Unresolved	1.2.2, 1.2.3	None	Authentication (log-in)	None		0	Unassigned	Lenny Primak
SHIRO-513	SHIRO	Misleading error message when using custom WebEnvironment	Found while reading the code in EnvironmentLoader#createEnvironment():         Class<?> clazz = determineWebEnvironmentClass(sc);         if (!MutableWebEnvironment.class.isAssignableFrom(clazz)) {             throw new ConfigurationException("Custom WebEnvironment class [" + clazz.getName() +                     "] is not of required type [" + WebEnvironment.class.getName() + "]");         } The message says you need a WebEnvironment, the check (and later code) however requires _Mutable_WebEnvironment.	Bug	CLOSED	Trivial	Fixed	1.2.3	1.3.0	Web	None		0	Unassigned	Andreas Kohn
SHIRO-514	SHIRO	ExecutorServiceSessionValidationScheduler should create threads with a configurable name	While looking through thread dumps I noticed a bunch of 'Thread-[number]' threads. From the heap dump I took I identified them as coming from the ExecutorServiceSessionValidationScheduler, which creates new threads without setting their name. This is confusing, so attached patch makes the thread name (or better: a prefix of it) configurable, and sets a reasonable default.	Improvement	RESOLVED	Major	Fixed	1.2.3	1.3.0	Session Management	easyfix patch		0	Unassigned	Andreas Kohn
SHIRO-515	SHIRO	ExecutorServiceSessionValidationScheduler leaks resources due to improper synchronization	Related to SHIRO-514, which talks about a bunch of threads with "ugly" names. This ticket is about why there are multiple of those in the first place. From my heap dump I can see about 71 ThreadFactory instances of ExecutorServiceSessionValidationScheduler$1, each actually linking to a distinct ScheduledThreadPoolExecutor, and each running one thread. However, there are only 2 ExecutorServiceSessionValidationScheduler instances. The problem is in AbstractValidatingSessionManager#enableSessionValidationIfNecessary(): if this method is called from multiple threads, and those threads race in such a way that multiple ones see an unset/not-yet-enabled scheduler, they will each run #enableSessionValidation(), which creates a scheduler, sets it (still disabled), and then runs SessionValidationScheduler#enableSessionValidation(), which might set its 'enabled' flag to true. In the case of the default ExecutorServiceSessionValidationScheduler this creates the thread pool executor, and schedules the validation run iff there is a positive interval configured. The race is not particularly unlikely when an application using shiro is deployed and many requests hit it immediately. As Shiro is leaking both JVM and system resources here it's also not a benign race. The attached patch changes the sessionValidationScheduler to be volatile, and makes #enableSessionValidation() as well as #disableSessionValidation() synchronized. #enableSessionValidationIfNecessary() is not synchronized in the common case to avoid too much blocking when everything is properly warmed up, but rather uses double-checked locking. Shiro targets a 1.5 JVM from what I can see, so this should be ok. Note that callers can possibly still produce issues by modifying the field directly. Additionally the ExecutorServiceSessionValidationScheduler was changed to report 'enabled' when someone tried enabling the validation, regardless of whether the interval was 0 or not. The rationale here is that someone might try disabling the validation by setting the interval, which would mean useless calls to #enableSessionValidation() in every request.	Bug	RESOLVED	Critical	Fixed	1.2.3	1.3.0	Session Management	patch		0	Unassigned	Andreas Kohn
SHIRO-516	SHIRO	Explicitly specify the version of aspectjtools to avoid build warning	When building the shiro-aspectj module there is a warning logged: [WARNING] bad version number found in /home/andreas/project-4.3/shiro/repository/org/aspectj/aspectjrt/1.6.12/aspectjrt-1.6.12.jar expected 1.6.11 found 1.6.12 This warning is caused by a difference in versions used by the plugin and the version used by shiro, and as per http://jira.codehaus.org/browse/MASPECTJ-106 can and should be fixed by explicitly adding a dependency on the correct aspectjtools version for the plugin. See attached patch.	Improvement	RESOLVED	Trivial	Fixed	1.2.3	1.2.5	None	build easyfix patch		0	Unassigned	Andreas Kohn
SHIRO-517	SHIRO	Caused by: java.lang.NoClassDefFoundError: Lcom/google/inject/internal/util/$ImmutableList;	I tried Shiro with Guice 4.0-SNAPSHOT It does not work, below is stack trace. 27-Aug-2014 09:27:15.957 SEVERE [localhost-startStop-1] org.apache.catalina.core.StandardContext.listenerStart Exception sending context initialized event to listener instance of class com.sun.faces.config.ConfigureListener java.lang.RuntimeException: java.lang.NoClassDefFoundError: Lcom/google/inject/internal/util/$ImmutableList; at com.sun.faces.config.ConfigureListener.contextInitialized(ConfigureListener.java:280) at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4738) at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5158) at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:726) at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:702) at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:697) at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:579) at org.apache.catalina.startup.HostConfig$DeployDescriptor.run(HostConfig.java:1744) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.NoClassDefFoundError: Lcom/google/inject/internal/util/$ImmutableList; at java.lang.Class.getDeclaredFields0(Native Method) at java.lang.Class.privateGetDeclaredFields(Class.java:2570) at java.lang.Class.getDeclaredFields(Class.java:1903) at com.google.inject.spi.InjectionPoint.getInjectionPoints(InjectionPoint.java:661) at com.google.inject.spi.InjectionPoint.forInstanceMethodsAndFields(InjectionPoint.java:366) at com.google.inject.spi.InjectionPoint.forInstanceMethodsAndFields(InjectionPoint.java:385) at com.google.inject.internal.BindingBuilder.toProvider(BindingBuilder.java:110) at com.google.inject.internal.BindingBuilder.toProvider(BindingBuilder.java:100) at com.google.inject.internal.BindingBuilder.toProvider(BindingBuilder.java:43) at com.google.inject.multibindings.Multibinder$RealMultibinder.configure(Multibinder.java:269) at com.google.inject.spi.Elements$RecordingBinder.install(Elements.java:253) at com.google.inject.multibindings.Multibinder.newSetBinder(Multibinder.java:136) at com.google.inject.multibindings.MapBinder.newMapBinder(MapBinder.java:154) at com.google.inject.multibindings.MapBinder.newMapBinder(MapBinder.java:168) at org.apache.shiro.guice.BeanTypeListener.beanTypeMapBinding(BeanTypeListener.java:130) at org.apache.shiro.guice.BeanTypeListener.bindBeanType(BeanTypeListener.java:126) at org.apache.shiro.guice.ShiroModule.bindBeanType(ShiroModule.java:151) at org.apache.shiro.guice.web.ShiroWebModule.configureShiro(ShiroWebModule.java:119) at org.apache.shiro.guice.ShiroModule.configure(ShiroModule.java:73) at com.google.inject.PrivateModule.configure(PrivateModule.java:100) at com.google.inject.spi.Elements$RecordingBinder.install(Elements.java:253) at com.google.inject.spi.Elements.getElements(Elements.java:108) at com.google.inject.internal.InjectorShell$Builder.build(InjectorShell.java:135) at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:104) at com.google.inject.Guice.createInjector(Guice.java:99) at com.google.inject.Guice.createInjector(Guice.java:73) at com.google.inject.Guice.createInjector(Guice.java:62) at com.thjug.bgile.guice.GuiceInjectorFactory.<clinit>(GuiceInjectorFactory.java:37) at com.thjug.bgile.guice.GuiceInjectionProvider.<clinit>(GuiceInjectionProvider.java:18) at java.lang.Class.forName0(Native Method) at java.lang.Class.forName(Class.java:340) at com.sun.faces.util.Util.loadClass(Util.java:325) at com.sun.faces.spi.InjectionProviderFactory.getProviderInstance(InjectionProviderFactory.java:149) at com.sun.faces.spi.InjectionProviderFactory.createInstance(InjectionProviderFactory.java:117) at com.sun.faces.config.ConfigManager.initialize(ConfigManager.java:361) at com.sun.faces.config.ConfigureListener.contextInitialized(ConfigureListener.java:221) ... 13 more Caused by: java.lang.ClassNotFoundException: com.google.inject.internal.util.$ImmutableList at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1284) at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1132) ... 49 more	Bug	RESOLVED	Major	Fixed	1.2.3	1.2.4	Integration: Guice	None	mac os x, java 1.8, guice	0	Kalle Korhonen	Peerapat
SHIRO-518	SHIRO	Shiro-CAS: Security Problem in cas-client-core versions older than 3.3.2	There is a Security Problem in cas-client-core for all versions before 3.3.2. Please update version of cas-client-core in pom.xml of shiro-cas. For more information, please visit the following links: https://issues.jasig.org/browse/CASC-228 https://www.mail-archive.com/cas-user@lists.jasig.org/msg17338.html	Bug	CLOSED	Blocker	Fixed	1.2.0, 1.2.1, 1.2.2	1.2.4	Authentication (log-in), Web	None		0	Unassigned	Philipp Berger
SHIRO-519	SHIRO	ThreadContext.setResources() doesn't handle empty maps correctly	ThreadLocal.setResources() doesn't handle the case where resources is want to be cleared. This could be used in situation when session is switched temporary to another thread. One could do: old = ThreadContext.getResources(); ThreadContext.setResources(new); // do the magic ThreadContext.setResources(old); If the old resources was empty it will leave new resources in place. Fix would be trivial:     public static void setResources(Map<Object, Object> newResources) {         if (CollectionUtils.isEmpty(newResources)) {             return;         }         resources.get().clear();         resources.get().putAll(newResources);     } ->     public static void setResources(Map<Object, Object> newResources) {         resources.get().clear();         if (CollectionUtils.isEmpty(newResources)) {             return;         }         resources.get().putAll(newResources);     }	Bug	OPEN	Minor	Unresolved	1.2.2, 1.2.3	None	Session Management	None		0	Unassigned	Vesa Jääskeläinen
SHIRO-52	SHIRO	Verify all samples deploy/run successfully	Ensure that the sample applications deploy and run succesfully now that the modular build has re-enabled them.	Task	CLOSED	Major	Fixed	None	1.0.0	None	None		0	Alan Cabrera	Les Hazlewood
SHIRO-520	SHIRO	Multiple Set-Cookie headers for the same cookie	When stopping an old session and starting a new one in the same API request like public boolean login() {   SecurityUtils.getSubject()   session.stop()   UsernamePasswordToken token = new UsernamePasswordToken(username, plaintextPassword);   subject.login(token); } the response headers will include two Set-Cookie entries, one which removes the old session id (value=deleteMe and expiryTime=<in the past>) and one which sets the new session id. This seems to have been fine previously but for example Safari on iOS 8 seems to reverse the order of them when handling the response and effectively making it impossible to stay authenticated. According to http://tools.ietf.org/html/rfc6265, "Servers SHOULD NOT include more than one Set-Cookie header field in the same response with the same cookie-name.". If they do, the client can/will just override the cookie value from subsequent Set-Cookie headers. Sending multiple Set-Cookie headers would then make the correct functionality be dependent on the client sorting the headers correctly which brings us to (from the same RFC) 2. The user agent SHOULD sort the cookie-list in the following order: Cookies with longer paths are listed before cookies with shorter paths. Among cookies that have equal-length path fields, cookies with earlier creation-times are listed before cookies with later creation-times. NOTE: Not all user agents sort the cookie-list in this order, but this order reflects common practice when this document was written, and, historically, there have been servers that (erroneously) depended on this order. For (just a little) more context, see http://shiro-user.582556.n2.nabble.com/Regarding-multiple-Set-Cookie-headers-and-Safari-on-iOS-8-td7580252.html.	Bug	OPEN	Major	Unresolved	1.2.1, 1.2.2	None	Web	None		0	Unassigned	Sebastian Ganslandt
SHIRO-521	SHIRO	Allow specific permissions for wsdl / wadl & xsd	ShiroFilterFactoryBean should have a setFilterChainResolver to allow overriding the PathMatchingFilterChainResolver being created in the createInstance method. I would like to allow wsdl, wadls and xsds for anon while the same URI <bean id="shiroFilter" class="com.railinc.shiro.spring.web.ShiroFilterFactoryBean"> <property name="securityManager" ref="securityManager"/> <property name="pathWithParamMatchingFilterChainResolver " ref="pathWithParamMatchingFilterChainResolver " <property name="filterChainDefinitions"> <value> <!-- allow access to wsdls, wadls and schemas --> /services/validation/r2009v1?_wadl = noSessionCreation, anon /services/soap/equipmentValidationService/r2009v1?wsdl = noSessionCreation, anon <!-- replace = in the path with ? for the pattern matcher --> /services/soap/equipmentValidationService/r2009v1?xsd?../schemas/ExampleEquipmentValidation.xsd = noSessionCreation, anon /services/soap/equipmentValidationService/r2009v1?xsd?./bindingMapping.xsd = noSessionCreation, anon /services/soap/equipmentValidationService/r2009v1?xsd?./ExampleRailincEquipment.xsd = noSessionCreation, anon /** = noSessionCreation, authcBasic </value> </property> </bean> Then I could extend PathMatchingFilterChainResolver as such public class PathWithParamMatchingFilterChainResolver extends PathMatchingFilterChainResolver { @Override protected String getPathWithinApplication(ServletRequest request) { HttpServletRequest httpReq =WebUtils.toHttp(request); StringBuilder completeURI = new StringBuilder(); completeURI.append( WebUtils.getPathWithinApplication(httpReq)); String queryStr = httpReq.getQueryString(); if(!StringUtils.isEmpty(queryStr)) { completeURI.append("?"); completeURI.append(queryStr); } return completeURI.toString(); } }	Bug	OPEN	Minor	Unresolved	1.2.2, 2.0.0	None	Web	None		0	Unassigned	Barry Knapp
SHIRO-522	SHIRO	ObjectPrincipal in ShiroHttpServletRequest	ObjectPrincipal.getName() should be returning the user name as how it is currently used in ShiroHttpServletRequest.getRemoteUser(). Principal.toString() returns profile type instead of the username	Bug	CLOSED	Minor	Not A Problem	1.2.2, 1.2.3	None	Authorization (access control)	None		0	Unassigned	Qinfeng Chen
SHIRO-523	SHIRO	Create annotation which allows access for both Guests and users.	At the moment, it is necessary to have the anonymous filter explicitly configured for an url. There is no annotation for marking publicly available methods. This way, it is not possible to do an annotation-only configuration of methods. The optimal solution would be that everything is filtered through an auth filter, but methods annotated with (at)Anonymous for example do not lead to a redirection to the login url. This makes sense in cases where you want to have a default config set in a base artifact integrating Shiro and applications using that artifact should be enabled to do the actual configuration of which methods are accessible for anonymous users. RequiresGuest is not sufficient, as it will deny access to authenticated users. The lack of this feature makes it very hard to incorporate Shiro into a web framework providing a sane default configuration (filter everything through authc/authc_basic) and still let the user decide where to make exemptions.	New Feature	OPEN	Major	Unresolved	1.2.3	None	Authentication (log-in), (2)	features usability		0	Unassigned	Markus W Mahlberg
SHIRO-524	SHIRO	When I put the project packed into war, deployed to the tomcat7 cannot get the user.	When I put the project into the .war package and deplyoed to tomcat,i cannot get the user by SecurityUtils.getSubject().getPrincipal().that don't have any error. there are my session config: <!-- 会话DAO --> <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"> <property name="activeSessionsCacheName" value="shiro-activeSessionCache" /> <property name="sessionIdGenerator" ref="sessionIDGenerator" /> </bean> <!-- 会话验证调度器 --> <bean id="sessionValidationScheduler" class="com.cz073586.security.session.QuartzSessionValidationSchedulerEx"> <property name="sessionValidationInterval" value="1800000" /> <property name="sessionManager" ref="sessionManager" /> </bean> <!-- session管理 --> <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> <!-- # 3,600,000 milliseconds = 1 hour --> <property name="globalSessionTimeout" value="7200000" /> <property name="sessionIdCookieEnabled" value="true" /> <!-- <property name="sessionIdCookie" ref="sessionIdCookie" /> --> <property name="sessionValidationSchedulerEnabled" value="true" /> <property name="sessionValidationScheduler" ref="sessionValidationScheduler" /> <property name="sessionDAO" ref="sessionDAO" /> </bean>	Question	CLOSED	Major	Invalid	1.2.1	None	Session Management	None	tomcat	0	Unassigned	liyunfang
SHIRO-525	SHIRO	When no user name is provided, JndiRealm causes an IllegalStateException to be thrown	We are using NTLM authentication with Waffle using a filter. If waffle can't succeed at the integrated authentication, a form is provided. When the integrated auth fails, it is typically because the user is not part of the domain. As a result, there is no username discovered/provided. When this occurs, Shiro is throwing an IllegalStateException as shown in the stacktrace below. By throwing an IllegalStateException, the normal flow of error handling is bypassed and the unchecked exception propagates out of the servlet, improperly generating a server error instead of a standard AuthenticationException. If a principal is not provided, a warning/error can be logged, but the framework should generate the standard AuthenticationException forcing the client to be challenged to reauthenticate. 16 Jan 2015 14:48:15,872 [] - Realm [org.apache.shiro.realm.ldap.JndiLdapRealm@3630843] threw an exception during a multi-realm authentication attempt: java.lang.IllegalArgumentException: principal argument cannot be null. at org.apache.shiro.subject.SimplePrincipalCollection.add(SimplePrincipalCollection.java:104) at org.apache.shiro.subject.SimplePrincipalCollection.(SimplePrincipalCollection.java:59) at org.apache.shiro.authc.SimpleAuthenticationInfo.(SimpleAuthenticationInfo.java:74) at org.apache.shiro.realm.ldap.JndiLdapRealm.createAuthenticationInfo(JndiLdapRealm.java:412) at org.apache.shiro.realm.ldap.JndiLdapRealm.queryForAuthenticationInfo(JndiLdapRealm.java:377) at org.apache.shiro.realm.ldap.JndiLdapRealm.doGetAuthenticationInfo(JndiLdapRealm.java:295) at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568) at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doMultiRealmAuthentication(ModularRealmAuthenticator.java:219) at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:269) at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198) at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106) at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270) at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256) at org.apache.shiro.web.filter.authc.AuthenticatingFilter.executeLogin(AuthenticatingFilter.java:53) at waffle.shiro.negotiate.NegotiateAuthenticationFilter.onAccessDenied(NegotiateAuthenticationFilter.java:168)	Bug	OPEN	Minor	Unresolved	1.2.2	None	Realms	None		0	Unassigned	David Cole
SHIRO-526	SHIRO	Handle Anonymous / Guest user permissions.	From: Currently Shiro does NOT allow for an anonymous user (i.e. principal == null) to have permissions. This makes things more challenging for applications that are base around permissions (i.e. WildCardPermission strings) From: http://shiro-user.582556.n2.nabble.com/Can-anonymous-user-have-permissions-td7580431.html I feel like Shiro should support this kind of use case. And it would just add new flag to subject, along to existing: isAuthenticated (have principal and authenticated = true) isRemembered (have principal and authenticated = false) isAnonymous (have anonPrincipal and authenticated = false) isGuest (have nothing) In the above case i think we should collapse the idea of anonymous and guess into one 'guest' to match other naming in the code base. This also implies that Permission checking would be allowed if the subject does NOT have a principal: https://github.com/apache/shiro/blob/trunk/core/src/main/java/org/apache/shiro/subject/support/DelegatingSubject.java#L162	Improvement	OPEN	Minor	Unresolved	None	None	Authentication (log-in), (1)	None		0	Unassigned	Brian Demers
SHIRO-527	SHIRO	Shiro Website Cleanup	These are a few simple fixes I made for the Shiro website.	Documentation	RESOLVED	Trivial	Fixed	None	None	Documentation	patch		0	Unassigned	Christian Wolfe
SHIRO-528	SHIRO	Foward from a noSessionCreation to a path that allow should allow create session	If I define a error-page that need session for example with jsf: <error-page> <error-code>404</error-code> <location>/jsf/my-notfound.xhtml</location> </error-page> Define filters as: [urls] /jsf/login.xhtml = authc /integrations-rest/** = anon, noSessionCreation /jsf/my-notfound.xhtml = anon /** = authc If I try to GET a not found url from /integrations-rest/something it will redirect to /jsf/my-notfound.xhtml but it fails once it can't create a session. It should clean the request attribute in the afterCompletion method. So after foward it will reaply the filters request.removeAttribute(DefaultSubjectContext.SESSION_CREATION_ENABLED);	Bug	OPEN	Major	Unresolved	1.2.3	None	Web	patch	jsf, rest	0	Unassigned	Janario Oliveira
SHIRO-529	SHIRO	FormFilter GET to login request should redirect to success if it is already authenticated	Sometimes the user save the login page as bookmark. So every time it is accessed from bookmark it should place the credential even it is already authenticated. It would be great if Shiro detects that and foward to success page.	Improvement	OPEN	Major	Unresolved	1.2.3	None	Web	patch		0	Unassigned	Janario Oliveira
SHIRO-53	SHIRO	AbstractValidatingSessionManager - auto-delete invalid sessions to prevent orphans	The current behavior on bulk session validation is to validate each active Session, and if it has been stopped/expired as a result of validation, the session is persisted back to the back-end datastore via a SessionDAO. SessionDAO#delete is never called. The default behavior of bulk validation should be to just delete all sessions who's last access timestamp is older than the session timeout value, as most end-users will not want to query or access session data after the session is invalidated. The existing behavior is in place to allow historical reporting of user access logs based on session, but the framework itself does not make use of any such feature, and most end-users will not need such functionality. The existing behavior should remain, but only execute based on a configuration flag that is turned off by default.	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-530	SHIRO	INI parser does not properly handled backslashes at end of values	The backslash character is overloaded for use as a continuation delimiter as well as an escape character. However, the parsing logic does not presently handle this character consistently, which prevents the use of odd numbers of backslashes at the end of values. Here is a matrix of examples: Original value Parsed value Notes key=value\ key=value Backslash treated as continuation delimiter key=value\\ key=value\\ Backslashes treated as literal characters key=value\\\ key=value\\ Final backslash treated as continuation delimiter, other backslashes treated as literal characters key=value\\\\ key=value\\\\ Backslashes treated as literal characters There is a comment in Ini.Section#isContinued(String) that states: //find the number of backslashes at the end of the line. If an even number, the //backslashes are considered escaped. If an odd number, the line is considered continued on the next line However, there is no unescaping logic in either Ini.Section#toMapProps(String) (which calls #isContinued) or IniSection#splitKeyValue(String).	Bug	OPEN	Major	Unresolved	1.2.3	None	Configuration	None		0	Unassigned	atomicknight
SHIRO-531	SHIRO	Add getter and setter for SimpleAuthenticationInfo and SimpleAuthorizationInfo in SimpleAccount	If you want to implement your own Account class which is extending form SimpleAccount you have no access to SimpleAuthenticationInfo and SimpleAuthorizationInfo. As these are the two classes used in nearly every function you have to completely copy the class to set your own class for authzInfo which in my case would be also extending SimpleAuthorizationInfo. An alternative would be to make these variables protected and not private.	Improvement	OPEN	Minor	Unresolved	1.2.3	None	Authentication (log-in), (2)	improvement		0	Unassigned	Severin Wünsch
SHIRO-532	SHIRO	WebUtils should log the saved url and fordbid the login-url	I have a bug, that sometime I get after login a redirect to the login page. I tried to track it down, but unfortunately the problem doesn't happens in debugger and I can't log what happens. So it would be great to have more Logs in WebUtil and create a mechanism to prevent a redirect to the login-url. At the moment I can't see how this is prevented.	Improvement	OPEN	Major	Unresolved	1.2.3	None	Web	None	java 1.7, windows	0	Unassigned	Niels Anonymous
SHIRO-533	SHIRO	shiro-features jar missing on the download page	We are trying to use Shiro in Apache Felix but are not able to find the OSGi bundle for it. The link provided on the download page: http://shiro.apache.org/download.html shiro-features is pointing to an xml and not a bundle/jar http://repo1.maven.org/maven2/org/apache/shiro/shiro-features/1.2.3/shiro-features-1.2.3-features.xml where can I find the OSGi bundle for Shiro?	Question	CLOSED	Major	Not A Problem	1.2.3	None	Configuration, (1)	None		0	Francois Papon	Parveen Dudy
SHIRO-534	SHIRO	Provide better documentation around permissions	I was playing around with custom realms and I setup the following AuthorizingRealm:- public class TestRealm extends AuthorizingRealm {      @Override     protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken inToken) throws AuthenticationException     {         UsernamePasswordToken upToken = (UsernamePasswordToken) inToken;          if (upToken.getUsername().equals("Kamal") || upToken.getUsername().equals("NotKamal"))             return new SimpleAuthenticationInfo(upToken.getUsername(), upToken.getPassword(), getName());          return null;     }      @Override     protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection inPrincipals)     {         String username = (String) inPrincipals.fromRealm(getName()).iterator().next();         SimpleAuthorizationInfo authzInfo = new SimpleAuthorizationInfo();         authzInfo.addRole("User");          if (username.equals("Kamal"))         {             authzInfo.addStringPermission("PRODMA:READ:AU");             authzInfo.addStringPermission("PRODMA:WRITE:AU");             authzInfo.addStringPermission("PRODMA:READ:KB");             authzInfo.addStringPermission("PRODMA:WRITE:KB");             authzInfo.addStringPermission("SUPPMA:READ:KB");         }         else         {             authzInfo.addStringPermission("PRODMA:READ,WRITE,*:AU,*");         }          return authzInfo;     } } I then setup the following resource (I am using Guice + Jersey):- @Path("/{client}/shiroResource") public class ShiroResource {     private static final Logger LOG = LoggerFactory.getLogger(ShiroResource.class);     private HttpSession mSession;      @Inject     public ShiroResource(HttpSession inSession)     {         mSession = inSession;     }      @POST     @Path("requiresProdma.do")     @Produces(MediaType.APPLICATION_JSON)     @Consumes(MediaType.APPLICATION_JSON)     @RequiresPermissions({ "PRODMA:*:*" })     public String prodmaRequired()     {         return "Success";     }      @GET     @Path("requiresSuppma.do")     @Produces(MediaType.APPLICATION_JSON)     @Consumes(MediaType.APPLICATION_JSON)     @RequiresPermissions("PRODMA:*")     public String suppmaRequired()     {         return "Success";     } } Now, if I login as NotKamal I have access to ShiroResource,suppmaRequired, but if I login as Kamal, I won't. It took me a while to work out that I needed to specify the permission string like this:-             authzInfo.addStringPermission("PRODMA:READ,WRITE,*:AU,*"); i feel that this is a bit unintuitive, but I guess it is what it is. Can we provide better examples of setting up a custom realm with permissions? Preferably one which supports custom wildcards. Thanks. Kamal.	Documentation	OPEN	Major	Unresolved	None	None	Documentation	documentation		0	Unassigned	Kamal
SHIRO-535	SHIRO	auto filled username and password field in gsp (Groovy Server Page) page	Hello Team, I am JavaEE Software Engineer. I am using Apache Shiro 1.2.1 with Grails Framework. I have Implemented RememberMe functionality in my application on login.gsp page and it's work fine for me but when I am going to use another form like register.gsp which contains username and password field then it's display me with auto value which was used by me on login.gsp with remember me functionality so can you help that how can I display username and password field only on login.gsp and prevent username and password field auto value on register.gsp	Bug	OPEN	Major	Unresolved	1.2.1	None	RememberMe, (1)	None	linux, cinnamon, javaee, grai	0	Unassigned	Piyush Chaudhari
SHIRO-536	SHIRO	Session token in url	Hello Team, As we know that this is one of the vulnerability challenges where we are supposed to remove JSESSIONID from the url. I observed that there is a possibility with the plain servlet api 3.x version with the web.xml configuration which disables the JSESSIONID from the url is <session-config> <tracking-mode>COOKIE</tracking-mode> </session-config> But shiro will identify and reads the above configuration if and only if shiro xml contains session manager configuration with the class <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager"></bean> But the limitations with above class are.... 1) No session listeners configuration 2) No Session dao configuration 3) No Session validation scheduler configuration 4) No invalid session deletion configuration ... ... etc But removing session token from the url is possible with this. To achieve all the above limitations i am using the following session manager <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"></bean> But with this i unable to hide session token from the url as it doesnt read web.xml configuration and context.xml...etc Does anybody having any work around this or is there any other session manger which will include both above 2 session managers functionality so that i can achieve all the above limitations and the session token issue. I am facing the issues with these insufficient configuration, Could anybody please suggest the way forward..	Bug	RESOLVED	Major	Duplicate	1.2.3	None	Authentication (log-in), (1)	security		0	Unassigned	Nagaraju Kurma
SHIRO-537	SHIRO	Class load issue in OSGI in ClassUtils	I had the same issue that is described in: http://stackoverflow.com/questions/20653146/how-to-load-class-in-an-osgi-e4-environment-while-using-shiro where it was suggested a bug was entered but never was, so here it is. A similar workaround worked for me: Thread currentThread = Thread.currentThread(); ClassLoader originalCl = currentThread.getContextClassLoader(); try { Class<?> clazz = ((InfrastructureServer) server).getBundleContext().getBundle() .loadClass(CustomRolePermissionResolver.class.getName()); ClassLoader bundleClassLoader = clazz.getClassLoader(); currentThread.setContextClassLoader(bundleClassLoader); webappContext.deploy(httpServer); } catch (ClassNotFoundException e) { // TODO Auto-generated catch block e.printStackTrace(); } finally { currentThread.setContextClassLoader(originalCl); } In addition, commons-collections 3.2.1 must be used in an OSGi environment, I suggest bumping your dependency.	Bug	OPEN	Major	Unresolved	1.2.3	1.4.1	None	None	felix	0	Francois Papon	Tom Nelson
SHIRO-538	SHIRO	AD and JndiLdapContextFactory don't work well together	All of the documentation I have read says to do something similar to this when setting up AD: [main] contextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory contextFactory.url = ldaps://ad.domain.com:636 contextFactory.systemUsername = shiro@domain.com contextFactory.systemPassword = password contextFactory.environment[java.naming.security.protocol] = ssl realm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm realm.ldapContextFactory = $contextFactory realm.searchBase = "CN=Users,DC=DOMAIN,DC=com" realm.groupRolesMap = "CN=ShiroUsers,CN=Users,DC=DOMAIN,DC=com":"ShiroUsersRole" It doesn't work. The reason is that searchBase is not exposed in the JndiLdapContextFactory, but it still overrides searchBase. Thus when injecting a JndiLdapContextFactory into an ActiveDirectoryRealm, it is not possible to set a searchBase without overriding JndiLdapContextFactory. And the worst thing is, this isn't even needed. If you set the url in the AD realm to ldaps://blah:636, it automatically uses SSL and a context factory isn't even needed. Suggest updating the docs where appropriate, and suggest fixing JndiLdapContextFactory so that it can handle SearchBase. Thanks.	Bug	OPEN	Minor	Unresolved	1.2.3	None	Realms	None		0	Unassigned	Russell Miller
SHIRO-539	SHIRO	User passwords visible in JVM as String	1-Run a web application server configured with Shiro.ini 2-take a memory dump 3-parse memory dump using eclipse memory analyzer 4-Open Object query tab 5- Execute 'select * from org.apache.shiro.authc.SimpleAuthenticationInfo' statement 6-As you will see in attachment user password is in human readable format. Didnt test it yet but using char array instead of string and after zero filling and then forcing gc can help I think. I wasnt sure that this is a valid issue so I raise the ticket under brainstorming. thank you	Brainstorming	OPEN	Minor	Unresolved	1.2.4	None	Authentication (log-in), (1)	features security		0	Unassigned	burak sarac
SHIRO-54	SHIRO	SessionsSecurityManager should implement SessionManager interface	just as the AuthenticatingSecurityManager implements Authenticator and AuthorizingSecurityManager implements Authorizer, so should SessionsSecurityManager implement SessionManager. This is needed to ensure client-tier proxying can work with a single instance of SecurityManager injected as the target object being proxied.	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-540	SHIRO	Allow for authentication strategy to stop checking realms after first success	The current ModularRealmAuthenticator will continue to check all realms for authc. While this is handy in some cases, it is also desirable not continue checking realms after the first successful realm (especially when using an external auth source like LDAP or a DB) I've worked around this in the past by extending an above authenticator to return after the first success. As well as put a potential solution on this branch: https://github.com/bdemers/shiro/commit/b8a631877fee239413b45dbfc118de2759ab9c75 (however this would need to be updated for 2.0) Example workaround pre 2.0: https://github.com/sonatype/nexus-oss/blob/master/components/nexus-security/src/main/java/org/sonatype/nexus/security/authc/FirstSuccessfulModularRealmAuthenticator.java	Improvement	OPEN	Minor	Unresolved	None	2.0.0	Authorization (access control)	None		0	Unassigned	Mariano Tewel
SHIRO-541	SHIRO	Fixes for webapp tutorial and 10-minute tutorial	The attached patch fixes: broken images out dated Admin Dashboard UI references mis-spellings references to cmd+c for mac (in terminal and iterm it's ctl-c on macs, just like other systems) replaced application creation with using the existing default application. This addresses an issue some users were having because when you create a new Stormpath account, the default max applications is 1. Therefore, when users were following the instructions and trying to create a new Stormpath Application, it was failing due to the default subscription limit. Now, the tutorial walks them through using the API to retrieve the href to the existing (default) Stormpath Application.	Improvement	RESOLVED	Major	Fixed	None	None	None	patch		0	Unassigned	Micah Silverman
SHIRO-542	SHIRO	Build failure - missing shiro-core-2.alpha.0-SNAPSHOT-tests.jar	Uncommented targets in pom.xml of core project is breaking the build on the trunk, if you don’t have shiro-core-2.alpha.0-SNAPSHOT-tests.jar in local repository. Verify: delete "shiro-core-2.alpha.0-SNAPSHOT-tests.jar" from local repository and run mvn install.	Bug	OPEN	Minor	Unresolved	2.0.0	None	Sample Apps	None		0	Unassigned	Thorbjørn Tau
SHIRO-543	SHIRO	Make build NOT require build requires ~/.m2/toolchains.xml by default	Reported on mailing list. Users cannot build samples (or anything from the Shiro source tree) without a ~/.m2/toolchains.xml file. This plugin requirement was added to work around CI / release issues. It looks like a valid fix, but the plugin def should likely be moved to a maven profile so a basic checkout and build will work.	Bug	RESOLVED	Major	Fixed	2.0.0, 1.2.4	None	None	None		0	Brian Demers	Brian Demers
SHIRO-544	SHIRO	WeakHashMap 100% CPU utilisation in ShiroModule	ShiroModule's destroyables member variable is backed by an unsynchronized WeakHashMap, which can cause endless loops. See: https://java.net/jira/browse/JAVASERVERFACES-2544 https://bugs.eclipse.org/bugs/show_bug.cgi?id=397439 This means that the add(Destroyable) method can cause deadlock. This issue is hard to workaround because the destroy() method is final so we cannot simply override the behavior. We were able to fix this problem by making both the add() and destroy() methods synchronized after forking the project.	Bug	OPEN	Major	Unresolved	1.2.4	None	Integration: Guice	None		0	Jared Bunting	Guillaume Leger
SHIRO-545	SHIRO	JavaEnvironment version getter	If Shiro is running in Java 8 it assumes that the major version is 1.3, because this case it's not included in the if blocks and goes to the default version which is 1.3, also the " if (version.indexOf("1.7.") != -1) {" should be contains, instead of indexOf, contains is highly more readable, so the code should be something like ..*/ {code:title=JavaEnvironment.java|borderStyle=solid} /** Constant identifying the 1.8 JVM. */ public static final int JAVA_18 = 5; /** The virtual machine version, i.e. <code>System.getProperty("java.version");</code>. */ private static final String version; /** The virtual machine <em>major</em> version. For example, with a <code>version</code> of <code>1.5.6_10</code>, this would be <code>1.5</code> */ private static final int majorVersion; /** Static code initialization block that sets the <code>version</code> and <code>majorVersion</code> Class constants upon initialization. */ static Unknown macro: { version = System.getProperty("java.version"); // version String should look like "1.4.2_10" if (version.contains("1.8.")) { majorVersion = JAVA_18; } else if (version.contains("1.7")){ majorVersion = JAVA_17; } else if (version.contains("1.6.")) { majorVersion = JAVA_16; } else if (version.contains("1.5.")) { majorVersion = JAVA_15; } else if (version.contains("1.4.")) { majorVersion = JAVA_14; } else { // else leave 1.3 as default (it's either 1.3 or unknown) majorVersion = JAVA_13; } }	Bug	RESOLVED	Minor	Fixed	1.2.4	1.2.6	Cryptography & Hashing	easyfix newbie patch	java 1.8	0	Unassigned	Ariel Isaac
SHIRO-546	SHIRO	DefaultWebSessionManager onStart might produce nullPointer Exception	DefaultWebSessionManager#onStart() when you get the HttpServletRequest it might be null a throw a null pointer exception so it might need a little validation from    @Override     protected void onStart(Session session, SessionContext context) {         super.onStart(session, context);          if (!WebUtils.isHttp(context)) {             log.debug("SessionContext argument is not HTTP compatible or does not have an HTTP request/response " +                     "pair. No session ID cookie will be set.");             return;          }         HttpServletRequest request = WebUtils.getHttpRequest(context);         HttpServletResponse response = WebUtils.getHttpResponse(context);          if (isSessionIdCookieEnabled()) {             Serializable sessionId = session.getId();             storeSessionId(sessionId, request, response);         } else {             log.debug("Session ID cookie is disabled.  No cookie has been set for new session with id {}", session.getId());         }          request.removeAttribute(ShiroHttpServletRequest.REFERENCED_SESSION_ID_SOURCE);         request.setAttribute(ShiroHttpServletRequest.REFERENCED_SESSION_IS_NEW, Boolean.TRUE);     } to     @Override     protected void onStart(Session session, SessionContext context) {         super.onStart(session, context);          if (!WebUtils.isHttp(context)) {             log.debug("SessionContext argument is not HTTP compatible or does not have an HTTP request/response " +                     "pair. No session ID cookie will be set.");             return;          }         HttpServletRequest request = WebUtils.getHttpRequest(context);         HttpServletResponse response = WebUtils.getHttpResponse(context);          if (isSessionIdCookieEnabled()) {             Serializable sessionId = session.getId();             storeSessionId(sessionId, request, response);         } else {             log.debug("Session ID cookie is disabled.  No cookie has been set for new session with id {}", session.getId());         }          if (request != null) {             request.removeAttribute(ShiroHttpServletRequest.REFERENCED_SESSION_ID_SOURCE);             request.setAttribute(ShiroHttpServletRequest.REFERENCED_SESSION_IS_NEW, Boolean.TRUE);         }              }	Bug	RESOLVED	Major	Cannot Reproduce	1.2.4	None	Session Management	easyfix newbie patch		0	Unassigned	Ariel Isaac
SHIRO-547	SHIRO	Use MessageDigest#isEqual() instead of Arrays#equals() for comparing digests	While looking through shiro code I noticed that there are three places which compare byte[]s representing hashes using `Arrays#equals()` To avoid potential timing attacks these should be using `MessageDigest#isEqual()`, which at least starting with Java 6u17 uses a constant-time comparison. I'm not sure which Java version shiro targets, but it might make sense to either require Java 7, or to at least strongly suggest this in the documentation. Attached a patch against trunk, but please also consider fixing this in the 1.2 branch.	Bug	RESOLVED	Major	Fixed	2.0.0, 1.2.4	1.3.0	Authentication (log-in), (1)	patch		0	Unassigned	Andreas Kohn
SHIRO-548	SHIRO	DelegatingSubject cannot be serialized	Dear Les: I have encountered this problem when tried to serialize the Subject object in my application.I am developing an distributed application,and the Subject will generate at the Provider end,then I restore it in redis and in Consumer end find it use sessionId. but when debugging I get an Exception says DelegatingSubject cannot be serialized...I have tried to decrease the version of Shiro to 1.0.0-incubating,whose Subject had implemented the Java.io.Serizlizable interface so that can be serialized.But I find its contents seems not complete in redis server,can you give me some advices,I will very appreciate it	Bug	OPEN	Major	Unresolved	1.2.1	None	Integration: Spring, Subject	None	java 1.7	0	Les Hazlewood	General.X.Hummel
SHIRO-549	SHIRO	pom specified incorrect package versions for guice	The maven bundle plugin will auto fill the package versions of the referenced packages. So I removed the version specified and verified with a build that the correct 1.3 (can you please consider upgrading to Guice 4.0 (1.4)) version appears in the bundle manifest. I would love if you could push out a quick 1.2.5 with this change. My OSGi deployments are currently blocked by this.	Bug	RESOLVED	Major	Duplicate	1.2.0, (5)	None	Integration: Guice	build easyfix maven 		0	Jared Bunting	Dan Dumont
SHIRO-55	SHIRO	Authz Annotations	Why @Target(ElementType.METHOD) only? I need use it for class, like this: @RequiresAuthentication public class MyPage { }	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Alexey Pomogaev
SHIRO-550	SHIRO	Randomize default remember me cipher	The way shiro is set up by default exposes a web application to deserialization attacks. This is dangerous anyway, but particularly in light of the recent exploits using commons-collections (see http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/ for more info). By default, shiro uses the CookieRememberMeManager. This serializes, encrypts and encodes the users identity for later retrieval. Therefore, when it receives a request from an unauthenticated user, it looks for their remembered identity by doing the following: Retrieve the value of the rememberMe cookie Base 64 decode Decrypt using AES Deserialize using java serialization (ObjectInputStream). However, the default encryption key is hardcoded, meaning anyone with access to the source code knows what the default encryption key is. So, an attacker can create a malicious object, serialize it, encode it, then send it as a cookie. Shiro will then decode and deserialize, meaning that your malicious object is now live on the server. With careful construction of the objects, they can be made to run some malicious code (see link above for more detail). Note this is not theoretical; I have a working exploit using the ysoserial commons-collections4 exploit and http client. I can provide my test code if required. I understand that this requires your shiro to be set up using the default remember me settings, but in my case my application doesn't even make use of the remember me functionality (there’s no way for the user to ask to be remembered), so I didn't even consider that I needed to secure this part. Yet, my application still has this vulnerability.	Bug	RESOLVED	Major	Fixed	1.2.4	1.2.5	RememberMe	None		0	Unassigned	Tim Stibbs
SHIRO-551	SHIRO	DelegatingSubject should implement toString()	For debugging purposes, there should be a toString() method in DelegatingSubject.	Improvement	OPEN	Major	Unresolved	1.2.4	None	None	None		0	Unassigned	Jochen Kemnade
SHIRO-552	SHIRO	JdbcRealm in SaltStyle.COLUMN assumes that password column is Base64 but salt column is utf8 bytes	The org.apache.shiro.realm.jdbc.JdbcRealm class, when configured with SaltStyle.COLUMN, assumes that password column is Base64 but salt column is utf8 bytes. The password is returned as a char[] (see JdbcRealm.java:241), which org.apache.shiro.authc.credential.HashedCredentialsMatcher (see HashedCredentialsMatcher.java:353):         if (credentials instanceof String || credentials instanceof char[]) {             //account.credentials were a char[] or String, so             //we need to do text decoding first:             if (isStoredCredentialsHexEncoded()) {                 storedBytes = Hex.decode(storedBytes);             } else {                 storedBytes = Base64.decode(storedBytes);             }         } However, the salt is returned as a ByteSource, by converting the DB-returned String into its UTF-8 bytes. See JdbcRealm.java:224:             if (salt != null) {                 info.setCredentialsSalt(ByteSource.Util.bytes(salt));             } This is broken and inconsistent. Not all salt byte[]s are valid UTF8 strings, so the default assumption should be that the salt column is Base64 encoded.	Bug	OPEN	Major	Unresolved	1.2.4	None	None	None		0	Unassigned	Richard Bradley
SHIRO-553	SHIRO	Parsing od roles filter on urls incorrect	My SHIRO.INI on URLS section: [urls] /rest/test/** = authcBasic, roles[admin,normal] Unfortuntely Shiro can't read correctly the array of roles. I think the bug is in StringUtils class int the method: public static String[] split(String aLine, char delimiter, char beginQuoteChar, char endQuoteChar, boolean retainQuotes, boolean trimTokens) At line 392 there is an IF stament: } else if (c == delimiter && !inQuotes) { I believe that the NOT in Quotes is wrong because it should read the token if it is inQuote. Furthermore this method seems to be called with the argument "retainQuotes" set to TRUE. I thing, for RolesFilter should be called with FALSE	Bug	OPEN	Major	Unresolved	1.2.4	None	Configuration	None		0	Unassigned	Stock
SHIRO-554	SHIRO	ShiroWebModule#bindSessionManager implementation inconsistent with the implementation	The javadoc on org.apache.shiro.guice.web.ShiroWebModule#bindSessionManager says: By default, a {@link org.apache.shiro.web.session.mgt.DefaultWebSessionManager} is bound as an eager singleton. However, the implementation binds a org.apache.shiro.web.session.mgt.ServletContainerSessionManager. Ref: http://svn.apache.org/repos/asf/shiro/tags/shiro-root-1.2.4/support/guice/src/main/java/org/apache/shiro/guice/web/ShiroWebModule.java http://svn.apache.org/repos/asf/shiro/trunk/support/guice/src/main/java/org/apache/shiro/guice/web/ShiroWebModule.java	Documentation	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Amol S Deshmukh
SHIRO-555	SHIRO	Broken documentation links for shiro 1.2.4	The links on the Shiro documentation page to API (JavaDoc), Browse Source (XREF), and Maven Static Site under the Current Release section are broken.	Bug	OPEN	Major	Unresolved	1.2.4	None	None	None		0	Unassigned	Amol S Deshmukh
SHIRO-556	SHIRO	https://shiro.apache.org/realm.html appears to link to the javadoc under static/current/apidocs not static/latest	Tom Hayhurst (tom@catena-technologies.com) e-mailed the infrastructure@apache.org initially with: "https://shiro.apache.org/static/current/apidocs/org/apache/shiro/realm/Realm.html gives me an HTTP 500 response." This lead to the exchange: "> On 13 Jan 2016, at 11:20 pm, Daniel Takamori <pono@apache.org> wrote: > > Hey Tom, > While poking around, I noticed that https://shiro.apache.org/static/latest/apidocs/org/apache/shiro/realm/Realm.html would load but your link wouldn't. Is https://shiro.apache.org/static/current/ supposed to be where things are located? If so where was that link followed from? Sorry - I should have explained. All of the non-Javadoc Shiro documentation (e.g. https://shiro.apache.org/realm.html) appears to link to the javadoc under static/current/apidocs not static/latest. I suppose the fact that I got a 500 not a 404 made me think that there was a problem with the server rather than the incoming link being wrong. Thanks for the info!" Handing off to the Shiro team.	Bug	CLOSED	Major	Fixed	None	1.2.4	Documentation	documentation		0	Unassigned	Daniel Takamori
SHIRO-557	SHIRO	SessionContext must be an HTTP compatible implementation	It is related with SHIRO-350 final UsernamePasswordToken token = new UsernamePasswordToken(upUsername, upPassword.toCharArray(), "payment");  final Subject currentUser = SecurityUtils.getSubject();  currentUser.login(token); Unexpected RuntimeException Last cause: SessionContext must be an HTTP compatible implementation. WicketMessage: Method onRequest of interface org.apache.wicket.behavior.IBehaviorListener targeted at com.rudiwijaya.payment.pages.LoginButton$1@1cd4d15c on component [LoginButton [Component id = login]] threw an exception  Stacktrace Root cause:  java.lang.IllegalArgumentException: SessionContext must be an HTTP compatible implementation.      at org.apache.shiro.web.session.mgt.ServletContainerSessionManager.createSession(ServletContainerSessionManager.java:103)      at org.apache.shiro.web.session.mgt.ServletContainerSessionManager.start(ServletContainerSessionManager.java:64)      at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:121)      at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)      at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)      at org.apache.shiro.mgt.DefaultSubjectDAO.mergePrincipals(DefaultSubjectDAO.java:204)      at org.apache.shiro.mgt.DefaultSubjectDAO.saveToSession(DefaultSubjectDAO.java:166)      at org.apache.shiro.mgt.DefaultSubjectDAO.save(DefaultSubjectDAO.java:147)      at org.apache.shiro.mgt.DefaultSecurityManager.save(DefaultSecurityManager.java:383)      at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:350)      at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:183)      at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:283)      at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)      at com.rudiwijaya.payment.pages.LoginButton.doAuthenticate(LoginButton.java:138)      at com.rudiwijaya.payment.pages.LoginButton.onSubmit(LoginButton.java:157)      at com.rudiwijaya.payment.pages.LoginButton$1.onSubmit(LoginButton.java:91)      at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter.onSubmit(AjaxFormSubmitBehavior.java:215)      at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1305)      at org.apache.wicket.markup.html.form.Form.process(Form.java:966)      at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:788)      at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:171)      at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:145)      at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:649)      at java.lang.reflect.Method.invoke(Method.java:498)      at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)      at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)      at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:250)      at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:236)      at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:890)      at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)      at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:261)      at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:218)      at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:289)      at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:259)      at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:201)      at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:282)      at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)      at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)      at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)      at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:123)      at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java)      at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)      at org.apache.catalina.core.StandardHostValve.__invoke(StandardHostValve.java:171)      at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java)      at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)      at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)      at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)      at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)      at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)      at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)      at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)      at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)      at java.lang.Thread.run(Thread.java:745)  Complete stack:  org.apache.wicket.WicketRuntimeException: Method onRequest of interface org.apache.wicket.behavior.IBehaviorListener targeted at com.rudiwijaya.payment.pages.LoginButton$1@1cd4d15c on component [LoginButton [Component id = login]] threw an exception      at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:268)      at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)      at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:250)      at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:236)      at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:890)      at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)      at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:261)      at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:218)      at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:289)      at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:259)  java.lang.reflect.InvocationTargetException      at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)      at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)      at java.lang.reflect.Method.invoke(Method.java:498)      at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)      at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)      at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:250)      at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:236)      at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:890)      at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)      at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:261)      at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:218)      at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:289)      at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:259)  display page view	Bug	REOPENED	Major	Unresolved	1.2.4	None	Authentication (log-in)	None		0	Unassigned	Rudi Wijaya
SHIRO-558	SHIRO	Replace Cache interface with Guava's	Guava's Cache is pretty comprehensive and if Shiro's cache interface can be replaced with Guava's, we would get a lot out of the box.	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Qinfeng Chen
SHIRO-559	SHIRO	shiro-guice violates the JEE specification	The DestroyableRegistry.destroy() method (line 65/66), annotated with @PreDestroy throws a checked exception which violates the specification, which makes it impossible for a shiro-guice powered application to be deployed on Glassfish. Here is the exact error message: The lifecycle method [destroy] must not throw a checked exception. Related annotation information: annotation [javax.annotation.PreDestroy()] on annotated element [public void org.apache.shiro.guice.ShiroModule$1.destroy() throws java.lang.Exception] of type [METHOD] The lifecycle method [destroy] must not throw a checked exception. Related annotation information: annotation [javax.annotation.PreDestroy()] on annotated element [public void org.apache.shiro.guice.ShiroModule$1.destroy() throws java.lang.Exception] of type [METHOD]	Bug	RESOLVED	Major	Fixed	1.2.3	1.4.0	Integration: Guice	None		0	Unassigned	Krassimir
SHIRO-56	SHIRO	Add More Information About How To Setup JSecurityFilter In JavaDoc	From Post On JSecurity Mailing List: PLEASE note that the JavaDoc for JSecurityFilter WAS NOT helpful [when trying to figure out how to configure the JSecurityFilter in web.xml]. No where in that JavaDoc does it mention specifying the realm that should be created and that will then be injected into SecurityManager. From Les Hazlewood in response - "PLEASE enter a Jira issue for this for us to clear up the Filter documentation. That JavaDoc has evolved over time and you're absolutely right - it has not been updated properly to explain the 'poor man's dependency injection' that it is capable of. Come hell or high water, I will absolutely work on that this weekend - I definitely recognize that it needs to be much clearer than what the existing JavaDoc provides."	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Bruce Phillips
SHIRO-560	SHIRO	Shiro-web feature can't be installed in karaf 4.0.4	Installation of shiro-web/1.2.4 feature in karaf 4.0.4 raises missing requirement exception. karaf@root()> feature:install shiro-web/1.2.4 Error executing command: Unable to resolve root: missing requirement [ root ] osgi.identity; osgi.identity=war; type=karaf.feature; version="[2.0.0,4.0.0)" Will shiro-web feature be supported in karaf 4.x?	Improvement	OPEN	Major	Unresolved	1.2.4	1.4.1	Web	OSGi	karaf	0	Francois Papon	Pavel Alekhin
SHIRO-561	SHIRO	"Remember me" cookie age is not verified server-side	The "remember me" cookie has a max age limit which is configurable in Shiro (see CookieRememberMeManager). However, Shiro does not enforce this limit at all – it trusts the client to expire the "remember me" cookie after the requested time limit. Because the cookie value has no server-side age verification, if a malicious client gets a copy of the remember me cookie, then it will last forever, regardless of the max age limit configured in Shiro. See also http://stackoverflow.com/questions/26639205/shiro-how-does-remember-me-work/35633675	Bug	OPEN	Major	Unresolved	1.2.4	None	None	None		0	Unassigned	Richard Bradley
SHIRO-562	SHIRO	WildcardPermission calls String.trim() twice in setParts()	WildcardPermission.setParts does this: if (wildcardString == null || wildcardString.trim().length() == 0) Unknown macro: { throw new IllegalArgumentException("Wildcard string cannot be null or empty. Make sure permission strings are properly formatted."); } wildcardString = wildcardString.trim(); Given the frequency of the use of this method it would be better to capture the first trim().	Improvement	CLOSED	Trivial	Fixed	1.2.4	1.2.5	Authorization (access control)	None		0	Unassigned	Matt Bishop
SHIRO-563	SHIRO	shiro-aspectj karaf feature can't be installed	shiro-aspectj feature has dependency error. One of dependencies can't be found in central repo: Error resolving artifactorg.apache.servicemix.bundles:org.apache.servicemix.bundles.aspectj:jar:1.6.16_1: Could not find artifact org.apache.servicemix.bundles:org.apache.servicemix.bundles.aspectj:jar:1.6.16_1 in central (http://repo1.maven.org/maven2/)	Bug	OPEN	Major	Unresolved	1.2.4	1.4.1	None	OSGi	karaf	0	Francois Papon	Pavel Alekhin
SHIRO-564	SHIRO	WildcardPermission case-insensitive makes parts collections twice	WildcardPermissions have a caseSensitive flag that instructs the permission to ignore case when comparing permissions. It's implementation of this feature is kinda wasteful because it first parses the permission string into a Set<String> part, THEN checks the flag and then rebuilds the part Set. It might be faster to check the flag first, lowercase the permission string, then parse the parts. This would save creating a whole bunch of extra LinkedHashSets.	Improvement	RESOLVED	Trivial	Fixed	1.2.4	1.3.0	Authorization (access control)	None		0	Unassigned	Matt Bishop
SHIRO-565	SHIRO	On Successful Login Shiro adds two response header values for the same remember-me cookie name.	On successful login, shiro adds two cookie entries one with deleteMe as value and other with the encrypted value. Though delete-me value cookie has expired state, it should not be resent in the header. As per the cookie spec, order of the response headers should not be relied upon. class : AbstractRememberMeManager method : public void onSuccessfulLogin(Subject subject, AuthenticationToken token, AuthenticationInfo info) { //always clear any previous identity: forgetIdentity(subject); //now save the new identity: if (isRememberMe(token)) { rememberIdentity(subject, token, info); } else { if (log.isDebugEnabled()) { log.debug("AuthenticationToken did not indicate RememberMe is requested. " + "RememberMe functionality will not be executed for corresponding account."); } } } In the above code, forget identity happens every time. Better place is in the else condition(when isNotRememberMe).	Bug	OPEN	Major	Unresolved	1.2.3	None	None	authentication		0	Unassigned	amit yatagiri
SHIRO-566	SHIRO	CollectionUtils should use Collections wrappers of arrays if possible	org.apache.shiro.util.CollectionUtils.asSet() and .asList() could use Collections wrappers for the passed-in elements. These are smaller and faster than copying the contents into other collections. The editability of the returned Collections is not required as currently it will return either an unmodifiable emptyList() / emptySet() or a modifiable ArrayList / LinkedHashSet. Ideally it would wrap the LinkedHashSet in unmodifiableSet and declare the immutability of the returned collections in the docs. In my use case for Shiro we create about 6000 - 7000 WildcardPermission objects per second. The great majority of them have a a list of parts with single subparts and thus don't need a proper LinkedHashSet created. This change improve the performance of our system by 10% under heavy load, mostly due to the reduced GC of temporary LinkedHashSet objects.	Improvement	RESOLVED	Trivial	Fixed	1.2.4	1.3.0	Authorization (access control)	None		0	Unassigned	Matt Bishop
SHIRO-567	SHIRO	shiro-root-1.2.5.pom uses invalid encoding, fails to parse with Gradle 2.14	$> curl -s https://repo1.maven.org/maven2/org/apache/shiro/shiro-root/1.2.5/shiro-root-1.2.5.pom| head -1 <?xml version="1.0" encoding="UTF8"?> "UTF8" is not a valid encoding, it should be "UTF-8". This makes Gradle fail to parse the pom. The 1.2.4 pom is correct.	Bug	RESOLVED	Major	Fixed	1.2.5	1.2.6	None	regression		0	Unassigned	Jochen Kemnade
SHIRO-568	SHIRO	hash iterations is calculated wrongly in SimpleHash	The code assumes that DEFAULT_ITERATIONS is always 1, which may change – breaking the hashing.	Bug	RESOLVED	Minor	Fixed	1.2.4	1.3.0	Cryptography & Hashing	None		0	Unassigned	Andreas Kohn
SHIRO-569	SHIRO	Site references confluence icons	Related to SHIRO-527. These icons should be stored under assets/images We cannot copy them directly without understanding the license of these images. Alternatively, We grab some other set of icons use unicode emoticons (which should be supported on all platforms now)	Improvement	OPEN	Minor	Unresolved	None	None	Web Site	None		0	Unassigned	Brian Demers
SHIRO-57	SHIRO	Enhance LDAP Support	Should handle LDAP beyond our normal approach, particularly supporting the behavior outlined in this blog entry: http://weblogs.java.net/blog/kohsuke/archive/2008/06/more_active_dir.html	Improvement	CLOSED	Major	Not A Problem	None	None	None	None		0	Unassigned	Les Hazlewood
SHIRO-570	SHIRO	SimpleCookie should check the path of the cookie	SimpleCookie#readValue() tries to find the cookie purely by name. In case the cookie is restricted to a specific path, it should not be used unless the request is actually for that path.	Bug	RESOLVED	Major	Fixed	1.2.5	1.3.0	Web	None		0	Unassigned	Andreas Kohn
SHIRO-571	SHIRO	Mark shiro-cas deprecated (replaced with buji-pac4j)	This functionality has moved to buji-pac4j (which uses shiro) http://shiro-developer.582600.n2.nabble.com/Future-CAS-module-support-in-Shiro-td7579204.html	Task	RESOLVED	Major	Fixed	1.3.0	1.3.0	None	None		0	Unassigned	Brian Demers
SHIRO-572	SHIRO	Validate everything in 1.2 / 1.3 has merged into 2.0	after a little bit of git-fu I found a handful of commits that may not be already in master. (meaning the commit messages from 1.2/1.3 did not match with master. These changes could have been already merged in (this would have been while the code was still in svn, so minor changes to commit messages was not uncommon. Here is the list: 57764965c0ec979270822ea4bd07336aed0d2acb - Updated copyright year e5ede6dd2bbac9bf3da9fc92daed4f7ab7506a15 - SHIRO-353: fixed logging statement 529a39563ba4f0ac77da64476c15ebe636501383 - Upgraded web.xml files to Servlet 2.5 and JSTL to 1.2 (tests were failing during release) 132ad01845baaefdb132edebcb5c35e059d5ec49 - ignoring test until it can be discovered why it fails only during release 49499993ba1e40f0242efb69d505a6a8e058c588 - SHIRO-380: added quick patch fix for runAs. This fix is point-version backwards and forwards compatible. A more suitable longer term solution should be addressed for Shiro 1.3 / 2.0 + c0b817c0445d833431d0d7d61d143c80ae0f561f - Make tests using generics compile on newer (1.5+) jdks Multiple commits from: SHIRO-399 SHIRO-368 Also, the release profiles and pom structures need a once over, those commits are NOT listed above.	Task	OPEN	Blocker	Unresolved	None	None	None	None		0	Unassigned	Brian Demers
SHIRO-573	SHIRO	Remove shiro-cas from master (2.0)	Support for CAS has move to: https://github.com/bujiio/buji-pac4j This module was deprecated in 1.3	Task	REOPENED	Major	Unresolved	None	2.0.0	None	None		0	Unassigned	Brian Demers
SHIRO-574	SHIRO	shiro-tools-hasher can't be used for automatic deployment	There don't exists an parameter to set the clean text password. You can call it as shiro-hasher --pnoconfirm but your are unable to set the clean text password. But such an function will be needed for automatic deployment.	Wish	OPEN	Major	Unresolved	1.2.6	None	Configuration	None	centos	0	Unassigned	Frank
SHIRO-575	SHIRO	use AnonymousFilter Can't get form parameters	1.use AnonymousFilter in shiro.ini /comment/** = anon 2.start tomcat 3.do not visit any page 4.use the form submit comment data 5.at this point does not receive from parameters	Bug	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	wangwenbin
SHIRO-576	SHIRO	Commons-beanutils dependency is not security compliant	Commons-beanutils v 1.8.0 dependency is not security compliant. Has issue CVE-2014-0114. Note that current version commons-beanutils 1.9.2 in turn has a CVE in its dependency commons-collections (CVE-2015-6420, see BEANUTILS-488), which is fixed in 1.9.3. In addition, consider including the OWASP Dependency Check to the build to find out about CVEs in dependencies faster.	Bug	RESOLVED	Major	Fixed	1.3.0	1.3.3, 1.4.0-RC2	None	None		0	Unassigned	schnatterer
SHIRO-577	SHIRO	Regression - Unable to set custom SessionValidationScheduler	This was introduced by SHIRO-443, while making initialization of the sessionValidationScheulder thread safe. Reported by user on mailing list: http://shiro-user.582556.n2.nabble.com/Shiro-443-prevents-custom-Session-Validation-Scheduler-td7581185.html	Bug	RESOLVED	Major	Fixed	1.2.5, 1.2.6, 1.3.0	1.3.1	Session Management	regresion		0	Unassigned	Brian Demers
SHIRO-578	SHIRO	Race condition between Session.touch() and AbstractValidatingSessionManager.	I think I've found a race condition using Shiro 1.3.0 and a trivial web application between Session.touch() and the AbstractValidatingSessionManager.validateSessions(). The reason I'm looking that this code so carefully for race conditions is that our production web site sees the occasional (a few a week) UnknownSessionException in a way that is likely presenting the user with a 500 error screen. I set my breakpoints at SimpleSession.touch() and AbstractValidatingSessionManager.validateSession(). Here are the steps to reproduce: I login, which creates my session and takes me to my default Servlet/JSP. I refresh my web page, which will hit the Servlet again, but I stop at the "touch" breakpoint. I wait for the ExecutorServiceSessionValidationScheduler to hit my breakpoint in AbstractValidatingSessionManager. Step through and let AbstractValidatingSessionManager.validateSession() invalidate my session and delete it because it is expired. Resume at the "touch" breakpoint and I get a 500 error page with UnknownSessionException: It really seems like there could be a race condition were a user reloads a web page right as their session is expiring. The user get the session, but the ExecutorServiceSessionValidationScheduler immediately invalidates it before the user can "touch" it. This results in the Servlet failing if it needs something out the Session (such as the Principal - it has no problem retrieving the Subject). Here is my shiro.ini file: [main] cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager securityManager.cacheManager = $cacheManager  # Set the timeout to one minute, so we don't have to wait so long sessionDAO = org.apache.shiro.session.mgt.eis.MemorySessionDAO sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager sessionManager.globalSessionTimeout = 60000 sessionManager.sessionDAO = $sessionDAO securityManager.sessionManager = $sessionManager sessionValidationScheduler = org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler sessionValidationScheduler.interval = 60000 sessionValidationScheduler.sessionManager = $sessionManager securityManager.sessionManager.sessionValidationScheduler = $sessionValidationScheduler #securityManager.sessionManager.sessionValidationInterval = 6000 securityManager.sessionManager.sessionValidationSchedulerEnabled = true  testRealm = com.hcs.shiro.race.TestRealm testFilter = org.apache.shiro.web.filter.authc.FormAuthenticationFilter testFilter.loginUrl = /login.jsp testFilter.usernameParam = j_username testFilter.passwordParam = j_password testFilter.rememberMeParam = rememberMe testFilter.successUrl = /myAccount  logout = org.apache.shiro.web.filter.authc.LogoutFilter logout.redirectUrl = /login.jsp  # Permission [urls] /logout = logout /** = testFilter As you can see, the only custom code I'm using is the TestRealm, which authenticates anyone who provides a username and password. Here is my trivial Servlet: protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {  Subject subject = SecurityUtils.getSubject();  Object principal = subject.getPrincipal();  request.setAttribute(ATTR_PRINCIPAL, principal.toString());  ServletContext context = getServletContext();         RequestDispatcher dispatcher = context.getRequestDispatcher("/myAccount.jsp");         dispatcher.forward(request, response); } It fails on "subject.getPrincipal()" in the scenario described above and has been seen to fail in my production code in a similar line with a similar error message. Here is the exception: org.apache.shiro.session.StoppedSessionException: Session with id [1c59c589-2920-4ba6-b3c8-118997110844] has been explicitly stopped.  No further interaction under this session is allowed.  org.apache.shiro.session.mgt.SimpleSession.validate(SimpleSession.java:270)  org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doValidate(AbstractValidatingSessionManager.java:186)  org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:143)  org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120)  org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)  org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:152)  org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:249)  org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)  org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)  org.apache.shiro.subject.support.DelegatingSubject.getRunAsPrincipalsStack(DelegatingSubject.java:469)  org.apache.shiro.subject.support.DelegatingSubject.getPrincipals(DelegatingSubject.java:153)  org.apache.shiro.subject.support.DelegatingSubject.getPrincipal(DelegatingSubject.java:149)  com.hcs.shiro.race.MyAccount.doGet(MyAccount.java:30)  javax.servlet.http.HttpServlet.service(HttpServlet.java:622) Original discussion for in Shiro Users' Group: http://shiro-user.582556.n2.nabble.com/Race-condition-between-Session-touch-and-AbstractValidatingSessionManager-td7581196.html Note: My trivial test case uses Shiro 1.3.0 code while my production code is using 1.2.2.	Bug	OPEN	Major	Unresolved	1.2.2, 1.3.0	None	Session Management	race-condition		0	Unassigned	Stephen McCants
SHIRO-579	SHIRO	Permission filter is validating last matched path	Following filter chain is present in configureShiroWeb() function addFilterChain("/*/first/second/*", AUTHC_BASIC, config(PERMS, "X:create")); addFilterChain("/*/first/*", AUTHC_BASIC, config(PERMS, "Y:create")); for a URL : example.appspot.com/_ah/api/hello/v1/first/second/third the access is granted for a user with permission Y:create and not with X:create.	Bug	RESOLVED	Blocker	Fixed	1.3.0	1.4.0	Integration: Guice	None	google app	0	Jared Bunting	Kusmanjali
SHIRO-58	SHIRO	Need property editors for INI builder	Need property editors for INI builder.	Improvement	CLOSED	Major	Won't Fix	None	None	None	None		0	Alan Cabrera	Alan Cabrera
SHIRO-580	SHIRO	ShiroHttpServletRequest cached HttpSession	I try to implement sessionDao with redis but I found ShiroHttpServletRequest cached HttpSession when i login the system, for preventing session fixation attack, i call getSession().stop(), now the redis have no session information, then i call httpRequest.getSession(false), it will get the cached HttpSession that is not stored in redis. So the Exception will happened what should I do to avoid this ?	Bug	CLOSED	Major	Not A Bug	None	None	None	None		0	Unassigned	Wei Wang
SHIRO-581	SHIRO	Improve log message when remember me cipher has changed	This was reported on the mailing list: http://shiro-user.582556.n2.nabble.com/CryptoException-tc7581223.html	Bug	RESOLVED	Minor	Fixed	1.3.0	1.3.1	None	None		0	Unassigned	Brian Demers
SHIRO-582	SHIRO	NullPointerException in AntPathMatcher	WebUtils.getRequestUri uses the normalize method to canonicalize the request URI. During an automated pentest, we found that a request to the following URL will cause a NPE: curl --path-as-is "http://127.0.0.1/\../\../\../\../\../\../Server4/admin-serv/config/adm.conf" The request will cause the path parameter of the `doMatch`method in org.apache.shiro.util.AntPathMatcher to be null. Executing the line {{ if (path.startsWith(this.pathSeparator) != pattern.startsWith(this.pathSeparator)) }} will throw the NPE. This could be handled by adjusting the normalize method or null checking the path in the doMatch method. Stacktrace java.lang.NullPointerException at org.apache.shiro.util.AntPathMatcher.doMatch(AntPathMatcher.java:109) at org.apache.shiro.util.AntPathMatcher.match(AntPathMatcher.java:90) at org.apache.shiro.util.AntPathMatcher.matches(AntPathMatcher.java:86) at org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver.pathMatches(PathMatchingFilterChainResolver.java:135) at org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver.getChain(PathMatchingFilterChainResolver.java:106) at org.apache.shiro.web.servlet.AbstractShiroFilter.getExecutionChain(AbstractShiroFilter.java:415) at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:448)	Bug	OPEN	Major	Unresolved	1.3.0	None	Authorization (access control)	None		0	Unassigned	Christian Thum
SHIRO-583	SHIRO	SubjectAwareExecutorService.setTargetExecutor is incorrect	SubjectAwareExecutorService.setTargetExecutor() calls super.setTargetExecutor() instead of this.setTargetExecutorService() causing NPE because super.targetExecutor is non-null but this.targetExecutorService is null.	Bug	OPEN	Major	Unresolved	1.2.4	None	None	None		0	Unassigned	Mark Hale
SHIRO-584	SHIRO	URL Path matching issue with WebUtils.getPathWithinApplication	Summary: In WebUtils.getPathWithinApplication request.getRequestURI() - Is normalized to remove //, ../, ./ etc request.getContextPath() - is not normalized When these values are compared for which url authorization to use all existing rules are bypassed. Long Version: If I access my application using a url like: http://localhost:8080//context/path/Action.action (note the double // after the port): This causes shiro to not match any of my urls The cause of this appears to be in WebUtils.getPathWithinApplication() in WebUtils.getContextPath() request.getContextPath() returns //context which is left as //context In WebUtils.getRequestUri() request.getRequestURI() returns //context/path/Action.action this is then sanitized in the WebUtils.normalize() method to return /context/path/Action.action. WebUtils.getPathWithinApplication then compares the 2 values with: if (StringUtils.startsWithIgnoreCase(requestUri, contextPath)) Which doesn't match. So the method returns /context/path/Action.action instead of /path/Action.action Because all the matching URLS are /path/** they don't match the /context/path So PathMatchingFilterChainResolver.getChain() doesn't return any chains. It seems to me that the contextPath should also be passed through the normalize() method to remove the leading // Regards Mark	Bug	RESOLVED	Major	Fixed	1.3.1	1.3.2	Authorization (access control)	None	tomcat	0	Unassigned	Mark Bortolazzo
SHIRO-585	SHIRO	Shiro should plug to outside authentication services Azure, AWS, Google...	I was a bit disappointed when I looked at Shiro for the first time. I was expecting a framework that allows me to easily plug into outside authentication services like Microsoft Azure authentication service, AWS authentication service, Google authentication service, Yahoo, OpenID,.....etc. Shiro should have this functionality of allows the programmer to quick, elegantly implement authentication with an outside provider of authentication services. A good framework should do that in the most easy way for the programmer. Furthermore, changing from one authentication provider to another should be quick.	Bug	OPEN	Major	Unresolved	None	None	None	aws azure openid		0	Unassigned	Colbert Philippe
SHIRO-586	SHIRO	Can't Search For Groups In Active Directory Without A System User	From http://stackoverflow.com/questions/39518150/how-do-i-search-for-ad-groups-in-shiro-without-a-system-user I can authenticate with the ActiveDirectoryRealm but I can't search for groups without having a systemUser. Most often, clients of my application don't have the system user/password and the admins don't like giving it out so they can't configure it properly. Spring Security and GUI clients let you use the username and password that was used to log in with to search for the groups.	Bug	RESOLVED	Blocker	Fixed	None	1.4.0-RC2	None	None		0	Unassigned	opticyclic
SHIRO-587	SHIRO	Can't Access Groups If userPrincipalName Doesn't Exist	Sometimes you need to use sAMAccountName instead of userPrincipalName in your search. However, this is hard-coded in a private method https://github.com/apache/shiro/blob/master/core/src/main/java/org/apache/shiro/realm/activedirectory/ActiveDirectoryRealm.java#L171 See here for a similar question on stackoverflow http://stackoverflow.com/questions/24062383/shiro-ldap-authorization-config/34896329#34896329 There is a similar bug in Spring Security https://github.com/spring-projects/spring-security/issues/2448 Making the search query was configurable in the shiro.ini would be useful. Making the getRoleNamesForUser protected instead of private would make sub-classing easier. Or keep the method private but make a protected method that returns Object[] searchArguments.	Bug	RESOLVED	Blocker	Fixed	None	1.3.3, 1.4.0-RC2	None	None		0	Unassigned	opticyclic
SHIRO-588	SHIRO	DefaultLdapRealm should extend AbstractLdapRealm	DefaultLdapRealm not extending AbstractLdapRealm is confusing. If there is a reason for it, we should add that do the javadoc. From: http://shiro-user.582556.n2.nabble.com/Confused-By-Class-Hierarchy-tc7581289.html Note: this might not be a breaking change, as the API looks simliar (but needs another look)	Improvement	OPEN	Major	Unresolved	None	2.0.0	None	None		0	Unassigned	Brian Demers
SHIRO-589	SHIRO	Add Servlet 3.x fragment	A servlet fragment will reduce the need to cut/paste into a web.xml as well as making Shiro easier to use.	New Feature	RESOLVED	Major	Fixed	None	1.4.0-RC2	Web	None		0	Brian Demers	Brian Demers
SHIRO-59	SHIRO	Refactor Realm implementations to favor delegation over inheritance	Currently most people need to subclass Realm implementations to perform role and/or permission checks. This is not very scalable when more than a few realms exist, or people need to re-use realms across applications. Instead, it would be much nicer to allow developers to configure components that did most of the common Realm logic, regardless of data store. For example, perhaps a RolePermissionResolver could be introduced: rolePermissionResolver.getPermissions( String roleName ); This could be injected across multiple realms across applications instead of needing to subclass Realm implementations - a little nicer approach. Also, we might want to look at uses of the Strategy design pattern for checking logic.	Improvement	CLOSED	Major	Fixed	None	1.0.0	None	None		0	Kalle Korhonen	Les Hazlewood
SHIRO-590	SHIRO	Add Spring Boot support / starters	The current Spring support in Shiro needs a little updating to remove the requirement on xml based beans, and allow for Spring Boot support.	New Feature	RESOLVED	Major	Fixed	None	1.4.0-RC2	None	None		0	Brian Demers	Brian Demers
SHIRO-591	SHIRO	Basic Auth Filter permissive mode does NOT work	The fix for SHIRO-200 assumed all filter options were http methods, for example: {authcBasic[POST, GET]} However, the 'permissive' option is also valid, which instructs the filter to check for authentication, but NOT require it: {authcBasic[permissive]} Or the two combine in something like: authcBasic[permissive,POST, GET]	Bug	RESOLVED	Major	Fixed	1.3.0, 1.3.1, 1.3.2	1.4.0-RC2	Web	regresion		0	Unassigned	Brian Demers
SHIRO-592	SHIRO	ModularRealmAuthenticator causes log spam when one realm throws exception	This reverts part of: SHIRO-462 Realms throwing exceptions when they fail to authenticate is NOT uncommon, so we need to reduce the log level back to debug. See comments in: SHIRO-143	Bug	OPEN	Major	Unresolved	1.2.5, (3)	1.4.0-RC2	None	None		0	Brian Demers	Brian Demers
SHIRO-593	SHIRO	Allow for IniWebEnvironment subclasses to specify defaults objects to ReflectionBuilder	As a framework developer I want to change the objects that Shiro loads, so that other developers need to provide less configuration. (When using a shiro.ini, the ReflectionBuilder processing happens in the IniSecurityManagerFactory, which makes it difficult to add default objects to the object graph. Currently you must extend the environment and a SecurityManagerFactory to override this behavior. Ideally I think the ReflectionBuilder processing should be moved to an Ini Environment class, but that is not easily done in a backwards compatible way. Therefore mimicking the pattern that the IniFilterChainResolverFactory is probably the safe bet.	Bug	RESOLVED	Major	Fixed	None	1.4.0-RC2	Configuration	None		0	Brian Demers	Brian Demers
SHIRO-594	SHIRO	Update Hazelcast version to latest supported version (3.7.2)	From: https://github.com/apache/shiro/pull/44 No API changes are required.	Bug	RESOLVED	Major	Fixed	None	1.4.0-RC2	None	None		0	Unassigned	Brian Demers
SHIRO-595	SHIRO	Allow for POST only logout requests	See: http://stackoverflow.com/questions/3521290/logout-get-or-post A logout causes a change of state, so should NOT be a GET. Also, due to browser pre-fetching, a typing http://localhost:8080/log may cause a prefetch to /logout To stay backwards compatible, this need to be an op-in feature. The proposed solution set a shiro.postOnlyLogout = true attribute, (same as logout.postOnlyLogout = true)	Bug	RESOLVED	Major	Fixed	None	1.4.0-RC2	None	None		0	Brian Demers	Brian Demers
SHIRO-596	SHIRO	shiro-tools-hasher needs private salt option	The shiro-tools-hasher tool is missing private salt options to allow users of Shiro to generate valid passwords for applications that use a private salt not stored with the password hash.	Improvement	RESOLVED	Major	Fixed	None	1.4.0	Configuration	None		0	Unassigned	Joshua Raymond
SHIRO-597	SHIRO	Support for Hazelcast 3.x on OSGi environments	The OSGi bundle manifest for shiro-hazelcast limits Hazelcast to [2.4,3) Suggest to upgrade it to [2.4,4) since it seems it has passed all tests (as per feedback from dev mailing list provided in external link)	Dependency upgrade	CLOSED	Minor	Duplicate	1.3.1, 1.3.2	None	Caching	None	osgi	0	Unassigned	João Taborda
SHIRO-598	SHIRO	Support for Hazelcast 3.x on OSGi environments	The OSGi bundle manifest for shiro-hazelcast limits Hazelcast to [2.4,3) Suggest to upgrade it to [2.4,4) since it seems it has passed all tests (as per feedback from dev mailing list provided in external link)	Dependency upgrade	CLOSED	Minor	Duplicate	1.3.1, 1.3.2	None	Caching	None	osgi	0	Unassigned	João Taborda
SHIRO-599	SHIRO	Fix file encoding warnings during maven build and reporting	The maven build emits several warnings that the file encoding has not been set. File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! The file encoding for reports output files should be provided by the POM property ${project.reporting.outputEncoding}. Not sure if all the files are actually in UTF-8. (lets hope). If they are this issue is easy to fix. Add two properties in the properties tag in shiro-root pom.xml <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>	Improvement	CLOSED	Minor	Fixed	None	1.4.0-RC2	None	None		0	Unassigned	Björn Raupach
SHIRO-6	SHIRO	Infinite Loop -- DefaultWebSecurityManager, JSecurityHttpServletRequest, Non-Http Sessions	Infinite loop when using DefaultWebSecurityManager and non-http sessions. createSubject():204, DefaultWebSecurityManager calls createSubject():208, DefaultWebSecurityManager calls getSession():71, ServletContainerSessionManager calls getSession():149, JSecurityHttpServletRequest calls getSubject():90, JSecurityHttpServletRequest calls getSubject():53, SecurityUtils calls getSubject():426, DefaultSecurityManager calls, getSubject():419, DefaultSecurityManager calls, createSubject():204, DefaultWebSecurityManager Then loops again...	Bug	CLOSED	Major	Cannot Reproduce	None	None	None	None		0	Les Hazlewood	Andrew Zeneski
SHIRO-60	SHIRO	Standalone environment - automatically create new session after expiration	Per this thread: http://markmail.org/thread/4tl42fnjdaztpbso In a non-web environment, it would be nice if the SecurityManager would automatically/transparently create a new Session for a subject if their existing session expires. The web environment already works this way. It would probably be best if there were a securityManager configuration attribute, say 'createNewSessionAfterExpiration' (or something similar) that would enable this feature. I'm thinking it should be enabled by default, as I assume the large majority of application developers wouldn't want to catch InvalidSessionException in their code. It could be disabled by using the aforementioned config attribute. The DefaultWebSecurityManager could just piggyback the same logic, simplifying its code (and its internal delegate WebSessionManager).	Improvement	RESOLVED	Major	Not A Problem	1.0.0	None	Session Management	None		0	Les Hazlewood	Les Hazlewood
SHIRO-600	SHIRO	org.apache.shiro.authc.credential.HashedCredentialsMatcher hashAlgorithm attribute getters	in class HashedCredentialsMatcher, the attribute hashAlgorithm has getters with different name "hashAlgorithmName", So when used in the shiro.ini file, we have to use "hashAlgorithmName" instead of "hashAlgorithm" and the documentation says that we have to use "hashAlgorithm"	Bug	OPEN	Minor	Unresolved	1.3.2	None	Cryptography & Hashing	None		0	Les Hazlewood	Ali Ali Saleh
SHIRO-601	SHIRO	deleted cookies don't set httpOnly flag. trigger warnings in PEN tools	When Shiro deletes a session cookie on logout it explicitly sets the httpOnly flag to false. This is triggering false positive warnings in PEN testing tools like OWASP. To avoid this, Shiro should ALWAYS set the httpOnly flag for its session cookies whether they are being set to 'deleteMe' or not.	Bug	OPEN	Major	Unresolved	1.3.2	None	Session Management	None	java 1.7	0	Unassigned	Matt Baker
SHIRO-602	SHIRO	Missing dependency commons-logging	While playing around with Apache Shiro 1.4.0-RC2 I happened to remove a dependency that relied on commons-logging. In 0c49ef7 commons-logging was excluded in the pom.xml. Unfortunately commons-beanutils needs commons-loggings. So I now end up with a project that needs commons-logging, but doesn't declare it since besides Shiro no other dependency needs it. 16-Nov-2016 14:22:10.611 SEVERE [http-nio-8080-exec-2] org.apache.catalina.core.StandardContext.listenerStart Exception sending context initialized event to listener instance of class org.apache.shiro.web.env.EnvironmentLoaderListener  java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory  at org.apache.commons.beanutils.ConvertUtilsBean.<init>(ConvertUtilsBean.java:154)  at org.apache.commons.beanutils.BeanUtilsBean.<init>(BeanUtilsBean.java:113)  at org.apache.commons.beanutils.BeanUtilsBean$1.initialValue(BeanUtilsBean.java:64)  at org.apache.commons.beanutils.BeanUtilsBean$1.initialValue(BeanUtilsBean.java:60)  at org.apache.commons.beanutils.ContextClassLoaderLocal.get(ContextClassLoaderLocal.java:154)  at org.apache.commons.beanutils.BeanUtilsBean.getInstance(BeanUtilsBean.java:76)  at org.apache.commons.beanutils.PropertyUtilsBean.getInstance(PropertyUtilsBean.java:107)  at org.apache.commons.beanutils.PropertyUtils.getPropertyDescriptor(PropertyUtils.java:498)  at org.apache.shiro.config.ReflectionBuilder.isTypedProperty(ReflectionBuilder.java:418) To fix this I had to add commons-logging in my project's pom.xml Edit Here is a dependency:tree from my previous version: Shiro 1.3.2 with Tomahawk 2.1 Core [INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ gastroapp-admin --- [INFO] de.e2n.gastroapp:gastroapp-admin:war:1.0 [INFO] +- javax.servlet:javax.servlet-api:jar:3.1.0:provided [INFO] +- org.glassfish:javax.faces:jar:2.2.13:compile [INFO] +- org.apache.myfaces.tomahawk:tomahawk21:jar:1.1.14:compile [INFO] |  +- commons-logging:commons-logging:jar:1.1.1:compile [INFO] |  +- commons-validator:commons-validator:jar:1.3.1:compile [INFO] |  |  \- commons-digester:commons-digester:jar:1.6:compile [INFO] |  |     \- xml-apis:xml-apis:jar:1.0.b2:compile [INFO] |  +- commons-fileupload:commons-fileupload:jar:1.2.1:compile [INFO] |  +- commons-io:commons-io:jar:1.3.2:runtime [INFO] |  +- commons-collections:commons-collections:jar:3.2.1:compile [INFO] |  +- commons-codec:commons-codec:jar:1.3:compile [INFO] |  +- oro:oro:jar:2.0.8:compile [INFO] |  +- commons-lang:commons-lang:jar:2.4:compile [INFO] |  +- javax.servlet:jstl:jar:1.2:compile [INFO] |  \- batik:batik-awt-util:jar:1.6-1:compile [INFO] |     \- batik:batik-util:jar:1.6-1:compile [INFO] |        \- batik:batik-gui-util:jar:1.6-1:compile [INFO] |           \- batik:batik-ext:jar:1.6-1:compile [INFO] |              \- xml-apis:xmlParserAPIs:jar:2.0.2:compile [INFO] +- org.omnifaces:omnifaces:jar:2.5.1:compile [INFO] +- org.jboss.weld.servlet:weld-servlet:jar:2.4.0.Final:compile [INFO] +- org.mybatis:mybatis:jar:3.4.1:compile [INFO] +- org.mybatis:mybatis-typehandlers-jsr310:jar:1.0.1:compile [INFO] +- org.mybatis:mybatis-cdi:jar:1.0.0-beta3:compile [INFO] +- org.apache.shiro:shiro-core:jar:1.3.2:compile [INFO] |  \- commons-beanutils:commons-beanutils:jar:1.8.3:compile [INFO] +- org.apache.shiro:shiro-web:jar:1.3.2:compile [INFO] +- org.apache.shiro:shiro-faces:jar:2.alpha.0-SNAPSHOT:compile [INFO] +- org.slf4j:slf4j-api:jar:1.7.5:compile [INFO] \- org.slf4j:slf4j-jdk14:jar:1.7.21:compile And here is the recent one where we upgraded to 1.4.0-RC2 and dropped Tomahawk [INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ gastroapp-admin --- [INFO] de.e2n.gastroapp:gastroapp-admin:war:1.0 [INFO] +- javax.servlet:javax.servlet-api:jar:3.1.0:provided [INFO] +- org.glassfish:javax.faces:jar:2.2.13:compile [INFO] +- org.omnifaces:omnifaces:jar:2.5.1:compile [INFO] +- org.jboss.weld.servlet:weld-servlet:jar:2.4.0.Final:compile [INFO] +- org.mybatis:mybatis:jar:3.4.1:compile [INFO] +- org.mybatis:mybatis-typehandlers-jsr310:jar:1.0.1:compile [INFO] +- org.mybatis:mybatis-cdi:jar:1.0.0-beta3:compile [INFO] +- org.apache.shiro:shiro-servlet-plugin:jar:1.4.0-RC2:compile [INFO] |  \- org.apache.shiro:shiro-web:jar:1.4.0-RC2:compile [INFO] |     \- org.apache.shiro:shiro-core:jar:1.4.0-RC2:compile [INFO] |        +- org.apache.shiro:shiro-lang:jar:1.4.0-RC2:compile [INFO] |        +- org.apache.shiro:shiro-cache:jar:1.4.0-RC2:compile [INFO] |        +- org.apache.shiro:shiro-crypto-hash:jar:1.4.0-RC2:compile [INFO] |        |  \- org.apache.shiro:shiro-crypto-core:jar:1.4.0-RC2:compile [INFO] |        +- org.apache.shiro:shiro-crypto-cipher:jar:1.4.0-RC2:compile [INFO] |        +- org.apache.shiro:shiro-config-core:jar:1.4.0-RC2:compile [INFO] |        +- org.apache.shiro:shiro-config-ogdl:jar:1.4.0-RC2:compile [INFO] |        |  \- commons-beanutils:commons-beanutils:jar:1.9.3:compile [INFO] |        |     \- commons-collections:commons-collections:jar:3.2.2:compile [INFO] |        \- org.apache.shiro:shiro-event:jar:1.4.0-RC2:compile [INFO] +- org.apache.shiro:shiro-faces:jar:2.alpha.0-SNAPSHOT:compile [INFO] +- org.slf4j:slf4j-api:jar:1.7.5:compile [INFO] \- org.slf4j:slf4j-jdk14:jar:1.7.21:compile If I add commons-logging or jcl-over-slf4j the projects starts as expected. So it looks like I was just lucky that it started in the first place Did I miss the part in the documentation that says a briding api is needed?	Bug	OPEN	Major	Unresolved	1.4.0-RC2	None	None	None	tomcat	0	Unassigned	Björn Raupach
SHIRO-603	SHIRO	Endless recursion in ShiroSecurityContext.getUserPrincipal()	The ShiroSecurityContext.getUserPrincipal() is called recursively when the current principal is null.	Bug	CLOSED	Major	Fixed	None	1.4.0	jax-rs	None		0	Unassigned	Brian Demers
SHIRO-604	SHIRO	securityManager.sessionManager.globalSessionTimeout value set in shiro.ini is ignored	securityManager.sessionManager.globalSessionTimeout value is ignored when using the native shiro DefaultWebSessionManager and custom SessionDAO. Its defaulted to 1800000	Bug	OPEN	Major	Unresolved	1.3.2	None	Session Management	customSessionDAO cus		0	Unassigned	sreenivas Harshith
SHIRO-605	SHIRO	ShiroWebModule creates out of order filter chain.	The ShiroWebModule class is creating a randomly ordered filter chain, because it's using a HashMap instead of a LinkedHashMap. The offending line is here: https://github.com/apache/shiro/blob/master/support/guice/src/main/java/org/apache/shiro/guice/web/ShiroWebModule.java#L144 This should be a LinkedHashMap to maintain original user order. It does add the paths correctly: https://github.com/apache/shiro/blob/master/support/guice/src/main/java/org/apache/shiro/guice/web/ShiroWebModule.java#L176 And correctly returns to the FilterChainProvider: https://github.com/apache/shiro/blob/master/support/guice/src/main/java/org/apache/shiro/guice/web/ShiroWebModule.java#L135	Bug	RESOLVED	Major	Fixed	1.4.0-RC2	1.4.0	Integration: Guice	easyfix		0	Jared Bunting	Matt Traynham
SHIRO-606	SHIRO	Exception thrown in the log-in process is being ignored.	In my opinion, AbstractAuthenticator.authenticate(AuthenticationToken token) handles exception inappropriately. When the exception thrown in the try block is not instance of Authentication, the method will wrap the exception to a Authentication instance, and throw it all the way to AuthenticatingFilter.executeLogin(ServletRequest request, ServletResponse response), and just return a boolean. The process mentioned above, make the exception ignored, which make it hard for us to find out the mistake because the user can not take over the exception handling job directly. We can do some extension to handle the issue.I look into the source code and find out two ways about handling the exception.First, write a class that implements the AuthenticationListener, and inject it to the ModularRealmAuthenticator instance, then the listener we write will handle the exception in AbstractAuthenticator.notifyFailure(AuthenticationToken token, AuthenticationException ae).Second, FormAuthenticationFilter.setFailureAttribute(ServletRequest request, AuthenticationException ae), this method seems insignificant and cant help, because it only set a requset atrribute and the attribute value always is "AuthenticationException", ignores everything about the original Exception. Although there is a way to handle the exception on our own, I still dont think the exception should be ignored in the Shiro log-in process. In addtion, the way to handle the exception is a little tricky.In my situation, I am using Spring with Shiro, and I have to write a Class that extends the ModularRealmAuthenticator in order to inject the listener through constructor-arg, because through value-inject a exception will be thrown.Of course, without Spring, we could write a ModularRealmAuthenticator's subclass, and assign a List<AuthenticationListener> to the instance's field. It is easy to reproduce the issue, any exception thrown in the process metnioned above will cause the problem.This is my first open issue and I am sorry I dont know how to provide a test appropriately.	Improvement	OPEN	Major	Unresolved	1.3.2	None	Authentication (log-in)	newbie patch	windows 10	0	Unassigned	Liang Weiwei
SHIRO-607	SHIRO	AuthorizationAttributeSourceAdvisor ignores type-annotations	The spring integration only checks the method annotations. When the security annotations are on the type, no authentication will be required. @RequiresAuthentication //ignored interface Business {   //not secured   void criticalSomething(); } Links Related mailing list thread: mail archive github pull request a possible workaround	Bug	RESOLVED	Major	Fixed	1.3.2, 1.4.0-RC2	1.4.0	Integration: Spring	easyfix newbie		0	Les Hazlewood	Laszlo Hornyak
SHIRO-608	SHIRO	Use a ServiceLoader to discover WebEnvironments	The idea here is to lessen the touch points for frameworks when integrating with Shiro. A property file and a WebEnvironment implementation should be all that is needed. The WebEnvironment can then provide additional defaults or customizations specific to that framework. PR: https://github.com/apache/shiro/pull/53	Bug	RESOLVED	Major	Fixed	None	1.4.0	Configuration, (1)	None		0	Brian Demers	Brian Demers
SHIRO-609	SHIRO	Shiro JAX-RS - Don't assume JAX-RS handles annotation processing	Many frameworks support JAX-RS, and JAX-RS supports many frameworks. there may be scenarios where spring is driving a JAX-RS service. As a result, if you had lets say spring or guice handling your AOP, then you want to ensure that those containers are doing the AOP and not JAX-RS. But obviously if neither is doing AOP then the JAX-RS implementation should work. So I'm wondering, could we make this configurable?	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	John D. Ament
SHIRO-61	SHIRO	SimpleAuthenticationInfo & SimpleAuthorizationInfo implementation should implement Serializable	SimpleAuthenticationInfo & SimpleAuthorizationInfo implementation should implement Serializable	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-610	SHIRO	Incorrect filterchainResolver in 1.4.0-RC2	Caused by: org.apache.shiro.env.RequiredTypeException: Object named 'filterChainResolver' is not of required type [org.apache.shiro.web.filter.mgt.FilterChainResolver] This happens OOTB when using DefaultWebEnvironment. The actual type is a IniFilterChainResolverFactory	Bug	OPEN	Major	Unresolved	1.4.0-RC2	None	None	None		0	Unassigned	John D. Ament
SHIRO-611	SHIRO	Spring web module does not load correct SessionStorageEvaluator	Spring web module should load DefaultWebSessionStorageEvaluator. Currently the web module uses the default storage evaluator.	Bug	RESOLVED	Major	Fixed	1.4.0-RC2	1.4.0	Integration: Spring	None		0	Les Hazlewood	Brian Demers
SHIRO-612	SHIRO	Need to upgrade BeanUtils to avoid vulnerability	Currently, the POM specifies to use BeanUtils 1.8.3. Unfortunately, this has a known vulnerability (https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0114) and there's a Metasploit module available to make exploitation easier. This needs to be upgraded to the fixed version 1.9.3.	Bug	RESOLVED	Major	Duplicate	1.4.0-RC2	1.4.0-RC2	None	None		0	Unassigned	David Dillard
SHIRO-613	SHIRO	StoppedSessionException: Session with id has been explicitly stopped. No further interaction under this session is allowed.	I am using default shiro native session manager and Session DAO backed by Db store for storing sessions. I have set the session timeout to 10 min and I have the same user login multiple times, say 8 times. Once the session is expired I tried to login with same user credentials from a different client and shiro is calling this delete(Session sn) method implemented in my DAO to delete those old sessions that are expired. Once the deletion is completed it throws an exception with the deleted Session id saying org.apache.shiro.session.StoppedSessionException: Session with id [a9dd97a1-90d4-435c-b363-f74052dfa0dc] has been explicitly stopped. No further interaction under this session is allowed, and it fails to login the user.	Bug	RESOLVED	Major	Cannot Reproduce	1.3.2	None	Authentication (log-in), (1)	Sessiontimeout Stopp		0	Unassigned	sreenivas Harshith
SHIRO-614	SHIRO	UnknownSessionException when shiro is again trying to access the deleted session.	Multiple sessions are created when secureCookie = true and eventually deleted, getting UnknownSessionException when shiro is again trying to access the deleted session. 15:59:33,787 DEBUG [Thread-7] AbstractValidatingSessionManager:290 - Invalidated session with id [edd4b1fa-9b36-492a-a22a-b9f677487e0b] (expired) 15:59:33,787 DEBUG [Thread-5] DefaultSecurityManager:447 - Resolved SubjectContext context session is invalid. Ignoring and creating an anonymous (session-less) Subject instance. org.apache.shiro.session.UnknownSessionException: There is no session with id [edd4b1fa-9b36-492a-a22a-b9f677487e0b] at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170) at org.apache.shiro.session.mgt.eis.CachingSessionDAO.readSession(CachingSessionDAO.java:261) at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236) at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222) at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:108) at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:100) at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:125) at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456) at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442) at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338) at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)	Bug	OPEN	Major	Unresolved	1.2.4	None	Authentication (log-in), (3)	None	linux	0	Unassigned	Nishok
SHIRO-615	SHIRO	Refine error message for incorrectly configured rememberMe cipherKey	Currently if the shiro configuration key securityManager.rememberMeManager.cipherKey is set incorrectly, an error is logged via a stack trace. Unfortunately, this stack trace and associated error message do not provide much context and could be refined to indicate that the source of the error was the cipherKey. Sample Error ERROR o.a.shiro.web.env.EnvironmentLoader - Shiro environment initialization failed java.lang.IllegalArgumentException: Odd number of characters.  at org.apache.shiro.codec.Hex.decode(Hex.java:128) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.codec.Hex.decode(Hex.java:107) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.ReflectionBuilder.toBytes(ReflectionBuilder.java:544) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:711) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.ReflectionBuilder.applySingleProperty(ReflectionBuilder.java:364) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:325) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.ReflectionBuilder$AssignmentStatement.doExecute(ReflectionBuilder.java:955) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.ReflectionBuilder$Statement.execute(ReflectionBuilder.java:887) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.ReflectionBuilder$BeanConfigurationProcessor.execute(ReflectionBuilder.java:765) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:260) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:167) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:130) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:108) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:94) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:46) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47) ~[shiro-core-1.3.2.jar:1.3.2]  at org.apache.shiro.web.env.IniWebEnvironment.createWebSecurityManager(IniWebEnvironment.java:203) ~[shiro-web-1.3.2.jar:1.3.2]  at org.apache.shiro.web.env.IniWebEnvironment.configure(IniWebEnvironment.java:99) ~[shiro-web-1.3.2.jar:1.3.2]  at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:92) ~[shiro-web-1.3.2.jar:1.3.2]	Improvement	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Rob Young
SHIRO-616	SHIRO	Two different sessions are created	After first login i get a session id. During the second login, i get a different session id and isAuthenticated returns false, as a result of which i call login for the second time. After that i get both the session ID's alternatively for subsequent requests. FYI I use shiro on top of dropwizard.	Bug	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	thiagesh
SHIRO-617	SHIRO	ShiroFilter initialize WebEnvironment on startup	Following up to http://shiro-developer.582600.n2.nabble.com/Deprecation-of-org-apache-shiro-web-servlet-IniShiroFilter-td7205283.html I am integrating shiro into our OSGI based product. The requirement to register the WebEnvironment listener on startup is a real problem. ""it would be extremely easy to create a subclass of ShiroFilter that initializes the necessary WebEnvironment at filter startup. If you can't use a servlet context listener, this would be the next best thing and would work as expected. The EnvironmentLoaderListener is extremely minimal on purpose - the real work is done in the parent class, which can be used from a Filter easily. ""	Improvement	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Marco Descher
SHIRO-618	SHIRO	Spring Boot Web Starter- Autoconfiguration for Realm and ShiroFilterChainDefinition	After adding the spring-boot-web-starter you got the exception that two beans are missing. Realm ShiroFilterChainDefinition Are they not defined on purpose? Both can be provided as a default with @ConditionalOnMissingBean. A default TextConfigurationRealm could be configured with properties. Providing defaults makes it easier to get startet. I could provide a pull request if desired. What do you think?	Improvement	RESOLVED	Major	Fixed	None	1.4.0	None	None		0	Unassigned	Marc G.
SHIRO-619	SHIRO	Used Limited access BeanUtilsBean	This issue stems from https://issues.apache.org/jira/browse/SHIRO-576. In my humble opinion, it is not enough just to set the version of commons-beanutils to 1.9.2 or to 1.9.3 in order to fix CVE-2014-0114 vulnerability because mentioned versions DO NOT fix it by default. In contrast, the fix should be applied explicitly by beanutils-consuming applications (see INTRODUCTION section in http://commons.apache.org/proper/commons-beanutils/javadocs/v1.9.2/RELEASE-NOTES.txt). So, if Shiro uses BeanUtilsBean somehow and is vulnerable to mentioned CVE, it would be worth to configure BeanUtilsBean as it is recommended in beanutils' release notes.	Bug	OPEN	Major	Unresolved	1.3.2, 1.4.0-RC2	None	None	None		0	Unassigned	Yauheni Sidarenka
SHIRO-62	SHIRO	Do not create new session when response is committed (maybe grails specific)	I experienced an issue with the rememberMe cookie inside grails with the jsecurity plugin when attempting to logout through SecurityUtils.getSubject().logout() If there is no JSESSIONID and a rememberMe cookie and the response is committed, SecurityUtils.getSubject() still tries to create a new session and causes the following stacktrace in tomcat. Whatever the reason (maybe a grails bug), it would be better if jsecurity didn't try to create a new session if the response is committed. I am submitting a simple patch and unit test for this. I replaced the jsecurity jar in my grails app with the patched jar and the issue went away and the user is correctly logged out. [99105] 0-SNAPSHOT].[grails] Servlet.service() for servlet grails threw exception java.lang.IllegalStateException: Cannot create a session after the response has been committed at org.apache.catalina.connector.Request.doGetSession(Request.java:2221)if at org.apache.catalina.connector.Request.getSession(Request.java:2031) at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:832) at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:216) at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:545) at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:216) at org.jsecurity.web.servlet.JSecurityHttpServletRequest.getSession(JSecurityHttpServletRequest.java:143) at org.jsecurity.web.servlet.JSecurityHttpServletRequest.getSession(JSecurityHttpServletRequest.java:165) at org.jsecurity.web.session.ServletContainerSessionManager.createSession(ServletContainerSessionManager.java:78) at org.jsecurity.session.mgt.AbstractSessionManager.start(AbstractSessionManager.java:62) at org.jsecurity.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:178) at org.jsecurity.subject.DelegatingSubject.getSession(DelegatingSubject.java:284) at org.jsecurity.subject.DelegatingSubject.getSession(DelegatingSubject.java:272) at org.jsecurity.web.DefaultWebSecurityManager.bind(DefaultWebSecurityManager.java:242) at org.jsecurity.web.DefaultWebSecurityManager.bind(DefaultWebSecurityManager.java:235) at org.jsecurity.mgt.DefaultSecurityManager.getSubject(DefaultSecurityManager.java:418) at org.jsecurity.mgt.DefaultSecurityManager.getSubject(DefaultSecurityManager.java:424) at org.jsecurity.SecurityUtils.getSubject(SecurityUtils.java:53) at org.jsecurity.web.servlet.JSecurityHttpServletRequest.getSubject(JSecurityHttpServletRequest.java:88) at org.jsecurity.web.servlet.JSecurityHttpServletRequest.getSubjectPrincipal(JSecurityHttpServletRequest.java:93) at org.jsecurity.web.servlet.JSecurityHttpServletRequest.getUserPrincipal(JSecurityHttpServletRequest.java:111) at org.springframework.web.servlet.FrameworkServlet.getUsernameForRequest(FrameworkServlet.java:615) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:596) at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501) at javax.servlet.http.HttpServlet.service(HttpServlet.java:627) at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188) at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:679) at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461) at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:399) at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301) at org.codehaus.groovy.grails.web.util.WebUtils.forwardRequestForUrlMappingInfo(WebUtils.java:231) at org.codehaus.groovy.grails.web.util.WebUtils.forwardRequestForUrlMappingInfo(WebUtils.java:208) at org.codehaus.groovy.grails.web.mapping.filter.UrlMappingsFilter.doFilterInternal(UrlMappingsFilter.java:165) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188) at org.codehaus.groovy.grails.web.sitemesh.GrailsPageFilter.parsePage(GrailsPageFilter.java:122) at org.codehaus.groovy.grails.web.sitemesh.GrailsPageFilter.doFilter(GrailsPageFilter.java:85) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188) at org.jsecurity.web.servlet.JSecurityFilter.doFilterInternal(JSecurityFilter.java:382) at org.jsecurity.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:180) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188) at org.codehaus.groovy.grails.web.servlet.mvc.GrailsWebRequestFilter.doFilterInternal(GrailsWebRequestFilter.java:65) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188) at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:96) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76) at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236) at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:172) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108) at com.balsamiq.tomcat.CrossSubdomainSessionValve.invoke(CrossSubdomainSessionValve.java:94) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:174) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:875) at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665) at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528) at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81) at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689) at java.lang.Thread.run(Thread.java:636)	Improvement	CLOSED	Major	Duplicate	None	None	None	None	grails	0	Les Hazlewood	Luis Arias
SHIRO-620	SHIRO	authentication and authorization support for spring websocket	Shiro could add some support for spring websockets.  <websocket:handlers>   <websocket:mapping path="/ws" handler="wsHandler"/>   <websocket:handshake-interceptors>    <bean class="org.apache.shiro.somepackage.WebsocketSecurityInterceptor"></bean>   </websocket:handshake-interceptors>  </websocket:handlers> This security interceptor could do two things by overriding the beforeHandshake method: Decide whether or not the user can open the websocket Set authentication information in the socket attributes	New Feature	OPEN	Major	Unresolved	None	None	Authentication (log-in), (1)	features security sp		0	Unassigned	Laszlo Hornyak
SHIRO-621	SHIRO	REST filter bypassing matched path	The following filter chains are present in configureShiroWeb() function addFilterChain("/*/first/second/third/*", filterConfig(AUTHC_BASIC), filterConfig(REST, "X")); addFilterChain("/*/first/*", filterConfig(AUTHC_BASIC), filterConfig(REST, "Y")); When a request is made for an API- example.appspot.com/v1/first/second/third, the first filter is bypassed and the access is granted for a user with permission Y and not with X. I am using Shiro 1.4.0-RC2 version and Guice 3.0. I have also tried using Shiro 1.4.0 with Guice 4.0. With Shiro 1.4.0 and Guice 4.0: The ShiroWebModule class is creating a randomly ordered path to config map in filterToPathToConfig, because it's using a HashMap instead of a LinkedHashMap. The offending line is here: https://github.com/apache/shiro/blob/master/support/guice/src/main/java/org/apache/shiro/guice/web/ShiroWebModule.java #L161 This should be a LinkedHashMap to maintain original user order.	Bug	OPEN	Major	Unresolved	1.4.0-RC2, 1.4.0	None	Integration: Guice	None	google app	0	Jared Bunting	Shilpi Das
SHIRO-622	SHIRO	Session Management page - Incorrect variable name in example	This is the documentation in this section:- http://shiro.apache.org/session-management.html#using-sessions Like almost everything else in Shiro, you acquire a Session by interacting with the currently executing Subject: Subject currentUser = SecurityUtils.getSubject();  Session session = currentUser.getSession(); session.setAttribute( "someKey", someValue); The subject.getSession() method is a shortcut for calling currentUser.getSubject(true). The variable subject does not exist in the code example. Did I misunderstand what the documentation was trying to say?	Documentation	RESOLVED	Major	Fixed	None	None	None	None		0	Unassigned	Kamal
SHIRO-623	SHIRO	Session Management Page - Strange code in documentation	On this page:- http://shiro.apache.org/session-management.html#session-storage I imagine this:- Serializable sessionId = //get from the inbound request or remote method invocation payload Subject requestSubject = new Subject.Builder().sessionId(sessionId).buildSubject(); Should be this:- Serializable sessionId = Subject requestSubject = new Subject.Builder().sessionId(sessionId).buildSubject();  //get from the inbound request or remote method invocation payload 	Documentation	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Kamal
SHIRO-624	SHIRO	OSGI: commons configuration import should be optional	shiro-core OSGI manifest currently declares the org.apache.commons.configuration2.interpol import as required.	Bug	OPEN	Minor	Unresolved	1.4.0	1.4.1	None	OSGi		0	Francois Papon	Moritz Bechler
SHIRO-625	SHIRO	Update 10 minute Tutorial	The 10 Minute tutorial on the website describes using the IniSecurityManagerFactory() method when setting up the SecurityManager object. This method and class is now deprecated and users are advised to use the Environment interface instead. This tutorial should be updated to include the latest code and examples so both the website and the source code need to be updated	Improvement	OPEN	Major	Unresolved	1.4.0-RC2	None	Sample Apps, (1)	None	ubuntu	0	Unassigned	Daniel Dold
SHIRO-626	SHIRO	Bundle symbolic name conflict	Hi, I was trying to use Apache Shiro in OSGi environment but getting exception while installing shiro-config-* bundles. Bundle symbolic name for these bundles is same which results in exception being thrown at deployment time. Here are the conflicting bundles 1. shiro-config-ogdl - declares the below given header in pom <Bundle-SymbolicName>org.apache.shiro.config.core</Bundle-SymbolicName> 2. shiro-config-core - Also declares the below given header in pom <Bundle-SymbolicName>org.apache.shiro.config.core</Bundle-SymbolicName> Exception trace: org.osgi.framework.BundleException: Bundle symbolic name and version are not unique: org.apache.shiro.config.core:1.4.0 at org.apache.felix.framework.BundleImpl.createRevision(BundleImpl.java:1344) at org.apache.felix.framework.BundleImpl.<init>(BundleImpl.java:113) at org.apache.felix.framework.Felix.installBundle(Felix.java:3026) at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:167) at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:140) Ideally the symbolic names should be unique. I can still live with disabling this check using "org.osgi.framework.bsnversion=multiple" but that is not appropriate. Please let me know if more information is needed. Thanks, Rakesh	Bug	OPEN	Major	Unresolved	None	1.4.1	None	OSGi		0	Francois Papon	Rakesh Kumar
SHIRO-627	SHIRO	something wrong with shiro-spring-boot-web-starter,it did not auto register securityManager???	2017-06-26 19:59:22.126  INFO 6576 --- [           main] c.p.s.Jsr303HibernateValidateApplication : Starting Jsr303HibernateValidateApplication on hujie-PC with PID 6576 (D:\jee-git-repo\study\JSR303-Hibernate-Validate\target\classes started by hujie in D:\jee-git-repo\study\JSR303-Hibernate-Validate) 2017-06-26 19:59:22.150  INFO 6576 --- [           main] c.p.s.Jsr303HibernateValidateApplication : No active profile set, falling back to default profiles: default 2017-06-26 19:59:22.232  INFO 6576 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@539d019: startup date [Mon Jun 26 19:59:22 CST 2017]; root of context hierarchy 2017-06-26 19:59:23.586  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [class org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$51c46c26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:23.624  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [class org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:23.730  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.config.web.autoconfigure.ShiroWebAutoConfiguration' of type [class org.apache.shiro.spring.config.web.autoconfigure.ShiroWebAutoConfiguration$$EnhancerBySpringCGLIB$$7660cc90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:23.772  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'localRealm' of type [class cn.points.study.shiro.realms.LocalRealm$$EnhancerBySpringCGLIB$$b0c600bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:24.032  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'sessionStorageEvaluator' of type [class org.apache.shiro.web.mgt.DefaultWebSessionStorageEvaluator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:24.034  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'subjectDAO' of type [class org.apache.shiro.mgt.DefaultSubjectDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:24.038  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'subjectFactory' of type [class org.apache.shiro.web.mgt.DefaultWebSubjectFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:24.044  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'rememberMeCookieTemplate' of type [class org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:24.049  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'rememberMeManager' of type [class org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:24.055  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'authenticationStrategy' of type [class org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:24.060  INFO 6576 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'authenticator' of type [class org.apache.shiro.authc.pam.ModularRealmAuthenticator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2017-06-26 19:59:24.062  WARN 6576 --- [           main] ationConfigEmbeddedWebApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.apache.shiro.spring.config.web.autoconfigure.ShiroWebFilterConfiguration': Unsatisfied dependency expressed through field 'securityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in class path resource [org/apache/shiro/spring/config/web/autoconfigure/ShiroWebAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.shiro.mgt.SessionsSecurityManager]: Factory method 'securityManager' threw exception; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'authorizer' is defined 2017-06-26 19:59:24.143 ERROR 6576 --- [           main] o.s.b.d.LoggingFailureAnalysisReporter   :   *************************** APPLICATION FAILED TO START ***************************  Description:  Field securityManager in org.apache.shiro.spring.web.config.AbstractShiroWebFilterConfiguration required a bean named 'authorizer' that could not be found. ********************************************************************************8 my boot properties : shiro.enabled=true shiro.web.enabled=true shiro.annotations.enabled=false shiro.loginUrl=/login.html shiro.successUrl=/ shiro.unauthorizedUrl=/unauthorizedUrl.html shiro.userNativeSessionManager=true I read code of shiro-spring-boot-web-starter,and shiro-spring-boot-starter,and i register one bean ,type of realm. but I debug found there is not have securityManager??? why shiro samples did not register securityManager bean,but it can runing, sorry about my english.	Question	CLOSED	Major	Not A Problem	1.4.0	1.4.0	Sample Apps	starter	windows 7	0	Unassigned	hujie
SHIRO-628	SHIRO	does shiro support redis?or	does shiro support redis for session or cache。 we need deployed as a cluster，and sessions need to share。	Question	CLOSED	Major	Invalid	1.4.0	None	Caching	redis	java 1.8, windows	0	Unassigned	hujie
SHIRO-629	SHIRO	WildcardPermission syntax	While looking at the WildcardPermission I see it allows a much wider range of usage then used in all the examples I've seen. Looking at the implementation I notice it is not verifying. I also noted that there is no escaping for matching the [*:,] tokens in the target permission. I think the examples follow the grammar like: permission ::= part ( ':' part ) * part ::= wildcard | options wildcard ::= '*' options ::= literal ( ',' literal ) literal ::= [^*:,]+ This should disallow permissions like "abc*def", "abc:def,*:foo", "abc:", "x:::::::::::::::". However, the implementation seems to more or less allow anything without warnings or errors. Is this intentional? Last, the implementation looks quite expensive since it requires for each construction numerous lists, sets, and arrays. It also executes n*m a regular expression operations for the split. Since the target permission could be constructed frequently since it contains the parameters this is imho very costly. Therefore it would be nice if a formal grammar including the character set and escaping.	Question	OPEN	Critical	Unresolved	None	None	Authorization (access control)	None		0	Unassigned	Peter Kriens
SHIRO-63	SHIRO	Provide support for caching authorization when a user authenticates for the lifetime of a session	Certain Realm implementations have access to a user's authorization information at login, but cannot access authorization info at a later point in time. For example, when authenticating to an external system, such as LDAP, the user's credentials are required to access the LDAP repository. Since Ki (rightly) does not hold onto the user's credentials after authentication, the only time that their authorization info can be obtained is at login. This doesn't currently work well with Ki because Ki treats authentication and authorization as two separate steps, and does not allow the authorization info to be obtained at the time of login - nor does it allow the authorization info to be cached throughout the lifetime of a session. Ki should add support for obtaining authorization info during the authentication process and caching them for the lifetime of a user's session. For more information, see the following email thread that generated this issue: http://markmail.org/thread/hw235pals5jmclgu	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Jeremy Haile
SHIRO-630	SHIRO	ModularRealmAuthorizer ignores JAX-RS proxied Realms	I'm developing in a web environment that uses JAX-RS for dependency injection. I'd like to inject my realms by proxy so that they can be injected in request scope into singleton parents. However, the logic in ModularRealmAuthorizer#isPermitted(PrincipalCollection, Permission) does an `instanceof Authorizer` check that will fail for proxied, injected realms because they are of type `Proxy`. This issue seems to appear in versions 1.2 and later.	Bug	OPEN	Major	Unresolved	None	None	None	None	jersey	0	Unassigned	Sean Lyons
SHIRO-631	SHIRO	Principal mapping rules similar to Hadoop's auth_to_local	Feature Request to add principal mapping rules similar to Hadoop's auth_to_local. This will allow munging pincipals and rule based remappings to differentiate duplicate users in multi-domain Active Directory forests where the LDAP results returned from the global catalog include duplicate usernames which need to be translated with a prefix/suffix in order to differentiate between domains to prevent users from different domains sharing logins, permissions etc.	New Feature	OPEN	Blocker	Unresolved	None	None	Authentication (log-in), (2)	None	hdp, kerberos	0	Unassigned	Hari Sekhon
SHIRO-632	SHIRO	org.apache.felix:maven-bundle-plugin causing duplicate class problems between core and lang	Possibly other conflicts, but without knowing much about the maven-bundle-plugin it looks like we should be able to exclude the in tree shiro dependencies. https://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html#export-package Reported on the user mailing list title: Maven sources missing / duplicate classes	Bug	OPEN	Major	Unresolved	None	1.4.1	None	OSGi		0	Francois Papon	Brian Demers
SHIRO-633	SHIRO	Remove HttpSession attributes when invalidated	When calling logout the HttpSession does not remove the attributes added throughout the session. This results in the HttpSession not being valid after the logout longer valid and the RAP application to wait forever, due to the HttpSessionBindingListener not being called. The problem can be found in the RAP forum Apache tomcat invalidate states that it should Invalidate the session and then unbind any objects bound to it.	Bug	OPEN	Major	Unresolved	1.4.0-RC2	None	Session Management	None	linux	0	Unassigned	Michael Pusterhofer
SHIRO-634	SHIRO	confilict with spring-boot-starter-data-jpa	i am using the shiro-spring-boot-web-starter:1.4.0 with spring boot. the attachment is a maven based project. the example class is com.ankin.dajucheng.controller.ClassificationController. when spring-data-jpa is used, the method:queryClassifications in the controller class of spring mvc can not mapping to the correct method, if you enter 'http://localhost:8500/classification/simple', it will return 404. But if i remove the shiro annotations(@RequiresRoles) in the controller class, then if you enter 'http://localhost:8500/classification/simple', it will return the correct string 'simple:success'; the datasource is set to jdbc:mysql://192.168.1.118:3306/nmx in application.properties, you can change to any mysql database url. i haven't add any entity, so every avaliable database is ok.	Bug	OPEN	Major	Unresolved	1.4.0-RC2	None	Integration: Spring	None	windows 10, intellij	0	Les Hazlewood	gejian
SHIRO-635	SHIRO	confilict with spring-boot-starter-data-jpa	i am using the shiro-spring-boot-web-starter:1.4.0 with spring boot. the attachment is a maven based project. the example class is com.ankin.dajucheng.controller.ClassificationController. when spring-data-jpa is used, the method:queryClassifications in the controller class of spring mvc can not mapping to the correct method, if you enter 'http://localhost:8500/classification/simple', it will return 404. But if i remove the shiro annotations(@RequiresRoles) in the controller class, then if you enter 'http://localhost:8500/classification/simple', it will return the correct string 'simple:success'; the datasource is set to jdbc:mysql://192.168.1.118:3306/nmx in application.properties, you can change to any mysql database url. i haven't add any entity, so every avaliable database is ok. public class JpaRealm extends AuthorizingRealm { @Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) { String username = (String) principalCollection.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); return authorizationInfo; } @Override protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException { String username = (String) authenticationToken.getPrincipal(); SimpleAuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo( username, authenticationToken.getPrincipal(), null, getName() ); return authenticationInfo; } } @RestController @RequestMapping("/classification") public class ClassificationController { private static final Logger logger = LoggerFactory.getLogger(ClassificationController.class); @RequestMapping(value = "/simple", method = RequestMethod.GET) public String queryClassifications(@RequestParam(name = "id", defaultValue = "0") Integer parentId) { return "simple:success"; } @RequiresRoles("ADMIN") @RequestMapping(method = RequestMethod.POST) @ResponseStatus(HttpStatus.CREATED) public String saveClassification(String classification) { return null; }  @RequiresRoles("ADMIN") @RequestMapping(method = RequestMethod.PUT) public String updateClassification(String classification) { return null; } } @SpringBootApplication(exclude = ErrorMvcAutoConfiguration.class) public class DajuchengApplication extends SpringBootServletInitializer { @Override protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) { return configureApplication(builder); } public static void main(String[] args) { configureApplication(new SpringApplicationBuilder()).run(args); } private static SpringApplicationBuilder configureApplication(SpringApplicationBuilder builder) { return builder.sources(DajuchengApplication.class).bannerMode(Banner.Mode.OFF); } @Bean public Realm realm() { return new JpaRealm(); } @Bean public ShiroFilterChainDefinition shiroFilterChainDefinition() { DefaultShiroFilterChainDefinition chainDefinition = new DefaultShiroFilterChainDefinition(); chainDefinition.addPathDefinition("/**", "anon"); return chainDefinition; } } debug=false server.port=8500 server.context-path=/ server.tomcat.uri-encoding=UTF-8 server.session.timeout=43200 spring.http.encoding.charset=UTF-8 spring.http.encoding.force=true #spring-boot-data-jpa\u9ED8\u8BA4\u4E3A\u4E0B\u5212\u7EBF, \u8FD9\u91CC\u6539\u4E3A\u4E0E\u6570\u636E\u5E93\u5B57\u6BB5\u5B8C\u5168\u4E00\u81F4 spring.jpa.open-in-view=false spring.jpa.hibernate.ddl-auto=none spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl shiro.loginUrl=/dispatch.jsp shiro.unauthorizedUrl=/unauthorized.jsp spring.datasource.driver-class-name=com.mysql.jdbc.Driver #spring.datasource.type=com.zaxxer.hikari.HikariDataSource spring.datasource.url=jdbc:mysql://192.168.1.118:3306/nmx?useSSL=false&useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&useServerPrepStmts=true&cachePrepStmts=true&cacheCallableStmts=true&prepStmtCacheSize=250&prepStmtCacheSqlLimit=1024&useConfigs=maxPerformance spring.datasource.username=ankin spring.datasource.password=anKins10#410 <dependencies> <dependency> <groupId>org.apache.shiro</groupId> <artifactId>shiro-spring-boot-web-starter</artifactId> <version>1.4.0</version> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-jpa</artifactId> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-web</artifactId> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> <scope>runtime</scope> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <scope>runtime</scope> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-configuration-processor</artifactId> <optional>true</optional> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-tomcat</artifactId> <!-<scope>provided</scope>-> </dependency> <dependency> <groupId>org.apache.tomcat.embed</groupId> <artifactId>tomcat-embed-jasper</artifactId> <!-<scope>provided</scope>-> </dependency> <!-test start-> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> <scope>test</scope> </dependency> <dependency> <groupId>org.springframework.restdocs</groupId> <artifactId>spring-restdocs-mockmvc</artifactId> <scope>test</scope> </dependency> <!-test end-> </dependencies>	Bug	OPEN	Major	Unresolved	1.4.0-RC2	None	Integration: Spring	None	windows 10, intellij	0	Les Hazlewood	gejian
SHIRO-636	SHIRO	Adding a substring syntax for LDAP user DN	Hello. I would like to propose a new syntax of substring LDAP user DN. For now, "DefaultLdapRealm" supports only "{0}" token to substitute user DN template with a user's principal. In my case, I need to substitute user DN template with a part of user's principle. For example if I have a principal as a form of 'organization code + username', I need to make the user's DN as follows: CN=OAalice, OU=OA, ... So I would like to propose a new syntax like "{0:beginIndex:endIndex}" in order to get a part of a user's principle. The template would be: CN={0},OU={0:0:2},... (The indexes are following Java's substring API's specifications.) What do you think about my proposal? If you think it is acceptable, I would be able to make a fix. Thanks.	Improvement	CLOSED	Minor	Not A Problem	None	None	Authentication (log-in), (1)	None		0	Unassigned	Hyangtack Lee
SHIRO-637	SHIRO	Refresh cached session in HTTP request after user logs out	For native session management in web environments, the ShiroHttpServletRequest caches calls to getSession() by saving a copy of the current subject's session to a member variable. This copy is never updated even when the subject logs out and the session is destroyed. When the session is accessed again after logout, an UnknownSessionException can be thrown because the session referenced in the request is not physically available anymore (this could be the cause for SHIRO-614). The Shiro HTTP request therefore has to check the state of the cached session and refresh it if necessary, just as the original Jetty Request class does as well. Please see the attached patch for a possible solution that Works For Me™	Bug	OPEN	Major	Unresolved	1.3.2	None	Authentication (log-in), (2)	easyfix patch		0	Unassigned	Philipp Kapfer
SHIRO-638	SHIRO	Update osgi bundle manifest to support Spring 4.x	Update <spring.version> dependency to 4.x We've been using shiro-spring with Spring 4.2.8 so far without issues (by manually updating the manifest)	New Feature	OPEN	Major	Unresolved	1.4.0	1.4.1	Integration: Spring	OSGi		0	Les Hazlewood	João Taborda
SHIRO-639	SHIRO	Refresh cached session in HTTP request after user logs out	For native session management in web environments, the ShiroHttpServletRequest caches calls to getSession() by saving a copy of the current subject's session to a member variable. This copy is never updated even when the subject logs out and the session is destroyed. When the session is accessed again after logout, an UnknownSessionException can be thrown because the session referenced in the request is not physically available anymore (this could be the cause for SHIRO-614). The Shiro HTTP request therefore has to check the state of the cached session and refresh it if necessary, just as the original Jetty Request class does as well. Please see the attached patch for a possible solution that Works For Me™	Bug	RESOLVED	Major	Duplicate	1.3.2	None	Authentication (log-in), (2)	patch usability	jetty, wicket	0	Unassigned	Philipp Kapfer
SHIRO-64	SHIRO	SimpleAuthenticationInfo should implement java.io.Serializable	A remoting scenario is causing exceptions because this class isn't serializable.	Improvement	CLOSED	Major	Duplicate	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-640	SHIRO	Support user search LDAP expressions	I'm trying to deploy Apache Zeppelin (https://zeppelin.apache.org/), which uses Shiro for security. In our organization LDAP is set up in a way that everybody authenticates using email address (which is not part of DN), rather than UID (which is part of DN, but looks extremely ugly). Other solutions integrate with this scheme by letting me configure LDAP search expression to resolve user DN, for example: (&(mail=%s)(objectclass=Person)). The resolved DN is then used in a regular way for authentication. I wonder if it would be possible to add such functionality to Shiro?	Improvement	OPEN	Trivial	Unresolved	1.2.3	None	Realms	None		0	Unassigned	mephi42
SHIRO-641	SHIRO	shiro-*-core Jars define some of the same classes from their dependencies	I've noticed that shiro-core.jar contains some of the same classes from its dependencies. For instance org.apache.shiro.cache.MemoryConstrainedCacheManager is present in shiro-core.jar, but also in shiro-cache.jar. There are at least a dozen other examples. Similar issue is present for shiro-crypto-core.jar, shiro-config-core.jar, etc. Is there a reason behind this?	Bug	CLOSED	Major	Duplicate	None	None	None	None		0	Unassigned	Buğra Gedik
SHIRO-642	SHIRO	FirstRealmAuthenticator	I noticed that Shiro was having different functionalities when between one and many realms in use. I used time to dig into this and it resulted in a suggestion for a new Shiro class with name FirstRealmAuthenticator. My suggestion for FirstRealmAuthenticator is that it is equal to ModularRealmAuthenticator except that when it finds first realm that is used for token it will handle it in the same way as it was the only realm and skip all other realms. The benefit of this is speed and similarity. Here is example code for method doMultiRealmAuthentication: protected AuthenticationInfo doMultiRealmAuthentication(Collection<Realm> realms, AuthenticationToken token) { AuthenticationStrategy strategy = getAuthenticationStrategy(); AuthenticationInfo aggregate = strategy.beforeAllAttempts(realms, token); if (log.isTraceEnabled()) { log.trace("Iterating through {} realms for PAM authentication", realms.size()); } for (Realm realm : realms) { aggregate = strategy.beforeAttempt(realm, token, aggregate); if (realm.supports(token)) { log.trace("Attempting to authenticate token [{}] using realm [{}]", token, realm); AuthenticationInfo info = realm.getAuthenticationInfo(token); aggregate = strategy.afterAttempt(realm, token, info, aggregate, null); break; } else { log.debug("Realm [{}] does not support token {}. Skipping realm.", realm, token); } } aggregate = strategy.afterAllAttempts(token, aggregate); return aggregate; }	New Feature	OPEN	Minor	Unresolved	None	None	Authentication (log-in)	features performance		0	Unassigned	Vidar Vevik
SHIRO-643	SHIRO	Add ability for shiro.ini to specify case sensitive wildcard permissions.	Currently when using permissions generated from the shiri.ini file all permissions are the default case-insensitive WildcardPermissions. This change is to create a mechanism to specify that the permissions should be case sensitive. Additionally the solution should allow for replacement of the PermissionResolver implementation.	Improvement	OPEN	Minor	Unresolved	1.4.0-RC2	None	Configuration	None		0	Unassigned	Claude Warren
SHIRO-644	SHIRO	EhCacheManager.getCache Error Cache cacheName already exists	1.4.0-RC2 EhCacheManager.java line 155~172   net.sf.ehcache.Ehcache cache = ensureCacheManager().getEhcache(name); if (cache == null) {     synchronized (name.intern()) {         cache = manager.getCache(name);         if (cache == null) {             if (log.isInfoEnabled()) {                 log.info("Cache with name '{}' does not yet exist.  Creating now.", name);             }             this.manager.addCache(name);               cache = manager.getCache(name);              ...         }     } } else {  ... }	Bug	OPEN	Major	Unresolved	1.4.0-RC2, 1.4.0	None	Caching	None		0	Unassigned	zhaohuihua
SHIRO-645	SHIRO	Missing dependencies in shiro-core	There are two packages in Import-Package section of shiro-core manifest: org.apache.commons.beanutils org.apache.commons.configuration2.interpol So, if they are optional, declare it in maven dependencies with optional flag.	Bug	CLOSED	Major	Duplicate	1.4.0-RC2	None	None	None		0	Unassigned	Alexander Rotnov
SHIRO-646	SHIRO	Unable to login a DelegatingSubject on a DefaultWebSecurityManager	When programatically creating a DefaultWebSecurityManager, it is not possible to login a DelegatingSubject, for example built through Subject.Builder.   Pull request:  SHIRO-646 Allow a DelegatingSubject to login Statelessly on a DefaultWebSecurityManager #82     The problem is twofold. First, in DefaultWebSecurityManager, no SessionManager is set for the DefaultWebSessionStorageEvaluator unless the DefaultSubjectDAO is set through the DefaultWebSecurityManager.setSubjectDAO method. The DefaultSubjectDAO and DefaultWebSessionStorageEvaluator set in the noargs constructor in DefaultWebSecurityManager does not set a SessionManager for the DefaultWebSessionStorageEvaluator. The null SessionManager means that the DefaultWebSessionStorageEvaluator will always decide to create a Session for the DelegatingSubject, which will fail due to it not having a  a HTTP compatible session. The error occurs in ServletContainerSessionManager here:   protected Session createSession(SessionContext sessionContext) throws AuthorizationException { if (!WebUtils.isHttp(sessionContext)) { String msg = "SessionContext must be an HTTP compatible implementation."; throw new IllegalArgumentException(msg); }     Second, The DefaultWebSubjectFactory will ALWAYS create a WebDelegatingSubject when logging in a Subject, no matter if the Subject was, for example a Delegating Subject to begin with.  The order of events is a follows: DelegatingSubject is created through Subject.Builder.  DelegatingSubject.login(AuthToken) is called.  DefaultSecurityManager.login(Subject, AuthenticationToken) is called which in turn calls createSubject(AuthenticationToken, AuthenticationInfo, Subject).  Since we are using a DefaultWebSecurityManager, createSubjectContext() returns a DefaultWebSubjectContext.  When DefaultWebSubjectFactory is then called on to create a new Subject, it recieves a DefaultWebSubjectContext even though the DelegatingSubject was the caller.  That means that a WebDelegatingSubject is created with a null ServletRequest and ServletResponse.  That fails when again in the ServletContainerSessionManager here (The same place as before):     protected Session createSession(SessionContext sessionContext) throws AuthorizationException { if (!WebUtils.isHttp(sessionContext)) { String msg = "SessionContext must be an HTTP compatible implementation."; throw new IllegalArgumentException(msg); }   The fix is twofold: Change the noargs constructor in DefaultWebSecurityManager so the DefaultWebSessionStorageEvaluator has a SessionManager set. Introduce a check in DefaultWebSubjectFactory which checks if the existing Subject was NOT a WebSubject, and call the super.createSubject(context) method if so.  	Bug	OPEN	Major	Unresolved	1.4.0-RC2	None	Authentication (log-in)	pull-request-availab		0	Unassigned	Martin Nybo Nielsen
SHIRO-647	SHIRO	SubjectBuilder doesn't fill principals when principals and sessionId is specified	Hello.  I'm trying to implement one role at a time scenario.  It this case first I'm signing user with  //Kotlin val token = UsernamePasswordToken(credentials.name, credentials.password)  SecurityUtils.getSubject().login(token)  then, when the user select role I create session:  val sessionId = SecurityUtils.getSubject().session.id as String  val mySession = MySession(sessionId, selectedRoleId)  then when the user wants to execute request I restore Subject from this sessionId  val subject = Subject.Builder()         .sessionId(mySession.sessionId)         .buildSubject()  and everything goes fine, in the doGetAuthorizationInfo method I'm able to identify the Subject from principalCollection since there is his id (eg. 2).  fun doGetAuthorizationInfo(principals: PrincipalCollection) {      val subjectId : Long = principals.fromRealm(name).iterator().next() as Long      ...  but the problem is when I want to be aware of selected role in the doGetAuthorizationInfo method. I tried to pass another principal with selected roleId but  val rolePrincipal = RolePrincipal(mySession.roleId)  val principals = SimplePrincipalCollection(listOf(rolePrincipal, mySession.id), realm.name)   val subject = Subject.Builder()        .principals(principals)        .sessionId(mySession.id)        .buildSubject()  then the session is not being resolved and in the doGetAuthorizationInfo method, I'm only getting raw mySession.id(eg. "36fa4f4a-d55e-47df-8170-13bcdf6f2aa6") instead of mine subjectId(eg. 2).  In other words                   .principals(principals)  and                   .sessionId(mySession.id)  seems to not work together, the .principals is blocking .sessionId from being resolved to subjectId.      EDIT: It's not elegant but I found workaround:     val subject = Subject.Builder()         .sessionId(mySession.id)         .buildSubject()  // Recreate Subject with additional rolePrincipal val rolePrincipal = RolePrincipal(mySession.roleId) val principals = listOf(subject.principal, rolePrincipal)  val subjectContext = DefaultSubjectContext() subjectContext.session = subject.session subjectContext.isAuthenticated = subject.isAuthenticated subjectContext.principals = SimplePrincipalCollection(principals, realm.name) val subjectRecreated = DefaultSubjectFactory().createSubject(subjectContext)  if (!subjectRecreated.isAuthenticated)     throw AuthorizationException("Restored session is not authenticated")  subjectRecreated.checkPermission("user:read:*")    and then in my doGethAuthorizationInfo I'm easly getting both subjectId and selected roleId   override fun doGetAuthorizationInfo(principals: PrincipalCollection){     var subjectId: Long = -1L     var roleId: Long = -1L      for (principal in principals.fromRealm(name).iterator())         when (principal) {             is Long -> subjectId = principal             is RolePrincipal -> roleId = principal.roleId         } But I'm sure there is better approach to do so.  	Bug	OPEN	Minor	Unresolved	1.3.2	None	Authentication (log-in)	None		0	Unassigned	Stanisław Barański
SHIRO-648	SHIRO	SecurityUtils.getSubject() throws org.apache.geode.security.AuthenticationFailedException intermittently	When our application starts, we set the vm static SecurityManager using SecurityUtils.setSecurityManager(xyz); But sometimes when we do login using: Subject currentUser = SecurityUtils.getSubject(); curentUser.login(tokent) we occasionally get the following exception: org.apache.geode.security.AuthenticationFailedException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration. We suspect that it's because the vm static SecurityManager is not volatile and not visible to the login thread....	Bug	OPEN	Major	Unresolved	1.3.2	None	Authentication (log-in)	None		0	Unassigned	Jinmei Liao
SHIRO-649	SHIRO	内存介质更新Session时不起作用	MemorySessionDAO private ConcurrentMap<Serializable, Session> sessions; public MemorySessionDAO() { this.sessions = new ConcurrentHashMap<Serializable, Session>(); } protected Session storeSession(Serializable id, Session session) { if (id == null) { throw new NullPointerException("id argument cannot be null."); } return sessions.putIfAbsent(id, session); } sessions.putIfAbsent(id, session)不存在的时候才会put值，当更新Session时不起作用	Bug	OPEN	Major	Unresolved	1.4.0-RC2	None	RememberMe	None		0	Unassigned	bing.jj.fly
SHIRO-65	SHIRO	EhCache - a SessionManager#globalSessionTimeout should translate to the backing cache's timeToIdle	If using an overflowing cache as the SessionManager's backing implementation, a session timeout should automatically translate to the cache region's Time-To-Idle value (there should not be a Time-To-Live setting). This way, the cache will auto-clean any orphaned sessions automatically - no need to start a cleanup thread automatically. I don't know what, if any, repercussions this would have to default timer mechanism in AbstractValidatingSessionManager.	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-650	SHIRO	Shiro JAX-RS is not an OSGi bundle	The Shiro project provides its various binaries as OSGi bundles so that they can be used in an OSGi environment. For some reason the shiro-jaxrs artifact is not an OSGi bundle, and must therefore be repackaged to be used in OSGi.	Bug	RESOLVED	Major	Resolved	None	1.4.1	None	None		0	Francois Papon	Timothy Ward
SHIRO-652	SHIRO	Upgrade Shiro Feature to Karaf 4.x	When deploying Shiro feature in Karaf, some dependencies seems to be broken (shiro-core, shiro-web, shiro-hazelcast, shiro-spring). For Spring, we have to add spring-legacy repo and install the version 3.2.18.RELEASE_1 of spring feature. karaf@root()> feature:repo-add spring-legacy karaf@root()> feature:install spring/3.2.18.RELEASE_1 For the other feature, we have to update the feature.xml.	Improvement	OPEN	Major	Unresolved	None	1.4.1	None	None		0	Francois Papon	Francois Papon
SHIRO-653	SHIRO	Spring-boot registers shiro filter only on REQUEST dispatcher	When ErrorPageFilter of spring forwards to error url, shiro filter is not part of filter chain so the user is logout	Bug	RESOLVED	Major	Resolved	1.4.0-RC2	1.4.1	Web	None		0	Francois Papon	olivier garry
SHIRO-654	SHIRO	Multiple shiro OSGi bundles export the same packages	Note: Discovered in bundles built from the current master of shiro, i.e. version 1.4.1-SNAPSHOT. I don't know if it actually affects 1.4.0. Multiple OSGi bundles in shiro exports the same packages. This is a problem because another bundle importing those packages will import only the first package it finds and only see the classes in that package. The correct fix is to rename packages in the bundles so that they don't overlap. The overlapping bundles, are (these are the ones I've seen. There may be more duplicates in bundles that I haven't loaded): Package name Version ID Bundle Name org.apache.shiro.cache 1.4.1.SNAPSHOT 86 org.apache.shiro.cache org.apache.shiro.cache 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.codec 1.4.1.SNAPSHOT 93 org.apache.shiro.lang org.apache.shiro.codec 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.config.event 1.4.1.SNAPSHOT 87 org.apache.shiro.config.core org.apache.shiro.config.event 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.config 1.4.1.SNAPSHOT 87 org.apache.shiro.config.core org.apache.shiro.config 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.crypto.hash.format 1.4.1.SNAPSHOT 91 org.apache.shiro.crypto.hash org.apache.shiro.crypto.hash.format 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.crypto.hash 1.4.1.SNAPSHOT 91 org.apache.shiro.crypto.hash org.apache.shiro.crypto.hash 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.crypto 1.4.1.SNAPSHOT 90 org.apache.shiro.crypto.core org.apache.shiro.crypto 1.4.1.SNAPSHOT 89 org.apache.shiro.crypto.cipher org.apache.shiro.crypto 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.event.support 1.4.1.SNAPSHOT 92 org.apache.shiro.event org.apache.shiro.event.support 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.event 1.4.1.SNAPSHOT 92 org.apache.shiro.event org.apache.shiro.event 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.io 1.4.1.SNAPSHOT 93 org.apache.shiro.lang org.apache.shiro.io 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro.util 1.4.1.SNAPSHOT 93 org.apache.shiro.lang org.apache.shiro.util 1.4.1.SNAPSHOT 88 org.apache.shiro.core org.apache.shiro 1.4.1.SNAPSHOT 93 org.apache.shiro.lang org.apache.shiro 1.4.1.SNAPSHOT 88 org.apache.shiro.core (these are results from the package:exports command in the apache karaf console)	Bug	OPEN	Major	Unresolved	1.4.0	1.4.1	None	OSGi osgi		0	Francois Papon	Steinar Bang
SHIRO-655	SHIRO	shiro-core has an undesirable runtime OSGi dependency to spring-beans	The manifest.mf of the shiro-core jar has a runtime dependency on org.apache.commons.configuration2.interpol, The org.apache.commons.configuration2.interpol package is provided by         <dependency>             <groupId>org.apache.commons</groupId>             <artifactId>commons-configuration2</artifactId>             <version>2.1</version>             <scope>compile</scope>         </dependency> and this bundle (it is a bundle with an OSGi MANIFEST.MF) has springframework package requirements in the Import-Package header: org.springframework.beans.factory, org.springframework.core.env, org.springframework.core.io, org.springframework.util It should be possible to fix this by bumping the config-configurations2 dependency to to 2.2, for in that version of the bundle, the springframework packages are made optional (and the runtime requirement goes away).	Bug	RESOLVED	Major	Resolved	1.4.0-RC2	1.4.1	None	OSGi osgi		0	Francois Papon	Steinar Bang
SHIRO-656	SHIRO	NoSuchMethodError using shiro-core-1.4.0	shiro.ini [main] for conf details see: http://shiro.apache.org/session-management.html before enabling this make sure shiro-ehcache is included in framework/build.gradle ehcacheManager = org.apache.shiro.cache.ehcache.EhCacheManager NOTE: no credentialsMatcher set here, configured in Moqui conf file (moqui-conf.user-facade.password.@encrypt-hash-type) moquiRealm = org.moqui.impl.util.MoquiShiroRealm securityManager.cacheManager = $ehcacheManager securityManager.realms = $moquiRealm   Call to setup security manager results in java.lang.NoSuchMethodError: org.apache.commons.beanutils.PropertyUtilsBean.addBeanIntrospector(Lorg/apache/commons/beanutils/BeanIntrospector;)V org.apache.shiro.config.ReflectionBuilder.<init>(ReflectionBuilder.java:127) ~[shiro-core-1.4.0.jar:1.4.0] org.apache.shiro.config.ReflectionBuilder.<init>(ReflectionBuilder.java:120) ~[shiro-core-1.4.0.jar:1.4.0] org.apache.shiro.config.IniSecurityManagerFactory.<init>(IniSecurityManagerFactory.java:64) ~[shiro-core-1.4.0.jar:1.4.0] org.apache.shiro.config.IniSecurityManagerFactory.<init>(IniSecurityManagerFactory.java:68) ~[shiro-core-1.4.0.jar:1.4.0] org.apache.shiro.config.IniSecurityManagerFactory.<init>(IniSecurityManagerFactory.java:73) ~[shiro-core-1.4.0.jar:1.4.0] org.moqui.impl.context.ExecutionContextFactoryImpl.getSecurityManager(ExecutionContextFactoryImpl.groovy:863) ~[moqui-framework-2.1.1.jar:2.1.1]    	Bug	OPEN	Major	Unresolved	1.4.0	None	Authentication (log-in)	None	centos, tomcat	0	Unassigned	Stephen Agyepong
SHIRO-657	SHIRO	Add desc to RequiresPermissions	This is a feature request. The use case is that I can parse RequiresPermissions to generate system permission list. However, I want to generate description text for each defined permission meanwhile. These texts will give better user experience rather than actual permissions. For example: @RequiresPermissions(value="admin:list", desc="Admin List Permission")  @GetMapping("/list") public Object list(){  } Afterwards, I can generate following json array and only show label property for users. [   {     id: "admin:list",     label: "Admin List Permission"   } ... ]	Improvement	CLOSED	Minor	Won't Do	None	None	None	None		0	Unassigned	Junling Bu
SHIRO-658	SHIRO	Problems building shiro on openjdk-8 on current debian stable (9.6 "stretch")	Shiro master HEAD currently doesn't build on openjdk-8. The "mvn clean install" command fails with the following error message: [ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test (default-test) on project shiro-crypto-core: Execution default-test of goal org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test failed: The forked VM terminated without properly saying goodbye. VM crash or System.exit called? [ERROR] Command was /bin/sh -c cd /home/sb/workspaces/shiro/shiro/crypto/core && /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java -javaagent:/home/sb/.m2/repository/org/jacoco/org.jacoco.agent/0.7.7.201606060606/org.jacoco.agent-0.7.7.201606060606-runtime.jar=destfile=/home/sb/workspaces/shiro/shiro/crypto/core/target/jacoco.exec -jar /home/sb/workspaces/shiro/shiro/crypto/core/target/surefire/surefirebooter5674279985738901440.jar /home/sb/workspaces/shiro/shiro/crypto/core/target/surefire/surefire1414141480594227705tmp /home/sb/workspaces/shiro/shiro/crypto/core/target/surefire/surefire_02190721174349612856tmp This is a known openjdk-8 issue https://stackoverflow.com/a/53016532 and is fixed in 8u191 but will fail on the current debian stable wich has 8u181.	Bug	RESOLVED	Major	Resolved	None	1.4.1	None	None	debian, java 1.8	0	Francois Papon	Steinar Bang
SHIRO-659	SHIRO	Upgrade to OWASP dependency-check-maven plugin 4.0.0		Dependency upgrade	RESOLVED	Major	Resolved	None	1.4.1	None	None		0	Francois Papon	Francois Papon
SHIRO-66	SHIRO	RealmSecurityManager ensureRealms() - remove method and its usage	The RealmSecurityManager.ensureRealms() method and its usages should be removed. The underlying delegate Authorizer and/or Authenticator should instead perform this check. That method should probably be moved to each of the abstract parent classes for the Authorizer and Authenticator interface to retain the functionality - just not require it in the SecurityManager directly. This issue is being raised to resolve the condition when the SecurityManager is a client-tier instance that is really a proxy back to a server-side instance. The client tier instance does not need any realms because all of its calls would be delegated back to the server side one. The ensureRealms() check in this case prevents the client-tier instance from being used (or requires a hack to override that method to do nothing).	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-67	SHIRO	Update CodecSupport to support File and InputStream conversion to byte arrays	CodecSupport is used as the parent for all of the Hash implementations. A Hash should be able to take any File or InputStream and generate a Hash value, i.e.: new Sha256Hash(myFile); or new Sha512Hash(anInputStream);	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-68	SHIRO	Passthrough configuration methods should probably be reflection-based	We currently have a lot of methods to support passthrough configuration to wrapped/delegate objects. Most of the time, those passthrough methods are very specific to the underlying wrapped implementation - we do a few 'instanceof' checks to see if the underlying implementation is one of our default implementations or interfaces, and if so, cast the object and then make the call. Instead, it might be nicer to just use reflection (or PropertyUtils) to take the delegate object and reflectively call a setter method, without checking for type first. If the method call fails we could throw a nice message about an unexpected type. This would allow us to get rid of a lot of 'fluff' interfaces that might exist solely for passthrough configuration, which only add to bloat and often confusion to those perusing the APIs.	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Les Hazlewood
SHIRO-69	SHIRO	DefaultSecurityManager 'globalSessionTimeout' property	A 'globalSessionTimeout' property should be accessible on the DefaultSecurityManager implementation so that its setting could propagate down to the DefaultSessionManager implementation. This is a convenience feature so the end-user doesn't have to configure a SessionManager implementation and then inject it into the SecurityManager implementation. Instead, they can set a single property: sessionManager.globalSessionTimeout = blah	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-7	SHIRO	Session Timeout - Unconditional	The SimpleSession class is expiring sessions unconditionally after the default timeout of 30 minutes, regardless of any reads or writes to the session. This issue is caused by the lastAccessTime field of the SimpleSession class not being updated when a session attribute is read or written. Since session expiration is dependent on the lastAccessTime value, this field needs to be updated each time a session attribute is read or written to the session. The fix for this issue would be to call the touch() method of the SimpleSession class each time an attribute is read or written to the session. Since the touch() method updates the lastAccessTime field with the current time, this call is sufficient to perform the update that is required.	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Alan Cabrera	Todd Kofford
SHIRO-70	SHIRO	Rename ModularAuthenticationStrategy interface and implementations	ModularAuthenticationStrategy is cumbersome - AuthenticationStrategy is good enough. Also, the implementation names of this interface are equally cumbersome and annoying. For example, AllSuccessfulModularAuthenticationStrategy could probably be shortened to AllSuccessfulStrategy.	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Unassigned	Alan Cabrera
SHIRO-71	SHIRO	Using SecureRemoteInvocationFactory without a preestablished session	The current implementation of the SecureRemoteInvocationFactory type assumes a use case where there has already been a session established via some other means then RMI. This use case can been seen in the Swing Webstart / Spring example. This example application creates a session via Spring webflow and then passes the session id of the newly created session to the Java Webstart application as a property. While this works fine for a Java Webstart environment it creates a problem for other uses cases where there is no preestablished session. For example a use case where you want your users to be able to login via a stand alone Swing application which uses Spring and RMI.	Improvement	OPEN	Minor	Unresolved	None	None	None	None		0	Unassigned	Jasper Siepkes
SHIRO-72	SHIRO	rememberMe cookie value is sometimes sent without appropriate base64 padding	I experienced this issue this morning (easily visible with Firebug). I am supplying a patch with a fix and unit test. It might be better to be safe to encode the remember me cookie value as ascii hex instead of base64 instead.	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Luis Arias
SHIRO-73	SHIRO	Add Authentication Caching to AuthenticatingRealm	Stateless clients would benefit from an authentication cache. For example if a stateless client may make several authentication requests within a few seconds. Ideally the cache timeouts would be different. For example i might want to sent the Authentication cache to 30 seconds, but the Authorization cache to longer. (From previous email to Les) I created a Realm that authenticates against a URL, if the user has access. The problem is that we have a stateless client [maven2] that connects to our server[Nexus], and needs to authenticate each time. This means the same user needs to authenticate 9+ times in a few seconds (for a single task).	New Feature	CLOSED	Major	Fixed	1.1.0	1.2.0	None	None		0	Les Hazlewood	Toby Stevens
SHIRO-74	SHIRO	Allow EhCacheManager to use singleton CacheManager instance	Currently we create a new CacheManager if one is not injected for reasons described in code comments in EhCacheManager.init(). However, in some cases it is useful to simply use the EhCache CacheManager singleton. A couple of examples: 1) When clustering with Terracotta, if you use the singleton instance it is automatically clustered 2) It is convenient to configure all of your caches in a single ehcache.xml file, rather than needing multiple ehcache files for each CacheManager instance. We should add a property that determines whether or not the EhCacheManager uses the singleton CacheManager or instantiates a new one.	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Jeremy Haile
SHIRO-75	SHIRO	WildcardPermission: toString, equals and hashCode	It would be nice if WildcardPermission implemented toString equals and hashCode. The toString method would make debugging and logging easier, and equals/hashCode can help to eliminate duplicate permissions and thus the number of security checks. I have attached a patch for this issue.	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Dain Sundstrom
SHIRO-76	SHIRO	Change instance variables from private to protected	Currently most instance variables are private, which limits options when the classes are extended. We are standardizing on protected from now on, but the existing classes should be updated.	Improvement	CLOSED	Major	Won't Fix	None	None	None	None		0	Les Hazlewood	Alan Cabrera
SHIRO-77	SHIRO	Allow annotations to be parameterized based on method arguments	This would allow annotations to include dynamic values based on the String values of method arguments. For example: @RequiresPermissions( "editUser:${userId}" ) public void editUser( String userId ) { ... } If the method was called as editUser( 3 ), JSecurity would then check the permission "editUser:3" and if the current subject doesn't have the permission, an AuthorizationException would be thrown. This should also work for the @RequiresRoles permission. An exception should also be thrown if the parameter specified cannot be found as a method argument.	Improvement	OPEN	Major	Unresolved	None	None	None	None		0	Unassigned	Jeremy Haile
SHIRO-78	SHIRO	PrincipalCollection should implement the java.util.Collection interface	No reason I can think of why it shouldn't implement this interface, since it already implements Iterable.	Improvement	CLOSED	Major	Won't Fix	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-79	SHIRO	PathConfigProcessor.processPathConfig() should return Filter	Currently return type of PathConfigProcessor.processPathConfig() is void. Would be nice if it returned a Filter instead to make configuring jsecurity in all-java easier, so you could for example write filters.add(pathMatchingFilter.processPathConfig(path, filterConfig)). It would also open up other interesting possibilities for filter implementations (delegating proxy filters etc.). The change is fully backwards compatible and simple, see patch.	Improvement	CLOSED	Trivial	Fixed	None	None	None	None		0	Unassigned	Kalle Korhonen
SHIRO-8	SHIRO	After logout() a getSubject() call still honors remember me	This cropped up for me because Spring's FrameworkServlet calls request.getUserName() by default, which under the hood will call JSecurity's getSubject(). This causes a new subject to be created that honors the remember me cookie. Instead - this new subject should be created without a remember me cookie being honored. One way we could work around this problem is by setting a request attribute when you logout that tells the RememberMeManager that it shouldn't honor the remember me cookie for the remainder of this request.	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Jeremy Haile
SHIRO-80	SHIRO	Login-logout-login scenario	Consider following code (used in JUnit test): Subject currentUser = SecurityUtils.getSubject(); //login as user with some permissions currentUser.login(new UsernamePasswordToken("empl1", "pass1")); //call some protected function currentUser.logout(); // now use user without required premissions currentUser.login(new UsernamePasswordToken("testUser", "blah")); //call protected method - should throw UnaauthorizedException This code looks ok, but it will not work. It will throw NPE on the line with second login() call. This is beacuse logout() method will clear the securityManager field in currentUser object, and the next login() call will call the method on this securityManager, rising NPE. It would be better if we allow somehow for such scenario - open question is how? At this moment the currentUser object after logout() method becomes completely useless. (Current workaround: after calling logout() and before second call to login() you have to replace currentUser object: currentUser = SecurityUtils.getSubject();	Improvement	CLOSED	Minor	Fixed	None	None	None	None		0	Les Hazlewood	Grzegorz Borkowski
SHIRO-81	SHIRO	Remove hard-dedepency of EhCache on core API	Per this thread: http://markmail.org/message/szkvpl2vxlj6zwno We'd like to ensure hard dependencies on Ehcache are removed from the Core API, perhaps defaulting to a standalone memory-based CacheManager that is suitable for production environments.	Improvement	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Les Hazlewood
SHIRO-82	SHIRO	Shiro strips anchor (#) values from the URL if user is unauthenticated	If I enter URL with anchor tags such as ( http://www.myhost.com/home.html#action=doSomething ) in an unauthenticated browser, the anchor tag values are stripped and I am directed to http://www.myhost.com/home.html. The anchor tags should remain after authentication so that the user is directed to the proper location in the application.	Bug	CLOSED	Major	Invalid	0.9-RC1	1.0.0	Authentication (log-in)	None		0	Unassigned	Geoff Schneider
SHIRO-83	SHIRO	Make sessionId cookie optional	In rich-client applications (Ajax, Flex, etc), it is more secure to have the rich-client framework explicitly send the session ID back to the server with every request in its native/encrypted format, rather than via cookies, which are more susceptible to man-in-the-middle attacks. GWT works this way as well. Make it a configuration possibility to disable cookies entirely, supporting this rich-client-over-http scenario.	Improvement	CLOSED	Major	Fixed	1.0.0	1.0.0	Web	None		0	Unassigned	Les Hazlewood
SHIRO-84	SHIRO	Enhance SavedRequest	After reviewing SHIRO-82, it appears that we could do some more robust Request saving logic. After looking at Tomcat's FormAuthenticator source code [1] (matchRequest and restoreRequest methods), there are more things we can do to make our solution more capable, like saving Cookies and other request-related data. [1] http://svn.apache.org/viewvc/tomcat/trunk/java/org/apache/catalina/authenticator/FormAuthenticator.java?revision=HEAD We should enhance the current SavedRequest implementation based on similar logic found in the above Tomcat code.	Improvement	OPEN	Minor	Unresolved	1.0.0	None	Web	None		0	Unassigned	Les Hazlewood
SHIRO-85	SHIRO	ShiroFilter entries being processed in arbitrary order	Copied over from the Ki issue. Original text: Entries in a ShiroFilter configuration are not being processed in the order they are listed in. If we have these lines: sessionManager=org.apache.shiro.web.session.DefaultWebSessionManager securityManager.sessionManager = $sessionManager securityManager.sessionDAO = $sessionDAO ...and line 3 is processed before line 2, the setSessionManager() call for the first line fails because the sessionManager is a ServletContainerSessionManager rather than a DefaultWebSessionManager. In ReflectionBuilder.buildObjects(), instanceMap and propertyMap need to be LinkedHashMap type, not just HashMap. With HashMap, the properties in ShiroFilter are being processed in arbitrary order, rather than the order listed. See the "need more help with SSO" thread in the Shiro mailing list: http://mail-archives.apache.org/mod_mbox/incubator-shiro-user/200908.mbox/browser	Bug	CLOSED	Minor	Fixed	1.0.0	0.9	Configuration	None		0	Les Hazlewood	Andy Tripp
SHIRO-86	SHIRO	Add Builder design pattern for arbitrary Subject construction	The latest SecurityManager API allows Subject construction via a Map context - the context is then delegated to a SubjectFactory which uses it to build a Subject instance. It would be nice to have a Builder implementation that builds up the context map automatically based on method invocations and in turn calls the SecurityManager method. This allows end-users to construct any Subject instance arbitrarily without knowing the context Key values required or knowledge of underlying SubjectFactory implementations. Other parts of Shiro's own code can utilize this Builder implementation directly to simplify code (e.g. ShiroFilter).	Improvement	CLOSED	Major	Fixed	1.0.0	1.0.0	Subject	None		0	Les Hazlewood	Les Hazlewood
SHIRO-87	SHIRO	Fix package name of package-info.java in shiro-core	Trivial patch - add to root of shiro-core: Index: src/main/java/org/apache/shiro/package-info.java =================================================================== — src/main/java/org/apache/shiro/package-info.java (revision 807073) +++ src/main/java/org/apache/shiro/package-info.java (working copy) @@ -21,4 +21,4 @@ by applications, {@link org.apache.shiro.SecurityUtils SecurityUtils} and {@link org.apache.shiro.ShiroException ShiroException} . */ -package org.shiro; +package org.apache.shiro;	Bug	CLOSED	Trivial	Fixed	Incubation	1.0.0	Documentation	None		0	Unassigned	Kalle Korhonen
SHIRO-88	SHIRO	Create a profile for installing javadocs and source to keep build time short	Move installing and deploying javadocs and sources to "docs" profile while deciding on if and where to deploy a Maven-based site	Improvement	CLOSED	Trivial	Fixed	1.0.0	1.0.0	Documentation	None		0	Unassigned	Kalle Korhonen
SHIRO-89	SHIRO	Sample Spring Application - WebStart won't launch	this is due to the necessary .jars not being in the .war file in the right place. Maybe the assembly plugin will be required to make sure .jars are accessible to be downloaded (/WEB-INF/lib is not accessible).	Bug	CLOSED	Major	Fixed	0.9	1.0.0	Sample Apps	None		0	Kalle Korhonen	Les Hazlewood
SHIRO-9	SHIRO	Remember-me cookie path wrong if servlet context path is root ("/")	If a web application is installed in the root context of a servlet container, the remember-me cookie defaults to a value of "" (because that's what request.getContextPath() returns). Unfortunately, this appears to attach the cookie to the current request's URL rather than the required root, "/". The offending code is in org.jsecurity.web.attr.CookieAttribute where the onStoreValue() method does this: String path = getPath() != null ? getPath() : request.getContextPath() We should either always append '/' to the context path or set the cookie path to "/" if the request context path is an empty string.	Bug	CLOSED	Major	Fixed	None	None	None	None		0	Les Hazlewood	Peter Ledbrook
SHIRO-90	SHIRO	org.apache.shiro.session.mgt.DefaultSessionManagerTest.testGlobalTimeout is unreliable	testGlobalTimeout in DefaultSessionManagerTest frequently fails on the first assert (when session is supposed to be valid), but not every time. If I increase GlobalSessionTimeout to 200ms from 125ms I couldn't make it fail. I didn't dig deep enough to find out whether the problem is indicative of a bug in the application test or just not well-constructed test.	Test	CLOSED	Minor	Fixed	0.9	1.0.0	Session Management	None	java 1.6, windows xp	0	Unassigned	Kalle Korhonen
SHIRO-91	SHIRO	Tests for getRememberedPrincipals and getRememberedPrincipalsDecryptionError in WebRememberMeManagerTest are disabled	@Test annotation for getRememberedPrincipals and getRememberedPrincipalsDecryptionError tests in WebRememberMeManagerTest is commented out. If re-enabled, the tests won't succeed. RememberMe doesn't seem to be working anymore after Subject was refactored and SubjectBuilder introduced (I'll look into it more and probably open a different issue for that one - but these tests need to be enabled to serve as regression testing suite).	Test	CLOSED	Major	Fixed	0.9	1.0.0	Web	None		0	Unassigned	Kalle Korhonen
SHIRO-92	SHIRO	Add method to Subject interface: isRemembered()	Per mailing list discussion, a few people asked that a new method, isRemembered() be added to the Subject interface to determine if the subject reflects a remembered identity. There were no objections to this addition.	New Feature	CLOSED	Minor	Fixed	1.0.0	1.0.0	Subject	None		0	Unassigned	Les Hazlewood
SHIRO-93	SHIRO	Add container-based integration tests for samples/web module	Patch(es) to follow - the first one includes a base class to derive the test classes and one sample tests. I'll add specific tests for login/logout & remember later.	Test	CLOSED	Major	Fixed	1.0.0	1.0.0	Sample Apps	None		0	Unassigned	Kalle Korhonen
SHIRO-94	SHIRO	Update web pages to change JSecurity and Ki to Shiro	Update web pages to change JSecurity and Ki to Shiro An Introduction to Ki (formerly JSecurity) - A Beginner's Tutorial by Bruce Phillips Part 1-5	Task	CLOSED	Minor	Fixed	None	1.0.0	None	None		0	Unassigned	Alex Salazar
SHIRO-95	SHIRO	Specifying my own Cache in ShiroFilter not working	When I specify my own CacheManager and Cache object in my ShiroFilter, the default Cache manager is being used anyway. See thread "need help pluggin in my own session cache" in August and September 2009 archives of the Shiro mailing list for details. This is another order-of-operations issue.	Bug	CLOSED	Minor	Fixed	1.0.0	1.0.0	Configuration	None		0	Les Hazlewood	Andy Tripp
SHIRO-96	SHIRO	Add meaningful integration tests to assert key web functionality	Related to SHIRO-93 (but you closed it already - could have re-opened as well). Assert login/logout and remember me functionality. Also updating htmlunit to newly released 2.6. Note that tests revealed an interesting thread-safety issue: sometimes getAuthorizationCache().get(upToken.getUsername()); on line 141 of SimpleAccountRealm returned null, causing the authentication to fail. It happened much frequently when I was running the test via Eclipse, but couldn't get it to run when running via Maven. I took an initial look at the CacheManager and didn't follow through completely, but it looked like that a map initialization somewhere may not have been synchronized. Note that these tests run considerably faster than if a human was using a browser but otherwise they don't semantically do anything else different. A patch to follow.	Test	CLOSED	Major	Fixed	1.0.0	1.0.0	Authentication (log-in)	None		0	Unassigned	Kalle Korhonen
SHIRO-97	SHIRO	Add Navigation Sidebar to Shiro's Confluence site	In order to make navigation easier for new users, a navigation sidebar should be added to the site with all the important links. This requires space_admin priviledges on Confluence. Here are the directions on how to do it. The pagetree page in the directions should be replaced with the NavColumn page in shiro. http://confluence.atlassian.com/display/DOC/Adding+a+Navigation+Sidebar	Task	CLOSED	Minor	Fixed	None	None	None	None		0	Unassigned	Alex Salazar
SHIRO-98	SHIRO	Add License page to Shiro's website	Add a page with Apache's 2.0 license so that new users can easily access it.	Task	CLOSED	Trivial	Fixed	None	None	None	None		0	Unassigned	Alex Salazar
SHIRO-99	SHIRO	Create NavColumn for use in the Sidebar		Sub-task	CLOSED	Trivial	Fixed	None	None	None	None		0	Unassigned	Alex Salazar
